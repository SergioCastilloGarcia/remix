{
	"id": "0fa07e68ec063b52dc3cdc5360f2e8fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Bank.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.10;\r\nimport \"./Token.sol\";\r\n\r\ncontract Bank {\r\n    //assign Token contract to variable\r\n    Token private token;\r\n    // hash address - uint\r\n    mapping(address => uint) public clientsBalanceBNB;\r\n    mapping(address => uint) public specialClientsBalanceBNB;\r\n\r\n    mapping(address => uint) public depositTimeStamp;\r\n    mapping(address => uint) public specialDepositTimeStamp;\r\n\r\n    mapping(address => bool) public isDeposited;\r\n    mapping(address => bool) public isSpecialDeposited;\r\n  // Dirección donde se enviará la tarifa de retiro\r\n    //address payable public feeReceiver = payable(0x4906BB5c1056d92A436191169A8ad383dC888aeb);\r\n    address payable public feeReceiver = payable(0x50d3b84a2b1787b7704DD50c67733b6b5B293629);\r\n   \r\n    uint public withdrawalFee = 0.05 ether;\r\n\r\n\r\n    \r\n    //pass as constructor argument deployed Token contract\r\n    constructor(Token _token) {\r\n        //assign token deployed contract to variable\r\n        token = _token;\r\n    }\r\n    function deposit() payable public {\r\n        clientsBalanceBNB[msg.sender] = clientsBalanceBNB[msg.sender] + msg.value;\r\n        depositTimeStamp[msg.sender] = block.timestamp;\r\n        isDeposited[msg.sender] = true; \r\n\r\n    }\r\n    function specialDeposit() public payable {\r\n        require(msg.value > 0, \"El monto del deposito debe ser mayor que 0\");\r\n\r\n        specialClientsBalanceBNB[msg.sender] += msg.value;\r\n        specialDepositTimeStamp[msg.sender] = block.timestamp;\r\n        isSpecialDeposited[msg.sender] = true;\r\n    }\r\n    function withdraw() payable public  {\r\n        require(isDeposited[msg.sender] == true, 'Error, no previous deposit');\r\n\r\n        // Verificar que el usuario ha enviado la tasa de retiro\r\n        require(msg.value >= withdrawalFee, \"Se debe enviar al menos 0.05 BNB como tasa de retiro\");\r\n\r\n        // interest BMIW\r\n        uint interest = _calculateInterest(msg.sender);\r\n\r\n        // return the BNB to original wallet\r\n        payable(msg.sender).transfer(clientsBalanceBNB[msg.sender]- 0.008 ether );\r\n        clientsBalanceBNB[msg.sender] = 0;\r\n\r\n        // Crear el token y lo envia a la addres del msg.sender\r\n        token.mint(msg.sender, interest);\r\n        // reiniciar reposito\r\n        depositTimeStamp[msg.sender] = 0;\r\n        isDeposited[msg.sender] = false;\r\n\r\n        feeReceiver.transfer(withdrawalFee);\r\n    }\r\n   function specialWithdraw() public payable {\r\n        require(isSpecialDeposited[msg.sender], \"No tienes un deposito especial activo\");\r\n        require(block.timestamp >= specialDepositTimeStamp[msg.sender] + 10 minutes, \"El retiro especial solo esta disponible despues de 10 minutos\");\r\n        require(msg.value >= withdrawalFee, \"Se debe enviar al menos 0.05 BNB como tasa de retiro\");\r\n\r\n        uint interest = _calculateSpecialInterest(msg.sender);\r\n        feeReceiver.transfer(withdrawalFee);\r\n        payable(msg.sender).transfer(specialClientsBalanceBNB[msg.sender]);\r\n\r\n        specialClientsBalanceBNB[msg.sender] = 0;\r\n        isSpecialDeposited[msg.sender] = false;\r\n        token.mint(msg.sender, interest);\r\n    }\r\n        // Nueva función para consultar el balance en BNB\r\n    function getDepositBalance() external view returns (uint) {\r\n        return clientsBalanceBNB[msg.sender];\r\n    }\r\n    function calculateInterest() external view returns (uint) {\r\n        return _calculateInterest(msg.sender);\r\n    }\r\n    function getDepositBalanceSpecial() external view returns (uint) {\r\n        return specialClientsBalanceBNB[msg.sender];\r\n    }\r\n    function calculateInterestSpecial() external view returns (uint) {\r\n        return _calculateSpecialInterest(msg.sender);\r\n    }\r\n    function _calculateInterest(address user) private view returns (uint) {\r\n        require(isDeposited[user], \"No tienes un deposito activo\");\r\n\r\n        uint depositTotalTime = block.timestamp - depositTimeStamp[user];\r\n        uint interestPerSecond = (100 * clientsBalanceBNB[user]) / 31668017;\r\n        uint interest = interestPerSecond * depositTotalTime;\r\n\r\n        return interest;\r\n    }\r\n    function _calculateSpecialInterest(address user) internal view returns (uint) {\r\n        uint depositTotalTime = block.timestamp - specialDepositTimeStamp[user];\r\n        uint interestPerSecond = (200 * specialClientsBalanceBNB[user]) / 31668017; // Doble interés\r\n        return interestPerSecond * depositTotalTime;\r\n    }\r\n}\r\n"
			},
			"contracts/Token.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.10;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract Token is ERC20 {\r\n    // direción del minter, cartera que puede iniciar la generación de nuevos tokens\r\n    address public minter;\r\n\r\n\r\n    constructor() payable ERC20(\"Bmiw\", \"BMIW\") {\r\n        // asignación del minter inicial\r\n        minter = msg.sender;\r\n    }\r\n\r\n   function mint(address account, uint256 amount) public {\r\n        require(msg.sender == minter, 'Error, msg.sender is not the minter');\r\n        _mint(account, amount);\r\n    }\r\n    function passMinterRole(address nuevoMinter) public returns (bool){\r\n        // restriccion que se tiene que cumplir\r\n        require(msg.sender == minter, 'Error, msg.sender is not the minter');\r\n        minter = nuevoMinter;\r\n        return true;\r\n    }\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Bank.sol": {
				"Bank": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract Token",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "calculateInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateInterestSpecial",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "clientsBalanceBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDepositBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDepositBalanceSpecial",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isDeposited",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isSpecialDeposited",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "specialClientsBalanceBNB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "specialDeposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "specialDepositTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "specialWithdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Bank.sol\":88:4441  contract Bank {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Bank.sol\":748:790  0x50d3b84a2b1787b7704DD50c67733b6b5B293629 */\n  0x50d3b84a2b1787b7704dd50c67733b6b5b293629\n    /* \"contracts/Bank.sol\":703:791  address payable public feeReceiver = payable(0x50d3b84a2b1787b7704DD50c67733b6b5B293629) */\n  0x07\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Bank.sol\":831:841  0.05 ether */\n  0xb1a2bc2ec50000\n    /* \"contracts/Bank.sol\":803:841  uint public withdrawalFee = 0.05 ether */\n  0x08\n  sstore\n    /* \"contracts/Bank.sol\":918:1031  constructor(Token _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Bank.sol\":1017:1023  _token */\n  dup1\n    /* \"contracts/Bank.sol\":1009:1014  token */\n  0x00\n  dup1\n    /* \"contracts/Bank.sol\":1009:1023  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Bank.sol\":918:1031  constructor(Token _token) {... */\n  pop\n    /* \"contracts/Bank.sol\":88:4441  contract Bank {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_12:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_23\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_13:\n    /* \"#utility.yul\":771:809   */\n  tag_25\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  dup1\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_26:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_14:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_28\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1396   */\ntag_3:\n    /* \"#utility.yul\":1101:1107   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  0x20\n    /* \"#utility.yul\":1138:1147   */\n  dup3\n    /* \"#utility.yul\":1129:1136   */\n  dup5\n    /* \"#utility.yul\":1125:1148   */\n  sub\n    /* \"#utility.yul\":1121:1153   */\n  slt\n    /* \"#utility.yul\":1118:1237   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1156:1235   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1118:1237   */\ntag_30:\n    /* \"#utility.yul\":1276:1277   */\n  0x00\n    /* \"#utility.yul\":1301:1379   */\n  tag_32\n    /* \"#utility.yul\":1371:1378   */\n  dup5\n    /* \"#utility.yul\":1362:1368   */\n  dup3\n    /* \"#utility.yul\":1351:1360   */\n  dup6\n    /* \"#utility.yul\":1347:1369   */\n  add\n    /* \"#utility.yul\":1301:1379   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1291:1379   */\n  swap2\n  pop\n    /* \"#utility.yul\":1247:1389   */\n  pop\n    /* \"#utility.yul\":1017:1396   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Bank.sol\":88:4441  contract Bank {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Bank.sol\":88:4441  contract Bank {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xae6441a3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xdcc52a48\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xdcc52a48\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdff05f82\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xeb0c4955\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xed2d7a97\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0xae6441a3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb3f00674\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xc8510e4e\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x726fe82b\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x726fe82b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x73732024\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8bc7e8c4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8ce5fcc9\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x0497de4a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x12fa90a1\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x249ee9e1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Bank.sol\":3208:3321  function getDepositBalance() external view returns (uint) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":3447:3574  function getDepositBalanceSpecial() external view returns (uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":204:253  mapping(address => uint) public clientsBalanceBNB */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":1578:2408  function withdraw() payable public  {... */\n    tag_5:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Bank.sol\":380:435  mapping(address => uint) public specialDepositTimeStamp */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":444:487  mapping(address => bool) public isDeposited */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":803:841  uint public withdrawalFee = 0.05 ether */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":494:544  mapping(address => bool) public isSpecialDeposited */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":3580:3708  function calculateInterestSpecial() external view returns (uint) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":703:791  address payable public feeReceiver = payable(0x50d3b84a2b1787b7704DD50c67733b6b5B293629) */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":1270:1572  function specialDeposit() public payable {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"contracts/Bank.sol\":1037:1264  function deposit() payable public {... */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/Bank.sol\":260:316  mapping(address => uint) public specialClientsBalanceBNB */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":325:373  mapping(address => uint) public depositTimeStamp */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":3327:3441  function calculateInterest() external view returns (uint) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Bank.sol\":2413:3142  function specialWithdraw() public payable {... */\n    tag_17:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/Bank.sol\":3208:3321  function getDepositBalance() external view returns (uint) {... */\n    tag_23:\n        /* \"contracts/Bank.sol\":3260:3264  uint */\n      0x00\n        /* \"contracts/Bank.sol\":3284:3301  clientsBalanceBNB */\n      0x01\n        /* \"contracts/Bank.sol\":3284:3313  clientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":3302:3312  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3284:3313  clientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":3277:3313  return clientsBalanceBNB[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":3208:3321  function getDepositBalance() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Bank.sol\":3447:3574  function getDepositBalanceSpecial() external view returns (uint) {... */\n    tag_28:\n        /* \"contracts/Bank.sol\":3506:3510  uint */\n      0x00\n        /* \"contracts/Bank.sol\":3530:3554  specialClientsBalanceBNB */\n      0x02\n        /* \"contracts/Bank.sol\":3530:3566  specialClientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":3555:3565  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3530:3566  specialClientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":3523:3566  return specialClientsBalanceBNB[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":3447:3574  function getDepositBalanceSpecial() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Bank.sol\":204:253  mapping(address => uint) public clientsBalanceBNB */\n    tag_34:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":1578:2408  function withdraw() payable public  {... */\n    tag_37:\n        /* \"contracts/Bank.sol\":1660:1664  true */\n      0x01\n        /* \"contracts/Bank.sol\":1633:1664  isDeposited[msg.sender] == true */\n      iszero\n      iszero\n        /* \"contracts/Bank.sol\":1633:1644  isDeposited */\n      0x05\n        /* \"contracts/Bank.sol\":1633:1656  isDeposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1645:1655  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1633:1656  isDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Bank.sol\":1633:1664  isDeposited[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Bank.sol\":1625:1695  require(isDeposited[msg.sender] == true, 'Error, no previous deposit') */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/Bank.sol\":1795:1808  withdrawalFee */\n      sload(0x08)\n        /* \"contracts/Bank.sol\":1782:1791  msg.value */\n      callvalue\n        /* \"contracts/Bank.sol\":1782:1808  msg.value >= withdrawalFee */\n      lt\n      iszero\n        /* \"contracts/Bank.sol\":1774:1865  require(msg.value >= withdrawalFee, \"Se debe enviar al menos 0.05 BNB como tasa de retiro\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"contracts/Bank.sol\":1904:1917  uint interest */\n      0x00\n        /* \"contracts/Bank.sol\":1920:1950  _calculateInterest(msg.sender) */\n      tag_96\n        /* \"contracts/Bank.sol\":1939:1949  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1920:1938  _calculateInterest */\n      tag_97\n        /* \"contracts/Bank.sol\":1920:1950  _calculateInterest(msg.sender) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Bank.sol\":1904:1950  uint interest = _calculateInterest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":2017:2027  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2009:2037  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2009:2082  payable(msg.sender).transfer(clientsBalanceBNB[msg.sender]- 0.008 ether ) */\n      0x08fc\n        /* \"contracts/Bank.sol\":2069:2080  0.008 ether */\n      0x1c6bf526340000\n        /* \"contracts/Bank.sol\":2038:2055  clientsBalanceBNB */\n      0x01\n        /* \"contracts/Bank.sol\":2038:2067  clientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2056:2066  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2038:2067  clientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":2038:2080  clientsBalanceBNB[msg.sender]- 0.008 ether */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/Bank.sol\":2009:2082  payable(msg.sender).transfer(clientsBalanceBNB[msg.sender]- 0.008 ether ) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_101\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_101:\n      pop\n        /* \"contracts/Bank.sol\":2125:2126  0 */\n      0x00\n        /* \"contracts/Bank.sol\":2093:2110  clientsBalanceBNB */\n      0x01\n        /* \"contracts/Bank.sol\":2093:2122  clientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2111:2121  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2093:2122  clientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":2093:2126  clientsBalanceBNB[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":2204:2209  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2204:2214  token.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/Bank.sol\":2215:2225  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2227:2235  interest */\n      dup4\n        /* \"contracts/Bank.sol\":2204:2236  token.mint(msg.sender, interest) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Bank.sol\":2309:2310  0 */\n      0x00\n        /* \"contracts/Bank.sol\":2278:2294  depositTimeStamp */\n      0x03\n        /* \"contracts/Bank.sol\":2278:2306  depositTimeStamp[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2295:2305  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2278:2306  depositTimeStamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":2278:2310  depositTimeStamp[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":2347:2352  false */\n      0x00\n        /* \"contracts/Bank.sol\":2321:2332  isDeposited */\n      0x05\n        /* \"contracts/Bank.sol\":2321:2344  isDeposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2333:2343  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2321:2344  isDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":2321:2352  isDeposited[msg.sender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":2365:2376  feeReceiver */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2365:2385  feeReceiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2365:2400  feeReceiver.transfer(withdrawalFee) */\n      0x08fc\n        /* \"contracts/Bank.sol\":2386:2399  withdrawalFee */\n      sload(0x08)\n        /* \"contracts/Bank.sol\":2365:2400  feeReceiver.transfer(withdrawalFee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n        /* \"contracts/Bank.sol\":1614:2408  {... */\n      pop\n        /* \"contracts/Bank.sol\":1578:2408  function withdraw() payable public  {... */\n      jump\t// out\n        /* \"contracts/Bank.sol\":380:435  mapping(address => uint) public specialDepositTimeStamp */\n    tag_41:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":444:487  mapping(address => bool) public isDeposited */\n    tag_46:\n      mstore(0x20, 0x05)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":803:841  uint public withdrawalFee = 0.05 ether */\n    tag_51:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":494:544  mapping(address => bool) public isSpecialDeposited */\n    tag_56:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":3580:3708  function calculateInterestSpecial() external view returns (uint) {... */\n    tag_60:\n        /* \"contracts/Bank.sol\":3639:3643  uint */\n      0x00\n        /* \"contracts/Bank.sol\":3663:3700  _calculateSpecialInterest(msg.sender) */\n      tag_110\n        /* \"contracts/Bank.sol\":3689:3699  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3663:3688  _calculateSpecialInterest */\n      tag_111\n        /* \"contracts/Bank.sol\":3663:3700  _calculateSpecialInterest(msg.sender) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Bank.sol\":3656:3700  return _calculateSpecialInterest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":3580:3708  function calculateInterestSpecial() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Bank.sol\":703:791  address payable public feeReceiver = payable(0x50d3b84a2b1787b7704DD50c67733b6b5B293629) */\n    tag_64:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":1270:1572  function specialDeposit() public payable {... */\n    tag_68:\n        /* \"contracts/Bank.sol\":1342:1343  0 */\n      0x00\n        /* \"contracts/Bank.sol\":1330:1339  msg.value */\n      callvalue\n        /* \"contracts/Bank.sol\":1330:1343  msg.value > 0 */\n      gt\n        /* \"contracts/Bank.sol\":1322:1390  require(msg.value > 0, \"El monto del deposito debe ser mayor que 0\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/Bank.sol\":1443:1452  msg.value */\n      callvalue\n        /* \"contracts/Bank.sol\":1403:1427  specialClientsBalanceBNB */\n      0x02\n        /* \"contracts/Bank.sol\":1403:1439  specialClientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1428:1438  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1403:1439  specialClientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":1403:1452  specialClientsBalanceBNB[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1501:1516  block.timestamp */\n      timestamp\n        /* \"contracts/Bank.sol\":1463:1486  specialDepositTimeStamp */\n      0x04\n        /* \"contracts/Bank.sol\":1463:1498  specialDepositTimeStamp[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1487:1497  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1463:1498  specialDepositTimeStamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":1463:1516  specialDepositTimeStamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1560:1564  true */\n      0x01\n        /* \"contracts/Bank.sol\":1527:1545  isSpecialDeposited */\n      0x06\n        /* \"contracts/Bank.sol\":1527:1557  isSpecialDeposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1546:1556  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1527:1557  isSpecialDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":1527:1564  isSpecialDeposited[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1270:1572  function specialDeposit() public payable {... */\n      jump\t// out\n        /* \"contracts/Bank.sol\":1037:1264  function deposit() payable public {... */\n    tag_70:\n        /* \"contracts/Bank.sol\":1146:1155  msg.value */\n      callvalue\n        /* \"contracts/Bank.sol\":1114:1131  clientsBalanceBNB */\n      0x01\n        /* \"contracts/Bank.sol\":1114:1143  clientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1132:1142  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1114:1143  clientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":1114:1155  clientsBalanceBNB[msg.sender] + msg.value */\n      tag_119\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_119:\n        /* \"contracts/Bank.sol\":1082:1099  clientsBalanceBNB */\n      0x01\n        /* \"contracts/Bank.sol\":1082:1111  clientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1100:1110  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1082:1111  clientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":1082:1155  clientsBalanceBNB[msg.sender] = clientsBalanceBNB[msg.sender] + msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1197:1212  block.timestamp */\n      timestamp\n        /* \"contracts/Bank.sol\":1166:1182  depositTimeStamp */\n      0x03\n        /* \"contracts/Bank.sol\":1166:1194  depositTimeStamp[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1183:1193  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1166:1194  depositTimeStamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":1166:1212  depositTimeStamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1249:1253  true */\n      0x01\n        /* \"contracts/Bank.sol\":1223:1234  isDeposited */\n      0x05\n        /* \"contracts/Bank.sol\":1223:1246  isDeposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":1235:1245  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":1223:1246  isDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":1223:1253  isDeposited[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":1037:1264  function deposit() payable public {... */\n      jump\t// out\n        /* \"contracts/Bank.sol\":260:316  mapping(address => uint) public specialClientsBalanceBNB */\n    tag_74:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":325:373  mapping(address => uint) public depositTimeStamp */\n    tag_79:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Bank.sol\":3327:3441  function calculateInterest() external view returns (uint) {... */\n    tag_83:\n        /* \"contracts/Bank.sol\":3379:3383  uint */\n      0x00\n        /* \"contracts/Bank.sol\":3403:3433  _calculateInterest(msg.sender) */\n      tag_121\n        /* \"contracts/Bank.sol\":3422:3432  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3403:3421  _calculateInterest */\n      tag_97\n        /* \"contracts/Bank.sol\":3403:3433  _calculateInterest(msg.sender) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Bank.sol\":3396:3433  return _calculateInterest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":3327:3441  function calculateInterest() external view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Bank.sol\":2413:3142  function specialWithdraw() public payable {... */\n    tag_86:\n        /* \"contracts/Bank.sol\":2474:2492  isSpecialDeposited */\n      0x06\n        /* \"contracts/Bank.sol\":2474:2504  isSpecialDeposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2493:2503  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2474:2504  isSpecialDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Bank.sol\":2466:2546  require(isSpecialDeposited[msg.sender], \"No tienes un deposito especial activo\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/Bank.sol\":2622:2632  10 minutes */\n      0x0258\n        /* \"contracts/Bank.sol\":2584:2607  specialDepositTimeStamp */\n      0x04\n        /* \"contracts/Bank.sol\":2584:2619  specialDepositTimeStamp[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2608:2618  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2584:2619  specialDepositTimeStamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":2584:2632  specialDepositTimeStamp[msg.sender] + 10 minutes */\n      tag_126\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_126:\n        /* \"contracts/Bank.sol\":2565:2580  block.timestamp */\n      timestamp\n        /* \"contracts/Bank.sol\":2565:2632  block.timestamp >= specialDepositTimeStamp[msg.sender] + 10 minutes */\n      lt\n      iszero\n        /* \"contracts/Bank.sol\":2557:2698  require(block.timestamp >= specialDepositTimeStamp[msg.sender] + 10 minutes, \"El retiro especial solo esta disponible despues de 10 minutos\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"contracts/Bank.sol\":2730:2743  withdrawalFee */\n      sload(0x08)\n        /* \"contracts/Bank.sol\":2717:2726  msg.value */\n      callvalue\n        /* \"contracts/Bank.sol\":2717:2743  msg.value >= withdrawalFee */\n      lt\n      iszero\n        /* \"contracts/Bank.sol\":2709:2800  require(msg.value >= withdrawalFee, \"Se debe enviar al menos 0.05 BNB como tasa de retiro\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_95\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"contracts/Bank.sol\":2813:2826  uint interest */\n      0x00\n        /* \"contracts/Bank.sol\":2829:2866  _calculateSpecialInterest(msg.sender) */\n      tag_132\n        /* \"contracts/Bank.sol\":2855:2865  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2829:2854  _calculateSpecialInterest */\n      tag_111\n        /* \"contracts/Bank.sol\":2829:2866  _calculateSpecialInterest(msg.sender) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/Bank.sol\":2813:2866  uint interest = _calculateSpecialInterest(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":2877:2888  feeReceiver */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2877:2897  feeReceiver.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2877:2912  feeReceiver.transfer(withdrawalFee) */\n      0x08fc\n        /* \"contracts/Bank.sol\":2898:2911  withdrawalFee */\n      sload(0x08)\n        /* \"contracts/Bank.sol\":2877:2912  feeReceiver.transfer(withdrawalFee) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_134:\n      pop\n        /* \"contracts/Bank.sol\":2931:2941  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2923:2951  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":2923:2989  payable(msg.sender).transfer(specialClientsBalanceBNB[msg.sender]) */\n      0x08fc\n        /* \"contracts/Bank.sol\":2952:2976  specialClientsBalanceBNB */\n      0x02\n        /* \"contracts/Bank.sol\":2952:2988  specialClientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":2977:2987  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":2952:2988  specialClientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":2923:2989  payable(msg.sender).transfer(specialClientsBalanceBNB[msg.sender]) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n        /* \"contracts/Bank.sol\":3041:3042  0 */\n      0x00\n        /* \"contracts/Bank.sol\":3002:3026  specialClientsBalanceBNB */\n      0x02\n        /* \"contracts/Bank.sol\":3002:3038  specialClientsBalanceBNB[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":3027:3037  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3002:3038  specialClientsBalanceBNB[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Bank.sol\":3002:3042  specialClientsBalanceBNB[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":3086:3091  false */\n      0x00\n        /* \"contracts/Bank.sol\":3053:3071  isSpecialDeposited */\n      0x06\n        /* \"contracts/Bank.sol\":3053:3083  isSpecialDeposited[msg.sender] */\n      0x00\n        /* \"contracts/Bank.sol\":3072:3082  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3053:3083  isSpecialDeposited[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Bank.sol\":3053:3091  isSpecialDeposited[msg.sender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Bank.sol\":3102:3107  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Bank.sol\":3102:3112  token.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/Bank.sol\":3113:3123  msg.sender */\n      caller\n        /* \"contracts/Bank.sol\":3125:3133  interest */\n      dup4\n        /* \"contracts/Bank.sol\":3102:3134  token.mint(msg.sender, interest) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_137:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Bank.sol\":2455:3142  {... */\n      pop\n        /* \"contracts/Bank.sol\":2413:3142  function specialWithdraw() public payable {... */\n      jump\t// out\n        /* \"contracts/Bank.sol\":3714:4107  function _calculateInterest(address user) private view returns (uint) {... */\n    tag_97:\n        /* \"contracts/Bank.sol\":3778:3782  uint */\n      0x00\n        /* \"contracts/Bank.sol\":3803:3814  isDeposited */\n      0x05\n        /* \"contracts/Bank.sol\":3803:3820  isDeposited[user] */\n      0x00\n        /* \"contracts/Bank.sol\":3815:3819  user */\n      dup4\n        /* \"contracts/Bank.sol\":3803:3820  isDeposited[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Bank.sol\":3795:3853  require(isDeposited[user], \"No tienes un deposito activo\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/Bank.sol\":3866:3887  uint depositTotalTime */\n      0x00\n        /* \"contracts/Bank.sol\":3908:3924  depositTimeStamp */\n      0x03\n        /* \"contracts/Bank.sol\":3908:3930  depositTimeStamp[user] */\n      0x00\n        /* \"contracts/Bank.sol\":3925:3929  user */\n      dup5\n        /* \"contracts/Bank.sol\":3908:3930  depositTimeStamp[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":3890:3905  block.timestamp */\n      timestamp\n        /* \"contracts/Bank.sol\":3890:3930  block.timestamp - depositTimeStamp[user] */\n      tag_145\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_145:\n        /* \"contracts/Bank.sol\":3866:3930  uint depositTotalTime = block.timestamp - depositTimeStamp[user] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":3941:3963  uint interestPerSecond */\n      0x00\n        /* \"contracts/Bank.sol\":4000:4008  31668017 */\n      0x01e33731\n        /* \"contracts/Bank.sol\":3973:3990  clientsBalanceBNB */\n      0x01\n        /* \"contracts/Bank.sol\":3973:3996  clientsBalanceBNB[user] */\n      0x00\n        /* \"contracts/Bank.sol\":3991:3995  user */\n      dup7\n        /* \"contracts/Bank.sol\":3973:3996  clientsBalanceBNB[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":3967:3970  100 */\n      0x64\n        /* \"contracts/Bank.sol\":3967:3996  100 * clientsBalanceBNB[user] */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/Bank.sol\":3966:4008  (100 * clientsBalanceBNB[user]) / 31668017 */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/Bank.sol\":3941:4008  uint interestPerSecond = (100 * clientsBalanceBNB[user]) / 31668017 */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":4019:4032  uint interest */\n      0x00\n        /* \"contracts/Bank.sol\":4055:4071  depositTotalTime */\n      dup3\n        /* \"contracts/Bank.sol\":4035:4052  interestPerSecond */\n      dup3\n        /* \"contracts/Bank.sol\":4035:4071  interestPerSecond * depositTotalTime */\n      tag_150\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_150:\n        /* \"contracts/Bank.sol\":4019:4071  uint interest = interestPerSecond * depositTotalTime */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":4091:4099  interest */\n      dup1\n        /* \"contracts/Bank.sol\":4084:4099  return interest */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Bank.sol\":3714:4107  function _calculateInterest(address user) private view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Bank.sol\":4113:4438  function _calculateSpecialInterest(address user) internal view returns (uint) {... */\n    tag_111:\n        /* \"contracts/Bank.sol\":4185:4189  uint */\n      0x00\n        /* \"contracts/Bank.sol\":4202:4223  uint depositTotalTime */\n      dup1\n        /* \"contracts/Bank.sol\":4244:4267  specialDepositTimeStamp */\n      0x04\n        /* \"contracts/Bank.sol\":4244:4273  specialDepositTimeStamp[user] */\n      0x00\n        /* \"contracts/Bank.sol\":4268:4272  user */\n      dup5\n        /* \"contracts/Bank.sol\":4244:4273  specialDepositTimeStamp[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":4226:4241  block.timestamp */\n      timestamp\n        /* \"contracts/Bank.sol\":4226:4273  block.timestamp - specialDepositTimeStamp[user] */\n      tag_152\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_152:\n        /* \"contracts/Bank.sol\":4202:4273  uint depositTotalTime = block.timestamp - specialDepositTimeStamp[user] */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":4284:4306  uint interestPerSecond */\n      0x00\n        /* \"contracts/Bank.sol\":4350:4358  31668017 */\n      0x01e33731\n        /* \"contracts/Bank.sol\":4316:4340  specialClientsBalanceBNB */\n      0x02\n        /* \"contracts/Bank.sol\":4316:4346  specialClientsBalanceBNB[user] */\n      0x00\n        /* \"contracts/Bank.sol\":4341:4345  user */\n      dup7\n        /* \"contracts/Bank.sol\":4316:4346  specialClientsBalanceBNB[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Bank.sol\":4310:4313  200 */\n      0xc8\n        /* \"contracts/Bank.sol\":4310:4346  200 * specialClientsBalanceBNB[user] */\n      tag_153\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_153:\n        /* \"contracts/Bank.sol\":4309:4358  (200 * specialClientsBalanceBNB[user]) / 31668017 */\n      tag_154\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_154:\n        /* \"contracts/Bank.sol\":4284:4358  uint interestPerSecond = (200 * specialClientsBalanceBNB[user]) / 31668017 */\n      swap1\n      pop\n        /* \"contracts/Bank.sol\":4414:4430  depositTotalTime */\n      dup2\n        /* \"contracts/Bank.sol\":4394:4411  interestPerSecond */\n      dup2\n        /* \"contracts/Bank.sol\":4394:4430  interestPerSecond * depositTotalTime */\n      tag_155\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_155:\n        /* \"contracts/Bank.sol\":4387:4430  return interestPerSecond * depositTotalTime */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Bank.sol\":4113:4438  function _calculateSpecialInterest(address user) internal view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_156:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_157:\n        /* \"#utility.yul\":177:201   */\n      tag_188\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_156\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_190\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_157\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_159:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_161:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_162:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_196\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_161\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_163:\n        /* \"#utility.yul\":1076:1100   */\n      tag_198\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_162\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_199:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_164:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_201\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_163\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_33:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_204\n      tag_159\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1352:1471   */\n    tag_203:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_205\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_164\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_165:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1816   */\n    tag_166:\n        /* \"#utility.yul\":1788:1809   */\n      tag_208\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1788:1809   */\n      tag_165\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1783:1786   */\n      dup3\n        /* \"#utility.yul\":1776:1810   */\n      mstore\n        /* \"#utility.yul\":1707:1816   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2032   */\n    tag_48:\n        /* \"#utility.yul\":1909:1913   */\n      0x00\n        /* \"#utility.yul\":1947:1949   */\n      0x20\n        /* \"#utility.yul\":1936:1945   */\n      dup3\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1924:1950   */\n      swap1\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_210\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1960:2025   */\n      tag_166\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1822:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2142   */\n    tag_167:\n        /* \"#utility.yul\":2083:2090   */\n      0x00\n        /* \"#utility.yul\":2112:2136   */\n      tag_212\n        /* \"#utility.yul\":2130:2135   */\n      dup3\n        /* \"#utility.yul\":2112:2136   */\n      tag_161\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2101:2136   */\n      swap1\n      pop\n        /* \"#utility.yul\":2038:2142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2148:2290   */\n    tag_168:\n        /* \"#utility.yul\":2251:2283   */\n      tag_214\n        /* \"#utility.yul\":2277:2282   */\n      dup2\n        /* \"#utility.yul\":2251:2283   */\n      tag_167\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2246:2249   */\n      dup3\n        /* \"#utility.yul\":2239:2284   */\n      mstore\n        /* \"#utility.yul\":2148:2290   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2296:2550   */\n    tag_66:\n        /* \"#utility.yul\":2405:2409   */\n      0x00\n        /* \"#utility.yul\":2443:2445   */\n      0x20\n        /* \"#utility.yul\":2432:2441   */\n      dup3\n        /* \"#utility.yul\":2428:2446   */\n      add\n        /* \"#utility.yul\":2420:2446   */\n      swap1\n      pop\n        /* \"#utility.yul\":2456:2543   */\n      tag_216\n        /* \"#utility.yul\":2540:2541   */\n      0x00\n        /* \"#utility.yul\":2529:2538   */\n      dup4\n        /* \"#utility.yul\":2525:2542   */\n      add\n        /* \"#utility.yul\":2516:2522   */\n      dup5\n        /* \"#utility.yul\":2456:2543   */\n      tag_168\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2296:2550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2556:2725   */\n    tag_169:\n        /* \"#utility.yul\":2640:2651   */\n      0x00\n        /* \"#utility.yul\":2674:2680   */\n      dup3\n        /* \"#utility.yul\":2669:2672   */\n      dup3\n        /* \"#utility.yul\":2662:2681   */\n      mstore\n        /* \"#utility.yul\":2714:2718   */\n      0x20\n        /* \"#utility.yul\":2709:2712   */\n      dup3\n        /* \"#utility.yul\":2705:2719   */\n      add\n        /* \"#utility.yul\":2690:2719   */\n      swap1\n      pop\n        /* \"#utility.yul\":2556:2725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2731:2907   */\n    tag_170:\n        /* \"#utility.yul\":2871:2899   */\n      0x4572726f722c206e6f2070726576696f7573206465706f736974000000000000\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2859:2865   */\n      dup3\n        /* \"#utility.yul\":2855:2869   */\n      add\n        /* \"#utility.yul\":2848:2900   */\n      mstore\n        /* \"#utility.yul\":2731:2907   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2913:3279   */\n    tag_171:\n        /* \"#utility.yul\":3055:3058   */\n      0x00\n        /* \"#utility.yul\":3076:3143   */\n      tag_220\n        /* \"#utility.yul\":3140:3142   */\n      0x1a\n        /* \"#utility.yul\":3135:3138   */\n      dup4\n        /* \"#utility.yul\":3076:3143   */\n      tag_169\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":3069:3143   */\n      swap2\n      pop\n        /* \"#utility.yul\":3152:3245   */\n      tag_221\n        /* \"#utility.yul\":3241:3244   */\n      dup3\n        /* \"#utility.yul\":3152:3245   */\n      tag_170\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":3270:3272   */\n      0x20\n        /* \"#utility.yul\":3265:3268   */\n      dup3\n        /* \"#utility.yul\":3261:3273   */\n      add\n        /* \"#utility.yul\":3254:3273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2913:3279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3285:3704   */\n    tag_92:\n        /* \"#utility.yul\":3451:3455   */\n      0x00\n        /* \"#utility.yul\":3489:3491   */\n      0x20\n        /* \"#utility.yul\":3478:3487   */\n      dup3\n        /* \"#utility.yul\":3474:3492   */\n      add\n        /* \"#utility.yul\":3466:3492   */\n      swap1\n      pop\n        /* \"#utility.yul\":3538:3547   */\n      dup2\n        /* \"#utility.yul\":3532:3536   */\n      dup2\n        /* \"#utility.yul\":3528:3548   */\n      sub\n        /* \"#utility.yul\":3524:3525   */\n      0x00\n        /* \"#utility.yul\":3513:3522   */\n      dup4\n        /* \"#utility.yul\":3509:3526   */\n      add\n        /* \"#utility.yul\":3502:3549   */\n      mstore\n        /* \"#utility.yul\":3566:3697   */\n      tag_223\n        /* \"#utility.yul\":3692:3696   */\n      dup2\n        /* \"#utility.yul\":3566:3697   */\n      tag_171\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3558:3697   */\n      swap1\n      pop\n        /* \"#utility.yul\":3285:3704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3710:3949   */\n    tag_172:\n        /* \"#utility.yul\":3850:3884   */\n      0x5365206465626520656e7669617220616c206d656e6f7320302e303520424e42\n        /* \"#utility.yul\":3846:3847   */\n      0x00\n        /* \"#utility.yul\":3838:3844   */\n      dup3\n        /* \"#utility.yul\":3834:3848   */\n      add\n        /* \"#utility.yul\":3827:3885   */\n      mstore\n        /* \"#utility.yul\":3919:3941   */\n      0x20636f6d6f20746173612064652072657469726f000000000000000000000000\n        /* \"#utility.yul\":3914:3916   */\n      0x20\n        /* \"#utility.yul\":3906:3912   */\n      dup3\n        /* \"#utility.yul\":3902:3917   */\n      add\n        /* \"#utility.yul\":3895:3942   */\n      mstore\n        /* \"#utility.yul\":3710:3949   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3955:4321   */\n    tag_173:\n        /* \"#utility.yul\":4097:4100   */\n      0x00\n        /* \"#utility.yul\":4118:4185   */\n      tag_226\n        /* \"#utility.yul\":4182:4184   */\n      0x34\n        /* \"#utility.yul\":4177:4180   */\n      dup4\n        /* \"#utility.yul\":4118:4185   */\n      tag_169\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4111:4185   */\n      swap2\n      pop\n        /* \"#utility.yul\":4194:4287   */\n      tag_227\n        /* \"#utility.yul\":4283:4286   */\n      dup3\n        /* \"#utility.yul\":4194:4287   */\n      tag_172\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":4312:4314   */\n      0x40\n        /* \"#utility.yul\":4307:4310   */\n      dup3\n        /* \"#utility.yul\":4303:4315   */\n      add\n        /* \"#utility.yul\":4296:4315   */\n      swap1\n      pop\n        /* \"#utility.yul\":3955:4321   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4746   */\n    tag_95:\n        /* \"#utility.yul\":4493:4497   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4520:4529   */\n      dup3\n        /* \"#utility.yul\":4516:4534   */\n      add\n        /* \"#utility.yul\":4508:4534   */\n      swap1\n      pop\n        /* \"#utility.yul\":4580:4589   */\n      dup2\n        /* \"#utility.yul\":4574:4578   */\n      dup2\n        /* \"#utility.yul\":4570:4590   */\n      sub\n        /* \"#utility.yul\":4566:4567   */\n      0x00\n        /* \"#utility.yul\":4555:4564   */\n      dup4\n        /* \"#utility.yul\":4551:4568   */\n      add\n        /* \"#utility.yul\":4544:4591   */\n      mstore\n        /* \"#utility.yul\":4608:4739   */\n      tag_229\n        /* \"#utility.yul\":4734:4738   */\n      dup2\n        /* \"#utility.yul\":4608:4739   */\n      tag_173\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4600:4739   */\n      swap1\n      pop\n        /* \"#utility.yul\":4327:4746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4752:4932   */\n    tag_174:\n        /* \"#utility.yul\":4800:4877   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4797:4798   */\n      0x00\n        /* \"#utility.yul\":4790:4878   */\n      mstore\n        /* \"#utility.yul\":4897:4901   */\n      0x11\n        /* \"#utility.yul\":4894:4895   */\n      0x04\n        /* \"#utility.yul\":4887:4902   */\n      mstore\n        /* \"#utility.yul\":4921:4925   */\n      0x24\n        /* \"#utility.yul\":4918:4919   */\n      0x00\n        /* \"#utility.yul\":4911:4926   */\n      revert\n        /* \"#utility.yul\":4938:5132   */\n    tag_99:\n        /* \"#utility.yul\":4978:4982   */\n      0x00\n        /* \"#utility.yul\":4998:5018   */\n      tag_232\n        /* \"#utility.yul\":5016:5017   */\n      dup3\n        /* \"#utility.yul\":4998:5018   */\n      tag_156\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4993:5018   */\n      swap2\n      pop\n        /* \"#utility.yul\":5032:5052   */\n      tag_233\n        /* \"#utility.yul\":5050:5051   */\n      dup4\n        /* \"#utility.yul\":5032:5052   */\n      tag_156\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":5027:5052   */\n      swap3\n      pop\n        /* \"#utility.yul\":5076:5077   */\n      dup3\n        /* \"#utility.yul\":5073:5074   */\n      dup3\n        /* \"#utility.yul\":5069:5078   */\n      sub\n        /* \"#utility.yul\":5061:5078   */\n      swap1\n      pop\n        /* \"#utility.yul\":5100:5101   */\n      dup2\n        /* \"#utility.yul\":5094:5098   */\n      dup2\n        /* \"#utility.yul\":5091:5102   */\n      gt\n        /* \"#utility.yul\":5088:5125   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":5105:5123   */\n      tag_235\n      tag_174\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5088:5125   */\n    tag_234:\n        /* \"#utility.yul\":4938:5132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5138:5256   */\n    tag_175:\n        /* \"#utility.yul\":5225:5249   */\n      tag_237\n        /* \"#utility.yul\":5243:5248   */\n      dup2\n        /* \"#utility.yul\":5225:5249   */\n      tag_162\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5220:5223   */\n      dup3\n        /* \"#utility.yul\":5213:5250   */\n      mstore\n        /* \"#utility.yul\":5138:5256   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5262:5594   */\n    tag_103:\n        /* \"#utility.yul\":5383:5387   */\n      0x00\n        /* \"#utility.yul\":5421:5423   */\n      0x40\n        /* \"#utility.yul\":5410:5419   */\n      dup3\n        /* \"#utility.yul\":5406:5424   */\n      add\n        /* \"#utility.yul\":5398:5424   */\n      swap1\n      pop\n        /* \"#utility.yul\":5434:5505   */\n      tag_239\n        /* \"#utility.yul\":5502:5503   */\n      0x00\n        /* \"#utility.yul\":5491:5500   */\n      dup4\n        /* \"#utility.yul\":5487:5504   */\n      add\n        /* \"#utility.yul\":5478:5484   */\n      dup6\n        /* \"#utility.yul\":5434:5505   */\n      tag_175\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5515:5587   */\n      tag_240\n        /* \"#utility.yul\":5583:5585   */\n      0x20\n        /* \"#utility.yul\":5572:5581   */\n      dup4\n        /* \"#utility.yul\":5568:5586   */\n      add\n        /* \"#utility.yul\":5559:5565   */\n      dup5\n        /* \"#utility.yul\":5515:5587   */\n      tag_157\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5262:5594   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5600:5829   */\n    tag_176:\n        /* \"#utility.yul\":5740:5774   */\n      0x456c206d6f6e746f2064656c206465706f7369746f206465626520736572206d\n        /* \"#utility.yul\":5736:5737   */\n      0x00\n        /* \"#utility.yul\":5728:5734   */\n      dup3\n        /* \"#utility.yul\":5724:5738   */\n      add\n        /* \"#utility.yul\":5717:5775   */\n      mstore\n        /* \"#utility.yul\":5809:5821   */\n      0x61796f7220717565203000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5804:5806   */\n      0x20\n        /* \"#utility.yul\":5796:5802   */\n      dup3\n        /* \"#utility.yul\":5792:5807   */\n      add\n        /* \"#utility.yul\":5785:5822   */\n      mstore\n        /* \"#utility.yul\":5600:5829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5835:6201   */\n    tag_177:\n        /* \"#utility.yul\":5977:5980   */\n      0x00\n        /* \"#utility.yul\":5998:6065   */\n      tag_243\n        /* \"#utility.yul\":6062:6064   */\n      0x2a\n        /* \"#utility.yul\":6057:6060   */\n      dup4\n        /* \"#utility.yul\":5998:6065   */\n      tag_169\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":5991:6065   */\n      swap2\n      pop\n        /* \"#utility.yul\":6074:6167   */\n      tag_244\n        /* \"#utility.yul\":6163:6166   */\n      dup3\n        /* \"#utility.yul\":6074:6167   */\n      tag_176\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":6192:6194   */\n      0x40\n        /* \"#utility.yul\":6187:6190   */\n      dup3\n        /* \"#utility.yul\":6183:6195   */\n      add\n        /* \"#utility.yul\":6176:6195   */\n      swap1\n      pop\n        /* \"#utility.yul\":5835:6201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6207:6626   */\n    tag_115:\n        /* \"#utility.yul\":6373:6377   */\n      0x00\n        /* \"#utility.yul\":6411:6413   */\n      0x20\n        /* \"#utility.yul\":6400:6409   */\n      dup3\n        /* \"#utility.yul\":6396:6414   */\n      add\n        /* \"#utility.yul\":6388:6414   */\n      swap1\n      pop\n        /* \"#utility.yul\":6460:6469   */\n      dup2\n        /* \"#utility.yul\":6454:6458   */\n      dup2\n        /* \"#utility.yul\":6450:6470   */\n      sub\n        /* \"#utility.yul\":6446:6447   */\n      0x00\n        /* \"#utility.yul\":6435:6444   */\n      dup4\n        /* \"#utility.yul\":6431:6448   */\n      add\n        /* \"#utility.yul\":6424:6471   */\n      mstore\n        /* \"#utility.yul\":6488:6619   */\n      tag_246\n        /* \"#utility.yul\":6614:6618   */\n      dup2\n        /* \"#utility.yul\":6488:6619   */\n      tag_177\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6480:6619   */\n      swap1\n      pop\n        /* \"#utility.yul\":6207:6626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6632:6823   */\n    tag_117:\n        /* \"#utility.yul\":6672:6675   */\n      0x00\n        /* \"#utility.yul\":6691:6711   */\n      tag_248\n        /* \"#utility.yul\":6709:6710   */\n      dup3\n        /* \"#utility.yul\":6691:6711   */\n      tag_156\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":6686:6711   */\n      swap2\n      pop\n        /* \"#utility.yul\":6725:6745   */\n      tag_249\n        /* \"#utility.yul\":6743:6744   */\n      dup4\n        /* \"#utility.yul\":6725:6745   */\n      tag_156\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6720:6745   */\n      swap3\n      pop\n        /* \"#utility.yul\":6768:6769   */\n      dup3\n        /* \"#utility.yul\":6765:6766   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      add\n        /* \"#utility.yul\":6754:6770   */\n      swap1\n      pop\n        /* \"#utility.yul\":6789:6792   */\n      dup1\n        /* \"#utility.yul\":6786:6787   */\n      dup3\n        /* \"#utility.yul\":6783:6793   */\n      gt\n        /* \"#utility.yul\":6780:6816   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":6796:6814   */\n      tag_251\n      tag_174\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6780:6816   */\n    tag_250:\n        /* \"#utility.yul\":6632:6823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6829:7053   */\n    tag_178:\n        /* \"#utility.yul\":6969:7003   */\n      0x4e6f207469656e657320756e206465706f7369746f20657370656369616c2061\n        /* \"#utility.yul\":6965:6966   */\n      0x00\n        /* \"#utility.yul\":6957:6963   */\n      dup3\n        /* \"#utility.yul\":6953:6967   */\n      add\n        /* \"#utility.yul\":6946:7004   */\n      mstore\n        /* \"#utility.yul\":7038:7045   */\n      0x637469766f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7033:7035   */\n      0x20\n        /* \"#utility.yul\":7025:7031   */\n      dup3\n        /* \"#utility.yul\":7021:7036   */\n      add\n        /* \"#utility.yul\":7014:7046   */\n      mstore\n        /* \"#utility.yul\":6829:7053   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7059:7425   */\n    tag_179:\n        /* \"#utility.yul\":7201:7204   */\n      0x00\n        /* \"#utility.yul\":7222:7289   */\n      tag_254\n        /* \"#utility.yul\":7286:7288   */\n      0x25\n        /* \"#utility.yul\":7281:7284   */\n      dup4\n        /* \"#utility.yul\":7222:7289   */\n      tag_169\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":7215:7289   */\n      swap2\n      pop\n        /* \"#utility.yul\":7298:7391   */\n      tag_255\n        /* \"#utility.yul\":7387:7390   */\n      dup3\n        /* \"#utility.yul\":7298:7391   */\n      tag_178\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7416:7418   */\n      0x40\n        /* \"#utility.yul\":7411:7414   */\n      dup3\n        /* \"#utility.yul\":7407:7419   */\n      add\n        /* \"#utility.yul\":7400:7419   */\n      swap1\n      pop\n        /* \"#utility.yul\":7059:7425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7431:7850   */\n    tag_125:\n        /* \"#utility.yul\":7597:7601   */\n      0x00\n        /* \"#utility.yul\":7635:7637   */\n      0x20\n        /* \"#utility.yul\":7624:7633   */\n      dup3\n        /* \"#utility.yul\":7620:7638   */\n      add\n        /* \"#utility.yul\":7612:7638   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7693   */\n      dup2\n        /* \"#utility.yul\":7678:7682   */\n      dup2\n        /* \"#utility.yul\":7674:7694   */\n      sub\n        /* \"#utility.yul\":7670:7671   */\n      0x00\n        /* \"#utility.yul\":7659:7668   */\n      dup4\n        /* \"#utility.yul\":7655:7672   */\n      add\n        /* \"#utility.yul\":7648:7695   */\n      mstore\n        /* \"#utility.yul\":7712:7843   */\n      tag_257\n        /* \"#utility.yul\":7838:7842   */\n      dup2\n        /* \"#utility.yul\":7712:7843   */\n      tag_179\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7704:7843   */\n      swap1\n      pop\n        /* \"#utility.yul\":7431:7850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7856:8104   */\n    tag_180:\n        /* \"#utility.yul\":7996:8030   */\n      0x456c2072657469726f20657370656369616c20736f6c6f206573746120646973\n        /* \"#utility.yul\":7992:7993   */\n      0x00\n        /* \"#utility.yul\":7984:7990   */\n      dup3\n        /* \"#utility.yul\":7980:7994   */\n      add\n        /* \"#utility.yul\":7973:8031   */\n      mstore\n        /* \"#utility.yul\":8065:8096   */\n      0x706f6e69626c652064657370756573206465203130206d696e75746f73000000\n        /* \"#utility.yul\":8060:8062   */\n      0x20\n        /* \"#utility.yul\":8052:8058   */\n      dup3\n        /* \"#utility.yul\":8048:8063   */\n      add\n        /* \"#utility.yul\":8041:8097   */\n      mstore\n        /* \"#utility.yul\":7856:8104   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8110:8476   */\n    tag_181:\n        /* \"#utility.yul\":8252:8255   */\n      0x00\n        /* \"#utility.yul\":8273:8340   */\n      tag_260\n        /* \"#utility.yul\":8337:8339   */\n      0x3d\n        /* \"#utility.yul\":8332:8335   */\n      dup4\n        /* \"#utility.yul\":8273:8340   */\n      tag_169\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8266:8340   */\n      swap2\n      pop\n        /* \"#utility.yul\":8349:8442   */\n      tag_261\n        /* \"#utility.yul\":8438:8441   */\n      dup3\n        /* \"#utility.yul\":8349:8442   */\n      tag_180\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8467:8469   */\n      0x40\n        /* \"#utility.yul\":8462:8465   */\n      dup3\n        /* \"#utility.yul\":8458:8470   */\n      add\n        /* \"#utility.yul\":8451:8470   */\n      swap1\n      pop\n        /* \"#utility.yul\":8110:8476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8482:8901   */\n    tag_129:\n        /* \"#utility.yul\":8648:8652   */\n      0x00\n        /* \"#utility.yul\":8686:8688   */\n      0x20\n        /* \"#utility.yul\":8675:8684   */\n      dup3\n        /* \"#utility.yul\":8671:8689   */\n      add\n        /* \"#utility.yul\":8663:8689   */\n      swap1\n      pop\n        /* \"#utility.yul\":8735:8744   */\n      dup2\n        /* \"#utility.yul\":8729:8733   */\n      dup2\n        /* \"#utility.yul\":8725:8745   */\n      sub\n        /* \"#utility.yul\":8721:8722   */\n      0x00\n        /* \"#utility.yul\":8710:8719   */\n      dup4\n        /* \"#utility.yul\":8706:8723   */\n      add\n        /* \"#utility.yul\":8699:8746   */\n      mstore\n        /* \"#utility.yul\":8763:8894   */\n      tag_263\n        /* \"#utility.yul\":8889:8893   */\n      dup2\n        /* \"#utility.yul\":8763:8894   */\n      tag_181\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8755:8894   */\n      swap1\n      pop\n        /* \"#utility.yul\":8482:8901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8907:9085   */\n    tag_182:\n        /* \"#utility.yul\":9047:9077   */\n      0x4e6f207469656e657320756e206465706f7369746f2061637469766f00000000\n        /* \"#utility.yul\":9043:9044   */\n      0x00\n        /* \"#utility.yul\":9035:9041   */\n      dup3\n        /* \"#utility.yul\":9031:9045   */\n      add\n        /* \"#utility.yul\":9024:9078   */\n      mstore\n        /* \"#utility.yul\":8907:9085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9091:9457   */\n    tag_183:\n        /* \"#utility.yul\":9233:9236   */\n      0x00\n        /* \"#utility.yul\":9254:9321   */\n      tag_266\n        /* \"#utility.yul\":9318:9320   */\n      0x1c\n        /* \"#utility.yul\":9313:9316   */\n      dup4\n        /* \"#utility.yul\":9254:9321   */\n      tag_169\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9247:9321   */\n      swap2\n      pop\n        /* \"#utility.yul\":9330:9423   */\n      tag_267\n        /* \"#utility.yul\":9419:9422   */\n      dup3\n        /* \"#utility.yul\":9330:9423   */\n      tag_182\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9448:9450   */\n      0x20\n        /* \"#utility.yul\":9443:9446   */\n      dup3\n        /* \"#utility.yul\":9439:9451   */\n      add\n        /* \"#utility.yul\":9432:9451   */\n      swap1\n      pop\n        /* \"#utility.yul\":9091:9457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9463:9882   */\n    tag_144:\n        /* \"#utility.yul\":9629:9633   */\n      0x00\n        /* \"#utility.yul\":9667:9669   */\n      0x20\n        /* \"#utility.yul\":9656:9665   */\n      dup3\n        /* \"#utility.yul\":9652:9670   */\n      add\n        /* \"#utility.yul\":9644:9670   */\n      swap1\n      pop\n        /* \"#utility.yul\":9716:9725   */\n      dup2\n        /* \"#utility.yul\":9710:9714   */\n      dup2\n        /* \"#utility.yul\":9706:9726   */\n      sub\n        /* \"#utility.yul\":9702:9703   */\n      0x00\n        /* \"#utility.yul\":9691:9700   */\n      dup4\n        /* \"#utility.yul\":9687:9704   */\n      add\n        /* \"#utility.yul\":9680:9727   */\n      mstore\n        /* \"#utility.yul\":9744:9875   */\n      tag_269\n        /* \"#utility.yul\":9870:9874   */\n      dup2\n        /* \"#utility.yul\":9744:9875   */\n      tag_183\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9736:9875   */\n      swap1\n      pop\n        /* \"#utility.yul\":9463:9882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9888:10298   */\n    tag_147:\n        /* \"#utility.yul\":9928:9935   */\n      0x00\n        /* \"#utility.yul\":9951:9971   */\n      tag_271\n        /* \"#utility.yul\":9969:9970   */\n      dup3\n        /* \"#utility.yul\":9951:9971   */\n      tag_156\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9946:9971   */\n      swap2\n      pop\n        /* \"#utility.yul\":9985:10005   */\n      tag_272\n        /* \"#utility.yul\":10003:10004   */\n      dup4\n        /* \"#utility.yul\":9985:10005   */\n      tag_156\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":9980:10005   */\n      swap3\n      pop\n        /* \"#utility.yul\":10040:10041   */\n      dup3\n        /* \"#utility.yul\":10037:10038   */\n      dup3\n        /* \"#utility.yul\":10033:10042   */\n      mul\n        /* \"#utility.yul\":10062:10092   */\n      tag_273\n        /* \"#utility.yul\":10080:10091   */\n      dup2\n        /* \"#utility.yul\":10062:10092   */\n      tag_156\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10051:10092   */\n      swap2\n      pop\n        /* \"#utility.yul\":10241:10242   */\n      dup3\n        /* \"#utility.yul\":10232:10239   */\n      dup3\n        /* \"#utility.yul\":10228:10243   */\n      div\n        /* \"#utility.yul\":10225:10226   */\n      dup5\n        /* \"#utility.yul\":10222:10244   */\n      eq\n        /* \"#utility.yul\":10202:10203   */\n      dup4\n        /* \"#utility.yul\":10195:10204   */\n      iszero\n        /* \"#utility.yul\":10175:10258   */\n      or\n        /* \"#utility.yul\":10152:10291   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":10271:10289   */\n      tag_275\n      tag_174\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":10152:10291   */\n    tag_274:\n        /* \"#utility.yul\":9936:10298   */\n      pop\n        /* \"#utility.yul\":9888:10298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10304:10484   */\n    tag_184:\n        /* \"#utility.yul\":10352:10429   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10349:10350   */\n      0x00\n        /* \"#utility.yul\":10342:10430   */\n      mstore\n        /* \"#utility.yul\":10449:10453   */\n      0x12\n        /* \"#utility.yul\":10446:10447   */\n      0x04\n        /* \"#utility.yul\":10439:10454   */\n      mstore\n        /* \"#utility.yul\":10473:10477   */\n      0x24\n        /* \"#utility.yul\":10470:10471   */\n      0x00\n        /* \"#utility.yul\":10463:10478   */\n      revert\n        /* \"#utility.yul\":10490:10675   */\n    tag_149:\n        /* \"#utility.yul\":10530:10531   */\n      0x00\n        /* \"#utility.yul\":10547:10567   */\n      tag_278\n        /* \"#utility.yul\":10565:10566   */\n      dup3\n        /* \"#utility.yul\":10547:10567   */\n      tag_156\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10542:10567   */\n      swap2\n      pop\n        /* \"#utility.yul\":10581:10601   */\n      tag_279\n        /* \"#utility.yul\":10599:10600   */\n      dup4\n        /* \"#utility.yul\":10581:10601   */\n      tag_156\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":10576:10601   */\n      swap3\n      pop\n        /* \"#utility.yul\":10620:10621   */\n      dup3\n        /* \"#utility.yul\":10610:10645   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":10625:10643   */\n      tag_281\n      tag_184\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10610:10645   */\n    tag_280:\n        /* \"#utility.yul\":10667:10668   */\n      dup3\n        /* \"#utility.yul\":10664:10665   */\n      dup3\n        /* \"#utility.yul\":10660:10669   */\n      div\n        /* \"#utility.yul\":10655:10669   */\n      swap1\n      pop\n        /* \"#utility.yul\":10490:10675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220da1e2eb5e02ecd192d199b2fa2e6f96eff34cd16c6acd04db6e8f559f744325e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_835": {
									"entryPoint": null,
									"id": 835,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_Token_$1244_fromMemory": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_Token_$1244_fromMemory": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_Token_$1244": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_Token_$1244": {
									"entryPoint": 282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1399:7",
										"nodeType": "YulBlock",
										"src": "0:1399:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "627:51:7",
													"nodeType": "YulBlock",
													"src": "627:51:7",
													"statements": [
														{
															"nativeSrc": "637:35:7",
															"nodeType": "YulAssignment",
															"src": "637:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:7"
																},
																"nativeSrc": "648:24:7",
																"nodeType": "YulFunctionCall",
																"src": "648:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_Token_$1244",
												"nativeSrc": "568:110:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:7",
														"nodeType": "YulTypedName",
														"src": "609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:7",
														"nodeType": "YulTypedName",
														"src": "619:7:7",
														"type": ""
													}
												],
												"src": "568:110:7"
											},
											{
												"body": {
													"nativeSrc": "741:93:7",
													"nodeType": "YulBlock",
													"src": "741:93:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:7",
																"nodeType": "YulBlock",
																"src": "812:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:7",
																					"nodeType": "YulLiteral",
																					"src": "821:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:7",
																					"nodeType": "YulLiteral",
																					"src": "824:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:7"
																			},
																			"nativeSrc": "814:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:7"
																		},
																		"nativeSrc": "814:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_Token_$1244",
																					"nativeSrc": "771:31:7",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:7"
																				},
																				"nativeSrc": "771:38:7",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:7"
																		},
																		"nativeSrc": "761:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:7"
																},
																"nativeSrc": "754:57:7",
																"nodeType": "YulFunctionCall",
																"src": "754:57:7"
															},
															"nativeSrc": "751:77:7",
															"nodeType": "YulIf",
															"src": "751:77:7"
														}
													]
												},
												"name": "validator_revert_t_contract$_Token_$1244",
												"nativeSrc": "684:150:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:7",
														"nodeType": "YulTypedName",
														"src": "734:5:7",
														"type": ""
													}
												],
												"src": "684:150:7"
											},
											{
												"body": {
													"nativeSrc": "917:94:7",
													"nodeType": "YulBlock",
													"src": "917:94:7",
													"statements": [
														{
															"nativeSrc": "927:22:7",
															"nodeType": "YulAssignment",
															"src": "927:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:7"
																},
																"nativeSrc": "936:13:7",
																"nodeType": "YulFunctionCall",
																"src": "936:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_Token_$1244",
																	"nativeSrc": "958:40:7",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:7"
																},
																"nativeSrc": "958:47:7",
																"nodeType": "YulFunctionCall",
																"src": "958:47:7"
															},
															"nativeSrc": "958:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:7"
														}
													]
												},
												"name": "abi_decode_t_contract$_Token_$1244_fromMemory",
												"nativeSrc": "840:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:7",
														"nodeType": "YulTypedName",
														"src": "895:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:7",
														"nodeType": "YulTypedName",
														"src": "903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:7",
														"nodeType": "YulTypedName",
														"src": "911:5:7",
														"type": ""
													}
												],
												"src": "840:171:7"
											},
											{
												"body": {
													"nativeSrc": "1108:288:7",
													"nodeType": "YulBlock",
													"src": "1108:288:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1154:83:7",
																"nodeType": "YulBlock",
																"src": "1154:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1156:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:7"
																			},
																			"nativeSrc": "1156:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:7"
																		},
																		"nativeSrc": "1156:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1129:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1138:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1125:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:7"
																		},
																		"nativeSrc": "1125:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1150:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1121:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:7"
																},
																"nativeSrc": "1121:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1121:32:7"
															},
															"nativeSrc": "1118:119:7",
															"nodeType": "YulIf",
															"src": "1118:119:7"
														},
														{
															"nativeSrc": "1247:142:7",
															"nodeType": "YulBlock",
															"src": "1247:142:7",
															"statements": [
																{
																	"nativeSrc": "1262:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1276:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1266:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1291:88:7",
																	"nodeType": "YulAssignment",
																	"src": "1291:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1351:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1362:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1347:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:7"
																				},
																				"nativeSrc": "1347:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_Token_$1244_fromMemory",
																			"nativeSrc": "1301:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "1301:45:7"
																		},
																		"nativeSrc": "1301:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1301:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1291:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_Token_$1244_fromMemory",
												"nativeSrc": "1017:379:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1078:9:7",
														"nodeType": "YulTypedName",
														"src": "1078:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1089:7:7",
														"nodeType": "YulTypedName",
														"src": "1089:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1101:6:7",
														"nodeType": "YulTypedName",
														"src": "1101:6:7",
														"type": ""
													}
												],
												"src": "1017:379:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_Token_$1244(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_Token_$1244(value) {\n        if iszero(eq(value, cleanup_t_contract$_Token_$1244(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_Token_$1244_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_Token_$1244(value)\n    }\n\n    function abi_decode_tuple_t_contract$_Token_$1244_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_Token_$1244_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040527350d3b84a2b1787b7704dd50c67733b6b5b29362960075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555066b1a2bc2ec5000060085534801561006e575f80fd5b5060405161173f38038061173f83398181016040528101906100909190610144565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061016f565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610102826100d9565b9050919050565b5f610113826100f8565b9050919050565b61012381610109565b811461012d575f80fd5b50565b5f8151905061013e8161011a565b92915050565b5f60208284031215610159576101586100d5565b5b5f61016684828501610130565b91505092915050565b6115c38061017c5f395ff3fe6080604052600436106100f2575f3560e01c8063ae6441a311610089578063dcc52a4811610058578063dcc52a48146102d6578063dff05f8214610312578063eb0c49551461034e578063ed2d7a9714610378576100f2565b8063ae6441a31461026e578063b3f0067414610298578063c8510e4e146102c2578063d0e30db0146102cc576100f2565b8063726fe82b116100c5578063726fe82b1461019057806373732024146101cc5780638bc7e8c4146102085780638ce5fcc914610232576100f2565b80630497de4a146100f657806312fa90a114610120578063249ee9e11461014a5780633ccfd60b14610186575b5f80fd5b348015610101575f80fd5b5061010a610382565b6040516101179190611000565b60405180910390f35b34801561012b575f80fd5b506101346103c6565b6040516101419190611000565b60405180910390f35b348015610155575f80fd5b50610170600480360381019061016b9190611077565b61040a565b60405161017d9190611000565b60405180910390f35b61018e61041f565b005b34801561019b575f80fd5b506101b660048036038101906101b19190611077565b61075c565b6040516101c39190611000565b60405180910390f35b3480156101d7575f80fd5b506101f260048036038101906101ed9190611077565b610771565b6040516101ff91906110bc565b60405180910390f35b348015610213575f80fd5b5061021c61078e565b6040516102299190611000565b60405180910390f35b34801561023d575f80fd5b5061025860048036038101906102539190611077565b610794565b60405161026591906110bc565b60405180910390f35b348015610279575f80fd5b506102826107b1565b60405161028f9190611000565b60405180910390f35b3480156102a3575f80fd5b506102ac6107c0565b6040516102b991906110f5565b60405180910390f35b6102ca6107e5565b005b6102d4610913565b005b3480156102e1575f80fd5b506102fc60048036038101906102f79190611077565b610a36565b6040516103099190611000565b60405180910390f35b34801561031d575f80fd5b5061033860048036038101906103339190611077565b610a4b565b6040516103459190611000565b60405180910390f35b348015610359575f80fd5b50610362610a60565b60405161036f9190611000565b60405180910390f35b610380610a6f565b005b5f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b6001602052805f5260405f205f915090505481565b6001151560055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff161515146104af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a690611168565b60405180910390fd5b6008543410156104f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104eb906111f6565b60405180910390fd5b5f6104fe33610dde565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc661c6bf52634000060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461056a9190611241565b90811502906040515f60405180830381858888f19350505050158015610592573d5f803e3d5ffd5b505f60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b815260040161062f929190611283565b5f604051808303815f87803b158015610646575f80fd5b505af1158015610658573d5f803e3d5ffd5b505050505f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60085490811502906040515f60405180830381858888f19350505050158015610758573d5f803e3d5ffd5b5050565b6004602052805f5260405f205f915090505481565b6005602052805f5260405f205f915054906101000a900460ff1681565b60085481565b6006602052805f5260405f205f915054906101000a900460ff1681565b5f6107bb33610f2a565b905090565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f3411610827576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081e9061131a565b60405180910390fd5b3460025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108739190611338565b925050819055504260045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b3460015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461095c9190611338565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550600160055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550565b6002602052805f5260405f205f915090505481565b6003602052805f5260405f205f915090505481565b5f610a6a33610dde565b905090565b60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef906113db565b60405180910390fd5b61025860045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b439190611338565b421015610b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7c90611469565b60405180910390fd5b600854341015610bca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc1906111f6565b60405180910390fd5b5f610bd433610f2a565b905060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60085490811502906040515f60405180830381858888f19350505050158015610c3c573d5f803e3d5ffd5b503373ffffffffffffffffffffffffffffffffffffffff166108fc60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490811502906040515f60405180830381858888f19350505050158015610cbd573d5f803e3d5ffd5b505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b8152600401610dae929190611283565b5f604051808303815f87803b158015610dc5575f80fd5b505af1158015610dd7573d5f803e3d5ffd5b5050505050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610e68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e5f906114d1565b60405180910390fd5b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442610eb29190611241565b90505f6301e3373160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546064610f0491906114ef565b610f0e919061155d565b90505f8282610f1d91906114ef565b9050809350505050919050565b5f8060045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442610f759190611241565b90505f6301e3373160025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460c8610fc791906114ef565b610fd1919061155d565b90508181610fdf91906114ef565b92505050919050565b5f819050919050565b610ffa81610fe8565b82525050565b5f6020820190506110135f830184610ff1565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110468261101d565b9050919050565b6110568161103c565b8114611060575f80fd5b50565b5f813590506110718161104d565b92915050565b5f6020828403121561108c5761108b611019565b5b5f61109984828501611063565b91505092915050565b5f8115159050919050565b6110b6816110a2565b82525050565b5f6020820190506110cf5f8301846110ad565b92915050565b5f6110df8261101d565b9050919050565b6110ef816110d5565b82525050565b5f6020820190506111085f8301846110e6565b92915050565b5f82825260208201905092915050565b7f4572726f722c206e6f2070726576696f7573206465706f7369740000000000005f82015250565b5f611152601a8361110e565b915061115d8261111e565b602082019050919050565b5f6020820190508181035f83015261117f81611146565b9050919050565b7f5365206465626520656e7669617220616c206d656e6f7320302e303520424e425f8201527f20636f6d6f20746173612064652072657469726f000000000000000000000000602082015250565b5f6111e060348361110e565b91506111eb82611186565b604082019050919050565b5f6020820190508181035f83015261120d816111d4565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61124b82610fe8565b915061125683610fe8565b925082820390508181111561126e5761126d611214565b5b92915050565b61127d8161103c565b82525050565b5f6040820190506112965f830185611274565b6112a36020830184610ff1565b9392505050565b7f456c206d6f6e746f2064656c206465706f7369746f206465626520736572206d5f8201527f61796f7220717565203000000000000000000000000000000000000000000000602082015250565b5f611304602a8361110e565b915061130f826112aa565b604082019050919050565b5f6020820190508181035f830152611331816112f8565b9050919050565b5f61134282610fe8565b915061134d83610fe8565b925082820190508082111561136557611364611214565b5b92915050565b7f4e6f207469656e657320756e206465706f7369746f20657370656369616c20615f8201527f637469766f000000000000000000000000000000000000000000000000000000602082015250565b5f6113c560258361110e565b91506113d08261136b565b604082019050919050565b5f6020820190508181035f8301526113f2816113b9565b9050919050565b7f456c2072657469726f20657370656369616c20736f6c6f2065737461206469735f8201527f706f6e69626c652064657370756573206465203130206d696e75746f73000000602082015250565b5f611453603d8361110e565b915061145e826113f9565b604082019050919050565b5f6020820190508181035f83015261148081611447565b9050919050565b7f4e6f207469656e657320756e206465706f7369746f2061637469766f000000005f82015250565b5f6114bb601c8361110e565b91506114c682611487565b602082019050919050565b5f6020820190508181035f8301526114e8816114af565b9050919050565b5f6114f982610fe8565b915061150483610fe8565b925082820261151281610fe8565b9150828204841483151761152957611528611214565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61156782610fe8565b915061157283610fe8565b92508261158257611581611530565b5b82820490509291505056fea2646970667358221220da1e2eb5e02ecd192d199b2fa2e6f96eff34cd16c6acd04db6e8f559f744325e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x50D3B84A2B1787B7704DD50C67733B6B5B293629 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH7 0xB1A2BC2EC50000 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x173F CODESIZE SUB DUP1 PUSH2 0x173F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x144 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x16F JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x102 DUP3 PUSH2 0xD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x113 DUP3 PUSH2 0xF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x123 DUP2 PUSH2 0x109 JUMP JUMPDEST DUP2 EQ PUSH2 0x12D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13E DUP2 PUSH2 0x11A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159 JUMPI PUSH2 0x158 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166 DUP5 DUP3 DUP6 ADD PUSH2 0x130 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15C3 DUP1 PUSH2 0x17C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE6441A3 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDCC52A48 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xDCC52A48 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDFF05F82 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xEB0C4955 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xED2D7A97 EQ PUSH2 0x378 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xAE6441A3 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xC8510E4E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x2CC JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x726FE82B GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x726FE82B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x73732024 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8CE5FCC9 EQ PUSH2 0x232 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x497DE4A EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x12FA90A1 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x249EE9E1 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x7E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0xA6F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A6 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4FE CALLER PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH7 0x1C6BF526340000 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x7BB CALLER PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81E SWAP1 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xA6A CALLER PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC1 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBD4 CALLER PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAE SWAP3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E33731 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x64 PUSH2 0xF04 SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x155D JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xF1D SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E33731 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xC8 PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x155D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1013 PUSH0 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1046 DUP3 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1056 DUP2 PUSH2 0x103C JUMP JUMPDEST DUP2 EQ PUSH2 0x1060 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1071 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108C JUMPI PUSH2 0x108B PUSH2 0x1019 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1099 DUP5 DUP3 DUP6 ADD PUSH2 0x1063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B6 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CF PUSH0 DUP4 ADD DUP5 PUSH2 0x10AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10DF DUP3 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x10D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1108 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722C206E6F2070726576696F7573206465706F736974000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1152 PUSH1 0x1A DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x115D DUP3 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x117F DUP2 PUSH2 0x1146 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365206465626520656E7669617220616C206D656E6F7320302E303520424E42 PUSH0 DUP3 ADD MSTORE PUSH32 0x20636F6D6F20746173612064652072657469726F000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 PUSH1 0x34 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP3 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120D DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x124B DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1256 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x126E JUMPI PUSH2 0x126D PUSH2 0x1214 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x127D DUP2 PUSH2 0x103C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1296 PUSH0 DUP4 ADD DUP6 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x12A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x456C206D6F6E746F2064656C206465706F7369746F206465626520736572206D PUSH0 DUP3 ADD MSTORE PUSH32 0x61796F7220717565203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1304 PUSH1 0x2A DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x130F DUP3 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1331 DUP2 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1342 DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x134D DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1365 JUMPI PUSH2 0x1364 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207469656E657320756E206465706F7369746F20657370656369616C2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x637469766F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C5 PUSH1 0x25 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F2 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456C2072657469726F20657370656369616C20736F6C6F206573746120646973 PUSH0 DUP3 ADD MSTORE PUSH32 0x706F6E69626C652064657370756573206465203130206D696E75746F73000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1453 PUSH1 0x3D DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x145E DUP3 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1480 DUP2 PUSH2 0x1447 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207469656E657320756E206465706F7369746F2061637469766F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BB PUSH1 0x1C DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x14C6 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14E8 DUP2 PUSH2 0x14AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14F9 DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1504 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1512 DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1567 DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1572 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1530 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x1E 0x2E 0xB5 0xE0 0x2E 0xCD NOT 0x2D NOT SWAP12 0x2F LOG2 0xE6 0xF9 PUSH15 0xFF34CD16C6ACD04DB6E8F559F74432 MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "88:4353:5:-:0;;;748:42;703:88;;;;;;;;;;;;;;;;;;;;831:10;803:38;;918:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1017:6;1009:5;;:14;;;;;;;;;;;;;;;;;;918:113;88:4353;;:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:379::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:78;1371:7;1362:6;1351:9;1347:22;1301:78;:::i;:::-;1291:88;;1247:142;1017:379;;;;:::o;88:4353:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_calculateInterest_1147": {
									"entryPoint": 3550,
									"id": 1147,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_calculateSpecialInterest_1179": {
									"entryPoint": 3882,
									"id": 1179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateInterestSpecial_1104": {
									"entryPoint": 1969,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateInterest_1082": {
									"entryPoint": 2656,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@clientsBalanceBNB_795": {
									"entryPoint": 1034,
									"id": 795,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositTimeStamp_803": {
									"entryPoint": 2635,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_867": {
									"entryPoint": 2323,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeReceiver_821": {
									"entryPoint": 1984,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getDepositBalanceSpecial_1093": {
									"entryPoint": 966,
									"id": 1093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDepositBalance_1071": {
									"entryPoint": 898,
									"id": 1071,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isDeposited_811": {
									"entryPoint": 1905,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isSpecialDeposited_815": {
									"entryPoint": 1940,
									"id": 815,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@specialClientsBalanceBNB_799": {
									"entryPoint": 2614,
									"id": 799,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@specialDepositTimeStamp_807": {
									"entryPoint": 1884,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@specialDeposit_902": {
									"entryPoint": 2021,
									"id": 902,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@specialWithdraw_1060": {
									"entryPoint": 2671,
									"id": 1060,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_980": {
									"entryPoint": 1055,
									"id": 980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawalFee_824": {
									"entryPoint": 1934,
									"id": 824,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889": {
									"entryPoint": 4382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d": {
									"entryPoint": 4971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661": {
									"entryPoint": 4486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63": {
									"entryPoint": 5255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10678:7",
										"nodeType": "YulBlock",
										"src": "0:10678:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "482:35:7",
													"nodeType": "YulBlock",
													"src": "482:35:7",
													"statements": [
														{
															"nativeSrc": "492:19:7",
															"nodeType": "YulAssignment",
															"src": "492:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "508:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:7"
																},
																"nativeSrc": "502:9:7",
																"nodeType": "YulFunctionCall",
																"src": "502:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:7",
														"nodeType": "YulTypedName",
														"src": "475:6:7",
														"type": ""
													}
												],
												"src": "442:75:7"
											},
											{
												"body": {
													"nativeSrc": "612:28:7",
													"nodeType": "YulBlock",
													"src": "612:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:7",
																		"nodeType": "YulLiteral",
																		"src": "629:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:7",
																		"nodeType": "YulLiteral",
																		"src": "632:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:7"
																},
																"nativeSrc": "622:12:7",
																"nodeType": "YulFunctionCall",
																"src": "622:12:7"
															},
															"nativeSrc": "622:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:7"
											},
											{
												"body": {
													"nativeSrc": "735:28:7",
													"nodeType": "YulBlock",
													"src": "735:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:7",
																		"nodeType": "YulLiteral",
																		"src": "752:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:7",
																		"nodeType": "YulLiteral",
																		"src": "755:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:7"
																},
																"nativeSrc": "745:12:7",
																"nodeType": "YulFunctionCall",
																"src": "745:12:7"
															},
															"nativeSrc": "745:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:7"
											},
											{
												"body": {
													"nativeSrc": "814:81:7",
													"nodeType": "YulBlock",
													"src": "814:81:7",
													"statements": [
														{
															"nativeSrc": "824:65:7",
															"nodeType": "YulAssignment",
															"src": "824:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:7",
																		"nodeType": "YulLiteral",
																		"src": "846:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:7"
																},
																"nativeSrc": "835:54:7",
																"nodeType": "YulFunctionCall",
																"src": "835:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:7",
														"nodeType": "YulTypedName",
														"src": "796:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:7",
														"nodeType": "YulTypedName",
														"src": "806:7:7",
														"type": ""
													}
												],
												"src": "769:126:7"
											},
											{
												"body": {
													"nativeSrc": "946:51:7",
													"nodeType": "YulBlock",
													"src": "946:51:7",
													"statements": [
														{
															"nativeSrc": "956:35:7",
															"nodeType": "YulAssignment",
															"src": "956:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:7"
																},
																"nativeSrc": "967:24:7",
																"nodeType": "YulFunctionCall",
																"src": "967:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:7",
														"nodeType": "YulTypedName",
														"src": "928:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:7",
														"nodeType": "YulTypedName",
														"src": "938:7:7",
														"type": ""
													}
												],
												"src": "901:96:7"
											},
											{
												"body": {
													"nativeSrc": "1046:79:7",
													"nodeType": "YulBlock",
													"src": "1046:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:7",
																"nodeType": "YulBlock",
																"src": "1103:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:7"
																			},
																			"nativeSrc": "1105:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:7"
																		},
																		"nativeSrc": "1105:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:7"
																				},
																				"nativeSrc": "1076:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:7"
																		},
																		"nativeSrc": "1066:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:7"
																},
																"nativeSrc": "1059:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:7"
															},
															"nativeSrc": "1056:63:7",
															"nodeType": "YulIf",
															"src": "1056:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:7",
														"nodeType": "YulTypedName",
														"src": "1039:5:7",
														"type": ""
													}
												],
												"src": "1003:122:7"
											},
											{
												"body": {
													"nativeSrc": "1183:87:7",
													"nodeType": "YulBlock",
													"src": "1183:87:7",
													"statements": [
														{
															"nativeSrc": "1193:29:7",
															"nodeType": "YulAssignment",
															"src": "1193:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:7"
																},
																"nativeSrc": "1202:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:7"
																},
																"nativeSrc": "1231:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:7"
															},
															"nativeSrc": "1231:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:7",
														"nodeType": "YulTypedName",
														"src": "1161:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:7",
														"nodeType": "YulTypedName",
														"src": "1169:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:7",
														"nodeType": "YulTypedName",
														"src": "1177:5:7",
														"type": ""
													}
												],
												"src": "1131:139:7"
											},
											{
												"body": {
													"nativeSrc": "1342:263:7",
													"nodeType": "YulBlock",
													"src": "1342:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:7",
																"nodeType": "YulBlock",
																"src": "1388:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:7"
																			},
																			"nativeSrc": "1390:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:7"
																		},
																		"nativeSrc": "1390:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:7"
																		},
																		"nativeSrc": "1359:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:7"
																},
																"nativeSrc": "1355:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:7"
															},
															"nativeSrc": "1352:119:7",
															"nodeType": "YulIf",
															"src": "1352:119:7"
														},
														{
															"nativeSrc": "1481:117:7",
															"nodeType": "YulBlock",
															"src": "1481:117:7",
															"statements": [
																{
																	"nativeSrc": "1496:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:7"
																				},
																				"nativeSrc": "1556:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:7"
																		},
																		"nativeSrc": "1535:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:7",
														"nodeType": "YulTypedName",
														"src": "1312:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:7",
														"nodeType": "YulTypedName",
														"src": "1323:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:7",
														"nodeType": "YulTypedName",
														"src": "1335:6:7",
														"type": ""
													}
												],
												"src": "1276:329:7"
											},
											{
												"body": {
													"nativeSrc": "1653:48:7",
													"nodeType": "YulBlock",
													"src": "1653:48:7",
													"statements": [
														{
															"nativeSrc": "1663:32:7",
															"nodeType": "YulAssignment",
															"src": "1663:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1688:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1681:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:7"
																		},
																		"nativeSrc": "1681:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1674:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:7"
																},
																"nativeSrc": "1674:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1674:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1663:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1611:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1635:5:7",
														"nodeType": "YulTypedName",
														"src": "1635:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1645:7:7",
														"nodeType": "YulTypedName",
														"src": "1645:7:7",
														"type": ""
													}
												],
												"src": "1611:90:7"
											},
											{
												"body": {
													"nativeSrc": "1766:50:7",
													"nodeType": "YulBlock",
													"src": "1766:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1783:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1803:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1803:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1788:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1788:14:7"
																		},
																		"nativeSrc": "1788:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1788:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1776:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:7"
																},
																"nativeSrc": "1776:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1776:34:7"
															},
															"nativeSrc": "1776:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1776:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1707:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1754:5:7",
														"nodeType": "YulTypedName",
														"src": "1754:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1761:3:7",
														"nodeType": "YulTypedName",
														"src": "1761:3:7",
														"type": ""
													}
												],
												"src": "1707:109:7"
											},
											{
												"body": {
													"nativeSrc": "1914:118:7",
													"nodeType": "YulBlock",
													"src": "1914:118:7",
													"statements": [
														{
															"nativeSrc": "1924:26:7",
															"nodeType": "YulAssignment",
															"src": "1924:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1936:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1947:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1932:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:7"
																},
																"nativeSrc": "1932:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1932:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1924:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1998:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2011:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2022:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2007:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:7"
																		},
																		"nativeSrc": "2007:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1960:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "1960:37:7"
																},
																"nativeSrc": "1960:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1960:65:7"
															},
															"nativeSrc": "1960:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1822:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1886:9:7",
														"nodeType": "YulTypedName",
														"src": "1886:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1898:6:7",
														"nodeType": "YulTypedName",
														"src": "1898:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1909:4:7",
														"nodeType": "YulTypedName",
														"src": "1909:4:7",
														"type": ""
													}
												],
												"src": "1822:210:7"
											},
											{
												"body": {
													"nativeSrc": "2091:51:7",
													"nodeType": "YulBlock",
													"src": "2091:51:7",
													"statements": [
														{
															"nativeSrc": "2101:35:7",
															"nodeType": "YulAssignment",
															"src": "2101:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2130:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2130:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2112:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2112:17:7"
																},
																"nativeSrc": "2112:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2112:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2101:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2101:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "2038:104:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2073:5:7",
														"nodeType": "YulTypedName",
														"src": "2073:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2083:7:7",
														"nodeType": "YulTypedName",
														"src": "2083:7:7",
														"type": ""
													}
												],
												"src": "2038:104:7"
											},
											{
												"body": {
													"nativeSrc": "2229:61:7",
													"nodeType": "YulBlock",
													"src": "2229:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2246:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2246:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2277:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2277:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "2251:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2251:25:7"
																		},
																		"nativeSrc": "2251:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2251:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:7"
																},
																"nativeSrc": "2239:45:7",
																"nodeType": "YulFunctionCall",
																"src": "2239:45:7"
															},
															"nativeSrc": "2239:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "2239:45:7"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "2148:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:7",
														"nodeType": "YulTypedName",
														"src": "2217:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2224:3:7",
														"nodeType": "YulTypedName",
														"src": "2224:3:7",
														"type": ""
													}
												],
												"src": "2148:142:7"
											},
											{
												"body": {
													"nativeSrc": "2410:140:7",
													"nodeType": "YulBlock",
													"src": "2410:140:7",
													"statements": [
														{
															"nativeSrc": "2420:26:7",
															"nodeType": "YulAssignment",
															"src": "2420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:7"
																},
																"nativeSrc": "2428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2516:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2516:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2529:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2529:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2540:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2540:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2525:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2525:3:7"
																		},
																		"nativeSrc": "2525:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "2456:59:7",
																	"nodeType": "YulIdentifier",
																	"src": "2456:59:7"
																},
																"nativeSrc": "2456:87:7",
																"nodeType": "YulFunctionCall",
																"src": "2456:87:7"
															},
															"nativeSrc": "2456:87:7",
															"nodeType": "YulExpressionStatement",
															"src": "2456:87:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nativeSrc": "2296:254:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2382:9:7",
														"nodeType": "YulTypedName",
														"src": "2382:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2394:6:7",
														"nodeType": "YulTypedName",
														"src": "2394:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2405:4:7",
														"nodeType": "YulTypedName",
														"src": "2405:4:7",
														"type": ""
													}
												],
												"src": "2296:254:7"
											},
											{
												"body": {
													"nativeSrc": "2652:73:7",
													"nodeType": "YulBlock",
													"src": "2652:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2669:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2669:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2674:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2674:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2662:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2662:6:7"
																},
																"nativeSrc": "2662:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2662:19:7"
															},
															"nativeSrc": "2662:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2662:19:7"
														},
														{
															"nativeSrc": "2690:29:7",
															"nodeType": "YulAssignment",
															"src": "2690:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2709:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2714:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2714:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2705:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:7"
																},
																"nativeSrc": "2705:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2705:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2690:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2690:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2556:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2624:3:7",
														"nodeType": "YulTypedName",
														"src": "2624:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2629:6:7",
														"nodeType": "YulTypedName",
														"src": "2629:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2640:11:7",
														"nodeType": "YulTypedName",
														"src": "2640:11:7",
														"type": ""
													}
												],
												"src": "2556:169:7"
											},
											{
												"body": {
													"nativeSrc": "2837:70:7",
													"nodeType": "YulBlock",
													"src": "2837:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2859:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2859:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2867:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2867:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:7"
																		},
																		"nativeSrc": "2855:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:14:7"
																	},
																	{
																		"hexValue": "4572726f722c206e6f2070726576696f7573206465706f736974",
																		"kind": "string",
																		"nativeSrc": "2871:28:7",
																		"nodeType": "YulLiteral",
																		"src": "2871:28:7",
																		"type": "",
																		"value": "Error, no previous deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2848:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:7"
																},
																"nativeSrc": "2848:52:7",
																"nodeType": "YulFunctionCall",
																"src": "2848:52:7"
															},
															"nativeSrc": "2848:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "2848:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889",
												"nativeSrc": "2731:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2829:6:7",
														"nodeType": "YulTypedName",
														"src": "2829:6:7",
														"type": ""
													}
												],
												"src": "2731:176:7"
											},
											{
												"body": {
													"nativeSrc": "3059:220:7",
													"nodeType": "YulBlock",
													"src": "3059:220:7",
													"statements": [
														{
															"nativeSrc": "3069:74:7",
															"nodeType": "YulAssignment",
															"src": "3069:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3135:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3135:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3140:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3140:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3076:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3076:58:7"
																},
																"nativeSrc": "3076:67:7",
																"nodeType": "YulFunctionCall",
																"src": "3076:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3069:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3069:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3241:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3241:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889",
																	"nativeSrc": "3152:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "3152:88:7"
																},
																"nativeSrc": "3152:93:7",
																"nodeType": "YulFunctionCall",
																"src": "3152:93:7"
															},
															"nativeSrc": "3152:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "3152:93:7"
														},
														{
															"nativeSrc": "3254:19:7",
															"nodeType": "YulAssignment",
															"src": "3254:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3270:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3270:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:3:7"
																},
																"nativeSrc": "3261:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3254:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3254:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2913:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3047:3:7",
														"nodeType": "YulTypedName",
														"src": "3047:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3055:3:7",
														"nodeType": "YulTypedName",
														"src": "3055:3:7",
														"type": ""
													}
												],
												"src": "2913:366:7"
											},
											{
												"body": {
													"nativeSrc": "3456:248:7",
													"nodeType": "YulBlock",
													"src": "3456:248:7",
													"statements": [
														{
															"nativeSrc": "3466:26:7",
															"nodeType": "YulAssignment",
															"src": "3466:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3478:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3478:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3489:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3489:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3474:3:7"
																},
																"nativeSrc": "3474:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3474:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3466:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3466:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3513:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3513:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3509:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:7"
																		},
																		"nativeSrc": "3509:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3532:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3532:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3538:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3538:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:7"
																		},
																		"nativeSrc": "3528:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3528:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3502:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3502:6:7"
																},
																"nativeSrc": "3502:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3502:47:7"
															},
															"nativeSrc": "3502:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3502:47:7"
														},
														{
															"nativeSrc": "3558:139:7",
															"nodeType": "YulAssignment",
															"src": "3558:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3692:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3692:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3566:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "3566:124:7"
																},
																"nativeSrc": "3566:131:7",
																"nodeType": "YulFunctionCall",
																"src": "3566:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3558:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3558:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3285:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3436:9:7",
														"nodeType": "YulTypedName",
														"src": "3436:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3451:4:7",
														"nodeType": "YulTypedName",
														"src": "3451:4:7",
														"type": ""
													}
												],
												"src": "3285:419:7"
											},
											{
												"body": {
													"nativeSrc": "3816:133:7",
													"nodeType": "YulBlock",
													"src": "3816:133:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3838:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3838:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3846:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3846:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3834:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3834:3:7"
																		},
																		"nativeSrc": "3834:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3834:14:7"
																	},
																	{
																		"hexValue": "5365206465626520656e7669617220616c206d656e6f7320302e303520424e42",
																		"kind": "string",
																		"nativeSrc": "3850:34:7",
																		"nodeType": "YulLiteral",
																		"src": "3850:34:7",
																		"type": "",
																		"value": "Se debe enviar al menos 0.05 BNB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3827:6:7"
																},
																"nativeSrc": "3827:58:7",
																"nodeType": "YulFunctionCall",
																"src": "3827:58:7"
															},
															"nativeSrc": "3827:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "3827:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3906:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3906:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3914:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3914:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3902:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:7"
																		},
																		"nativeSrc": "3902:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3902:15:7"
																	},
																	{
																		"hexValue": "20636f6d6f20746173612064652072657469726f",
																		"kind": "string",
																		"nativeSrc": "3919:22:7",
																		"nodeType": "YulLiteral",
																		"src": "3919:22:7",
																		"type": "",
																		"value": " como tasa de retiro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3895:6:7"
																},
																"nativeSrc": "3895:47:7",
																"nodeType": "YulFunctionCall",
																"src": "3895:47:7"
															},
															"nativeSrc": "3895:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "3895:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661",
												"nativeSrc": "3710:239:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3808:6:7",
														"nodeType": "YulTypedName",
														"src": "3808:6:7",
														"type": ""
													}
												],
												"src": "3710:239:7"
											},
											{
												"body": {
													"nativeSrc": "4101:220:7",
													"nodeType": "YulBlock",
													"src": "4101:220:7",
													"statements": [
														{
															"nativeSrc": "4111:74:7",
															"nodeType": "YulAssignment",
															"src": "4111:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4177:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4177:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4182:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4182:2:7",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4118:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:58:7"
																},
																"nativeSrc": "4118:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4111:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4283:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4283:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661",
																	"nativeSrc": "4194:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "4194:88:7"
																},
																"nativeSrc": "4194:93:7",
																"nodeType": "YulFunctionCall",
																"src": "4194:93:7"
															},
															"nativeSrc": "4194:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "4194:93:7"
														},
														{
															"nativeSrc": "4296:19:7",
															"nodeType": "YulAssignment",
															"src": "4296:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4307:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4307:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4312:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4303:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4303:3:7"
																},
																"nativeSrc": "4303:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4303:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4296:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4296:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3955:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4089:3:7",
														"nodeType": "YulTypedName",
														"src": "4089:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4097:3:7",
														"nodeType": "YulTypedName",
														"src": "4097:3:7",
														"type": ""
													}
												],
												"src": "3955:366:7"
											},
											{
												"body": {
													"nativeSrc": "4498:248:7",
													"nodeType": "YulBlock",
													"src": "4498:248:7",
													"statements": [
														{
															"nativeSrc": "4508:26:7",
															"nodeType": "YulAssignment",
															"src": "4508:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4520:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4520:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4531:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4516:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:7"
																},
																"nativeSrc": "4516:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4516:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4508:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4508:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4555:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4555:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4566:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4566:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4551:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:7"
																		},
																		"nativeSrc": "4551:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4551:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4574:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4574:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4580:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4580:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4570:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4570:3:7"
																		},
																		"nativeSrc": "4570:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4570:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4544:6:7"
																},
																"nativeSrc": "4544:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4544:47:7"
															},
															"nativeSrc": "4544:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4544:47:7"
														},
														{
															"nativeSrc": "4600:139:7",
															"nodeType": "YulAssignment",
															"src": "4600:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4734:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4734:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4608:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4608:124:7"
																},
																"nativeSrc": "4608:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4608:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4600:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4600:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4327:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4478:9:7",
														"nodeType": "YulTypedName",
														"src": "4478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4493:4:7",
														"nodeType": "YulTypedName",
														"src": "4493:4:7",
														"type": ""
													}
												],
												"src": "4327:419:7"
											},
											{
												"body": {
													"nativeSrc": "4780:152:7",
													"nodeType": "YulBlock",
													"src": "4780:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4797:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4797:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4800:77:7",
																		"nodeType": "YulLiteral",
																		"src": "4800:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4790:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4790:6:7"
																},
																"nativeSrc": "4790:88:7",
																"nodeType": "YulFunctionCall",
																"src": "4790:88:7"
															},
															"nativeSrc": "4790:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "4790:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4894:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4894:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4897:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4897:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4887:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4887:6:7"
																},
																"nativeSrc": "4887:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4887:15:7"
															},
															"nativeSrc": "4887:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4887:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4918:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4918:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4921:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4921:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4911:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4911:6:7"
																},
																"nativeSrc": "4911:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4911:15:7"
															},
															"nativeSrc": "4911:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4911:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4752:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4752:180:7"
											},
											{
												"body": {
													"nativeSrc": "4983:149:7",
													"nodeType": "YulBlock",
													"src": "4983:149:7",
													"statements": [
														{
															"nativeSrc": "4993:25:7",
															"nodeType": "YulAssignment",
															"src": "4993:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5016:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5016:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4998:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4998:17:7"
																},
																"nativeSrc": "4998:20:7",
																"nodeType": "YulFunctionCall",
																"src": "4998:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4993:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "4993:1:7"
																}
															]
														},
														{
															"nativeSrc": "5027:25:7",
															"nodeType": "YulAssignment",
															"src": "5027:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5050:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5050:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5032:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "5032:17:7"
																},
																"nativeSrc": "5032:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5032:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5027:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5027:1:7"
																}
															]
														},
														{
															"nativeSrc": "5061:17:7",
															"nodeType": "YulAssignment",
															"src": "5061:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5073:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5073:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5076:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5076:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5069:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:7"
																},
																"nativeSrc": "5069:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5069:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5061:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5061:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5103:22:7",
																"nodeType": "YulBlock",
																"src": "5103:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5105:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5105:16:7"
																			},
																			"nativeSrc": "5105:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5105:18:7"
																		},
																		"nativeSrc": "5105:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5105:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5094:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5094:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5100:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5100:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5091:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5091:2:7"
																},
																"nativeSrc": "5091:11:7",
																"nodeType": "YulFunctionCall",
																"src": "5091:11:7"
															},
															"nativeSrc": "5088:37:7",
															"nodeType": "YulIf",
															"src": "5088:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4938:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4969:1:7",
														"nodeType": "YulTypedName",
														"src": "4969:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4972:1:7",
														"nodeType": "YulTypedName",
														"src": "4972:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4978:4:7",
														"nodeType": "YulTypedName",
														"src": "4978:4:7",
														"type": ""
													}
												],
												"src": "4938:194:7"
											},
											{
												"body": {
													"nativeSrc": "5203:53:7",
													"nodeType": "YulBlock",
													"src": "5203:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5220:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5220:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5243:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5243:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5225:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5225:17:7"
																		},
																		"nativeSrc": "5225:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5225:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5213:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5213:6:7"
																},
																"nativeSrc": "5213:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5213:37:7"
															},
															"nativeSrc": "5213:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5213:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5138:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5191:5:7",
														"nodeType": "YulTypedName",
														"src": "5191:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5198:3:7",
														"nodeType": "YulTypedName",
														"src": "5198:3:7",
														"type": ""
													}
												],
												"src": "5138:118:7"
											},
											{
												"body": {
													"nativeSrc": "5388:206:7",
													"nodeType": "YulBlock",
													"src": "5388:206:7",
													"statements": [
														{
															"nativeSrc": "5398:26:7",
															"nodeType": "YulAssignment",
															"src": "5398:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5410:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5410:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5421:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5406:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5406:3:7"
																},
																"nativeSrc": "5406:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5406:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5398:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5398:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5502:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5502:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:7"
																		},
																		"nativeSrc": "5487:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5487:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5434:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5434:43:7"
																},
																"nativeSrc": "5434:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5434:71:7"
															},
															"nativeSrc": "5434:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5434:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5559:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5559:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5572:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5572:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5583:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5583:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5568:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:7"
																		},
																		"nativeSrc": "5568:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5568:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5515:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5515:43:7"
																},
																"nativeSrc": "5515:72:7",
																"nodeType": "YulFunctionCall",
																"src": "5515:72:7"
															},
															"nativeSrc": "5515:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "5515:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5262:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5352:9:7",
														"nodeType": "YulTypedName",
														"src": "5352:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5364:6:7",
														"nodeType": "YulTypedName",
														"src": "5364:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5372:6:7",
														"nodeType": "YulTypedName",
														"src": "5372:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5383:4:7",
														"nodeType": "YulTypedName",
														"src": "5383:4:7",
														"type": ""
													}
												],
												"src": "5262:332:7"
											},
											{
												"body": {
													"nativeSrc": "5706:123:7",
													"nodeType": "YulBlock",
													"src": "5706:123:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5728:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5736:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5736:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5724:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:7"
																		},
																		"nativeSrc": "5724:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5724:14:7"
																	},
																	{
																		"hexValue": "456c206d6f6e746f2064656c206465706f7369746f206465626520736572206d",
																		"kind": "string",
																		"nativeSrc": "5740:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5740:34:7",
																		"type": "",
																		"value": "El monto del deposito debe ser m"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5717:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:7"
																},
																"nativeSrc": "5717:58:7",
																"nodeType": "YulFunctionCall",
																"src": "5717:58:7"
															},
															"nativeSrc": "5717:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "5717:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5796:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5804:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5792:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5792:3:7"
																		},
																		"nativeSrc": "5792:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5792:15:7"
																	},
																	{
																		"hexValue": "61796f72207175652030",
																		"kind": "string",
																		"nativeSrc": "5809:12:7",
																		"nodeType": "YulLiteral",
																		"src": "5809:12:7",
																		"type": "",
																		"value": "ayor que 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5785:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5785:6:7"
																},
																"nativeSrc": "5785:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5785:37:7"
															},
															"nativeSrc": "5785:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5785:37:7"
														}
													]
												},
												"name": "store_literal_in_memory_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464",
												"nativeSrc": "5600:229:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5698:6:7",
														"nodeType": "YulTypedName",
														"src": "5698:6:7",
														"type": ""
													}
												],
												"src": "5600:229:7"
											},
											{
												"body": {
													"nativeSrc": "5981:220:7",
													"nodeType": "YulBlock",
													"src": "5981:220:7",
													"statements": [
														{
															"nativeSrc": "5991:74:7",
															"nodeType": "YulAssignment",
															"src": "5991:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6057:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6057:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6062:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6062:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5998:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5998:58:7"
																},
																"nativeSrc": "5998:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5998:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5991:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5991:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6163:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464",
																	"nativeSrc": "6074:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6074:88:7"
																},
																"nativeSrc": "6074:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6074:93:7"
															},
															"nativeSrc": "6074:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6074:93:7"
														},
														{
															"nativeSrc": "6176:19:7",
															"nodeType": "YulAssignment",
															"src": "6176:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6187:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6187:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6192:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6192:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6183:3:7"
																},
																"nativeSrc": "6183:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6183:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6176:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5835:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5969:3:7",
														"nodeType": "YulTypedName",
														"src": "5969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5977:3:7",
														"nodeType": "YulTypedName",
														"src": "5977:3:7",
														"type": ""
													}
												],
												"src": "5835:366:7"
											},
											{
												"body": {
													"nativeSrc": "6378:248:7",
													"nodeType": "YulBlock",
													"src": "6378:248:7",
													"statements": [
														{
															"nativeSrc": "6388:26:7",
															"nodeType": "YulAssignment",
															"src": "6388:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6400:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6400:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6411:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6411:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6396:3:7"
																},
																"nativeSrc": "6396:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6396:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6388:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6388:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6435:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6446:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6446:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6431:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6431:3:7"
																		},
																		"nativeSrc": "6431:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6431:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6454:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6454:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6460:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6460:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6450:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6450:3:7"
																		},
																		"nativeSrc": "6450:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6450:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6424:6:7"
																},
																"nativeSrc": "6424:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6424:47:7"
															},
															"nativeSrc": "6424:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6424:47:7"
														},
														{
															"nativeSrc": "6480:139:7",
															"nodeType": "YulAssignment",
															"src": "6480:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6614:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6614:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6488:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6488:124:7"
																},
																"nativeSrc": "6488:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6488:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6480:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6480:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6207:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6358:9:7",
														"nodeType": "YulTypedName",
														"src": "6358:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6373:4:7",
														"nodeType": "YulTypedName",
														"src": "6373:4:7",
														"type": ""
													}
												],
												"src": "6207:419:7"
											},
											{
												"body": {
													"nativeSrc": "6676:147:7",
													"nodeType": "YulBlock",
													"src": "6676:147:7",
													"statements": [
														{
															"nativeSrc": "6686:25:7",
															"nodeType": "YulAssignment",
															"src": "6686:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6709:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6709:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6691:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6691:17:7"
																},
																"nativeSrc": "6691:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6691:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6686:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6686:1:7"
																}
															]
														},
														{
															"nativeSrc": "6720:25:7",
															"nodeType": "YulAssignment",
															"src": "6720:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6743:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6743:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6725:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6725:17:7"
																},
																"nativeSrc": "6725:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6725:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6720:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6720:1:7"
																}
															]
														},
														{
															"nativeSrc": "6754:16:7",
															"nodeType": "YulAssignment",
															"src": "6754:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6765:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6765:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6768:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6768:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6761:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6761:3:7"
																},
																"nativeSrc": "6761:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6761:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6754:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6754:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6794:22:7",
																"nodeType": "YulBlock",
																"src": "6794:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6796:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6796:16:7"
																			},
																			"nativeSrc": "6796:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6796:18:7"
																		},
																		"nativeSrc": "6796:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6796:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6786:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6786:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6789:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6789:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6783:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6783:2:7"
																},
																"nativeSrc": "6783:10:7",
																"nodeType": "YulFunctionCall",
																"src": "6783:10:7"
															},
															"nativeSrc": "6780:36:7",
															"nodeType": "YulIf",
															"src": "6780:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6632:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6663:1:7",
														"nodeType": "YulTypedName",
														"src": "6663:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6666:1:7",
														"nodeType": "YulTypedName",
														"src": "6666:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6672:3:7",
														"nodeType": "YulTypedName",
														"src": "6672:3:7",
														"type": ""
													}
												],
												"src": "6632:191:7"
											},
											{
												"body": {
													"nativeSrc": "6935:118:7",
													"nodeType": "YulBlock",
													"src": "6935:118:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6957:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6957:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6965:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6965:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6953:3:7"
																		},
																		"nativeSrc": "6953:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6953:14:7"
																	},
																	{
																		"hexValue": "4e6f207469656e657320756e206465706f7369746f20657370656369616c2061",
																		"kind": "string",
																		"nativeSrc": "6969:34:7",
																		"nodeType": "YulLiteral",
																		"src": "6969:34:7",
																		"type": "",
																		"value": "No tienes un deposito especial a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6946:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6946:6:7"
																},
																"nativeSrc": "6946:58:7",
																"nodeType": "YulFunctionCall",
																"src": "6946:58:7"
															},
															"nativeSrc": "6946:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "6946:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7025:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7025:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7033:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7033:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7021:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7021:3:7"
																		},
																		"nativeSrc": "7021:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7021:15:7"
																	},
																	{
																		"hexValue": "637469766f",
																		"kind": "string",
																		"nativeSrc": "7038:7:7",
																		"nodeType": "YulLiteral",
																		"src": "7038:7:7",
																		"type": "",
																		"value": "ctivo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7014:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7014:6:7"
																},
																"nativeSrc": "7014:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7014:32:7"
															},
															"nativeSrc": "7014:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "7014:32:7"
														}
													]
												},
												"name": "store_literal_in_memory_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d",
												"nativeSrc": "6829:224:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6927:6:7",
														"nodeType": "YulTypedName",
														"src": "6927:6:7",
														"type": ""
													}
												],
												"src": "6829:224:7"
											},
											{
												"body": {
													"nativeSrc": "7205:220:7",
													"nodeType": "YulBlock",
													"src": "7205:220:7",
													"statements": [
														{
															"nativeSrc": "7215:74:7",
															"nodeType": "YulAssignment",
															"src": "7215:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7281:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7281:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7286:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7286:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7222:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7222:58:7"
																},
																"nativeSrc": "7222:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7222:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7215:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7387:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7387:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d",
																	"nativeSrc": "7298:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7298:88:7"
																},
																"nativeSrc": "7298:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7298:93:7"
															},
															"nativeSrc": "7298:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7298:93:7"
														},
														{
															"nativeSrc": "7400:19:7",
															"nodeType": "YulAssignment",
															"src": "7400:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7411:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7411:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7416:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7416:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7407:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7407:3:7"
																},
																"nativeSrc": "7407:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7407:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7400:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7059:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7193:3:7",
														"nodeType": "YulTypedName",
														"src": "7193:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7201:3:7",
														"nodeType": "YulTypedName",
														"src": "7201:3:7",
														"type": ""
													}
												],
												"src": "7059:366:7"
											},
											{
												"body": {
													"nativeSrc": "7602:248:7",
													"nodeType": "YulBlock",
													"src": "7602:248:7",
													"statements": [
														{
															"nativeSrc": "7612:26:7",
															"nodeType": "YulAssignment",
															"src": "7612:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7624:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7624:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7635:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7635:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7620:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:7"
																},
																"nativeSrc": "7620:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7620:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7612:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7612:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7659:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7659:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7670:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7670:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7655:3:7"
																		},
																		"nativeSrc": "7655:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7655:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7678:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7678:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7684:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7674:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7674:3:7"
																		},
																		"nativeSrc": "7674:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7674:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7648:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7648:6:7"
																},
																"nativeSrc": "7648:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7648:47:7"
															},
															"nativeSrc": "7648:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7648:47:7"
														},
														{
															"nativeSrc": "7704:139:7",
															"nodeType": "YulAssignment",
															"src": "7704:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7838:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7838:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7712:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7712:124:7"
																},
																"nativeSrc": "7712:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7712:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7704:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7704:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7431:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7582:9:7",
														"nodeType": "YulTypedName",
														"src": "7582:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7597:4:7",
														"nodeType": "YulTypedName",
														"src": "7597:4:7",
														"type": ""
													}
												],
												"src": "7431:419:7"
											},
											{
												"body": {
													"nativeSrc": "7962:142:7",
													"nodeType": "YulBlock",
													"src": "7962:142:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7984:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7984:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7992:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7992:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7980:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7980:3:7"
																		},
																		"nativeSrc": "7980:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7980:14:7"
																	},
																	{
																		"hexValue": "456c2072657469726f20657370656369616c20736f6c6f206573746120646973",
																		"kind": "string",
																		"nativeSrc": "7996:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7996:34:7",
																		"type": "",
																		"value": "El retiro especial solo esta dis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7973:6:7"
																},
																"nativeSrc": "7973:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7973:58:7"
															},
															"nativeSrc": "7973:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7973:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8052:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8052:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8060:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8060:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8048:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8048:3:7"
																		},
																		"nativeSrc": "8048:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8048:15:7"
																	},
																	{
																		"hexValue": "706f6e69626c652064657370756573206465203130206d696e75746f73",
																		"kind": "string",
																		"nativeSrc": "8065:31:7",
																		"nodeType": "YulLiteral",
																		"src": "8065:31:7",
																		"type": "",
																		"value": "ponible despues de 10 minutos"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8041:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8041:6:7"
																},
																"nativeSrc": "8041:56:7",
																"nodeType": "YulFunctionCall",
																"src": "8041:56:7"
															},
															"nativeSrc": "8041:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "8041:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051",
												"nativeSrc": "7856:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7954:6:7",
														"nodeType": "YulTypedName",
														"src": "7954:6:7",
														"type": ""
													}
												],
												"src": "7856:248:7"
											},
											{
												"body": {
													"nativeSrc": "8256:220:7",
													"nodeType": "YulBlock",
													"src": "8256:220:7",
													"statements": [
														{
															"nativeSrc": "8266:74:7",
															"nodeType": "YulAssignment",
															"src": "8266:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8332:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8332:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8337:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8337:2:7",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8273:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8273:58:7"
																},
																"nativeSrc": "8273:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8273:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8266:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8438:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8438:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051",
																	"nativeSrc": "8349:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8349:88:7"
																},
																"nativeSrc": "8349:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8349:93:7"
															},
															"nativeSrc": "8349:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8349:93:7"
														},
														{
															"nativeSrc": "8451:19:7",
															"nodeType": "YulAssignment",
															"src": "8451:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8462:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8462:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8467:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8467:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8458:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8458:3:7"
																},
																"nativeSrc": "8458:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8458:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8451:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8451:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8110:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8244:3:7",
														"nodeType": "YulTypedName",
														"src": "8244:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8252:3:7",
														"nodeType": "YulTypedName",
														"src": "8252:3:7",
														"type": ""
													}
												],
												"src": "8110:366:7"
											},
											{
												"body": {
													"nativeSrc": "8653:248:7",
													"nodeType": "YulBlock",
													"src": "8653:248:7",
													"statements": [
														{
															"nativeSrc": "8663:26:7",
															"nodeType": "YulAssignment",
															"src": "8663:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8675:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8675:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8686:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8686:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8671:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:7"
																},
																"nativeSrc": "8671:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8671:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8663:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8663:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8710:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8710:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8721:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8721:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8706:3:7"
																		},
																		"nativeSrc": "8706:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8706:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8729:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8729:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8735:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8735:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8725:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8725:3:7"
																		},
																		"nativeSrc": "8725:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8725:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8699:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8699:6:7"
																},
																"nativeSrc": "8699:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8699:47:7"
															},
															"nativeSrc": "8699:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8699:47:7"
														},
														{
															"nativeSrc": "8755:139:7",
															"nodeType": "YulAssignment",
															"src": "8755:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8889:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8889:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8763:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8763:124:7"
																},
																"nativeSrc": "8763:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8763:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8755:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8755:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8482:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8633:9:7",
														"nodeType": "YulTypedName",
														"src": "8633:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8648:4:7",
														"nodeType": "YulTypedName",
														"src": "8648:4:7",
														"type": ""
													}
												],
												"src": "8482:419:7"
											},
											{
												"body": {
													"nativeSrc": "9013:72:7",
													"nodeType": "YulBlock",
													"src": "9013:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9035:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9035:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9043:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9043:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9031:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9031:3:7"
																		},
																		"nativeSrc": "9031:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9031:14:7"
																	},
																	{
																		"hexValue": "4e6f207469656e657320756e206465706f7369746f2061637469766f",
																		"kind": "string",
																		"nativeSrc": "9047:30:7",
																		"nodeType": "YulLiteral",
																		"src": "9047:30:7",
																		"type": "",
																		"value": "No tienes un deposito activo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9024:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:7"
																},
																"nativeSrc": "9024:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9024:54:7"
															},
															"nativeSrc": "9024:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "9024:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63",
												"nativeSrc": "8907:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9005:6:7",
														"nodeType": "YulTypedName",
														"src": "9005:6:7",
														"type": ""
													}
												],
												"src": "8907:178:7"
											},
											{
												"body": {
													"nativeSrc": "9237:220:7",
													"nodeType": "YulBlock",
													"src": "9237:220:7",
													"statements": [
														{
															"nativeSrc": "9247:74:7",
															"nodeType": "YulAssignment",
															"src": "9247:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9313:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9313:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9318:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9318:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9254:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9254:58:7"
																},
																"nativeSrc": "9254:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9254:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9247:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9247:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9419:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9419:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63",
																	"nativeSrc": "9330:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9330:88:7"
																},
																"nativeSrc": "9330:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9330:93:7"
															},
															"nativeSrc": "9330:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9330:93:7"
														},
														{
															"nativeSrc": "9432:19:7",
															"nodeType": "YulAssignment",
															"src": "9432:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9443:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9443:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9448:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9448:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9439:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9439:3:7"
																},
																"nativeSrc": "9439:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9439:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9432:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9091:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9225:3:7",
														"nodeType": "YulTypedName",
														"src": "9225:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9233:3:7",
														"nodeType": "YulTypedName",
														"src": "9233:3:7",
														"type": ""
													}
												],
												"src": "9091:366:7"
											},
											{
												"body": {
													"nativeSrc": "9634:248:7",
													"nodeType": "YulBlock",
													"src": "9634:248:7",
													"statements": [
														{
															"nativeSrc": "9644:26:7",
															"nodeType": "YulAssignment",
															"src": "9644:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9656:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9656:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9667:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9667:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9652:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9652:3:7"
																},
																"nativeSrc": "9652:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9652:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9644:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9644:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9691:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9691:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9702:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9702:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9687:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9687:3:7"
																		},
																		"nativeSrc": "9687:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9687:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9710:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9710:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9716:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9716:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9706:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9706:3:7"
																		},
																		"nativeSrc": "9706:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9706:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9680:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9680:6:7"
																},
																"nativeSrc": "9680:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9680:47:7"
															},
															"nativeSrc": "9680:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9680:47:7"
														},
														{
															"nativeSrc": "9736:139:7",
															"nodeType": "YulAssignment",
															"src": "9736:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9870:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9870:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9744:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9744:124:7"
																},
																"nativeSrc": "9744:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9744:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9736:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9736:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9463:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9614:9:7",
														"nodeType": "YulTypedName",
														"src": "9614:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9629:4:7",
														"nodeType": "YulTypedName",
														"src": "9629:4:7",
														"type": ""
													}
												],
												"src": "9463:419:7"
											},
											{
												"body": {
													"nativeSrc": "9936:362:7",
													"nodeType": "YulBlock",
													"src": "9936:362:7",
													"statements": [
														{
															"nativeSrc": "9946:25:7",
															"nodeType": "YulAssignment",
															"src": "9946:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9969:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9969:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9951:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:17:7"
																},
																"nativeSrc": "9951:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9946:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9946:1:7"
																}
															]
														},
														{
															"nativeSrc": "9980:25:7",
															"nodeType": "YulAssignment",
															"src": "9980:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10003:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10003:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9985:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9985:17:7"
																},
																"nativeSrc": "9985:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9985:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9980:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9980:1:7"
																}
															]
														},
														{
															"nativeSrc": "10014:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10014:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10037:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10037:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10040:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10040:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10033:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10033:3:7"
																},
																"nativeSrc": "10033:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10033:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10018:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10018:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10051:41:7",
															"nodeType": "YulAssignment",
															"src": "10051:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10080:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10080:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10062:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10062:17:7"
																},
																"nativeSrc": "10062:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10062:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10051:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10051:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10269:22:7",
																"nodeType": "YulBlock",
																"src": "10269:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10271:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10271:16:7"
																			},
																			"nativeSrc": "10271:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10271:18:7"
																		},
																		"nativeSrc": "10271:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10271:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10202:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10202:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10195:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10195:6:7"
																				},
																				"nativeSrc": "10195:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10195:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10225:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10225:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10232:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10232:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10241:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10241:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10228:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10228:3:7"
																						},
																						"nativeSrc": "10228:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10228:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10222:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10222:2:7"
																				},
																				"nativeSrc": "10222:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10222:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10175:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10175:2:7"
																		},
																		"nativeSrc": "10175:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10175:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10155:6:7"
																},
																"nativeSrc": "10155:113:7",
																"nodeType": "YulFunctionCall",
																"src": "10155:113:7"
															},
															"nativeSrc": "10152:139:7",
															"nodeType": "YulIf",
															"src": "10152:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9888:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9919:1:7",
														"nodeType": "YulTypedName",
														"src": "9919:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9922:1:7",
														"nodeType": "YulTypedName",
														"src": "9922:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9928:7:7",
														"nodeType": "YulTypedName",
														"src": "9928:7:7",
														"type": ""
													}
												],
												"src": "9888:410:7"
											},
											{
												"body": {
													"nativeSrc": "10332:152:7",
													"nodeType": "YulBlock",
													"src": "10332:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10349:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10349:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10352:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10352:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10342:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10342:6:7"
																},
																"nativeSrc": "10342:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10342:88:7"
															},
															"nativeSrc": "10342:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10342:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10446:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10446:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10449:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10449:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10439:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10439:6:7"
																},
																"nativeSrc": "10439:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10439:15:7"
															},
															"nativeSrc": "10439:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10439:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10470:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10470:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10473:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10473:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10463:6:7"
																},
																"nativeSrc": "10463:15:7",
																"nodeType": "YulFunctionCall",
																"src": "10463:15:7"
															},
															"nativeSrc": "10463:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "10463:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10304:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10304:180:7"
											},
											{
												"body": {
													"nativeSrc": "10532:143:7",
													"nodeType": "YulBlock",
													"src": "10532:143:7",
													"statements": [
														{
															"nativeSrc": "10542:25:7",
															"nodeType": "YulAssignment",
															"src": "10542:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10565:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10565:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10547:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10547:17:7"
																},
																"nativeSrc": "10547:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10547:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10542:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10542:1:7"
																}
															]
														},
														{
															"nativeSrc": "10576:25:7",
															"nodeType": "YulAssignment",
															"src": "10576:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10599:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10599:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10581:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10581:17:7"
																},
																"nativeSrc": "10581:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10581:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10576:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10576:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10623:22:7",
																"nodeType": "YulBlock",
																"src": "10623:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10625:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10625:16:7"
																			},
																			"nativeSrc": "10625:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10625:18:7"
																		},
																		"nativeSrc": "10625:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10625:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10620:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10620:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10613:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:7"
																},
																"nativeSrc": "10613:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10613:9:7"
															},
															"nativeSrc": "10610:35:7",
															"nodeType": "YulIf",
															"src": "10610:35:7"
														},
														{
															"nativeSrc": "10655:14:7",
															"nodeType": "YulAssignment",
															"src": "10655:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10664:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10664:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10667:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10667:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10660:3:7"
																},
																"nativeSrc": "10660:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10660:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10655:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10655:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10490:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10521:1:7",
														"nodeType": "YulTypedName",
														"src": "10521:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10524:1:7",
														"nodeType": "YulTypedName",
														"src": "10524:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10530:1:7",
														"nodeType": "YulTypedName",
														"src": "10530:1:7",
														"type": ""
													}
												],
												"src": "10490:185:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error, no previous deposit\")\n\n    }\n\n    function abi_encode_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661(memPtr) {\n\n        mstore(add(memPtr, 0), \"Se debe enviar al menos 0.05 BNB\")\n\n        mstore(add(memPtr, 32), \" como tasa de retiro\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 52)\n        store_literal_in_memory_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464(memPtr) {\n\n        mstore(add(memPtr, 0), \"El monto del deposito debe ser m\")\n\n        mstore(add(memPtr, 32), \"ayor que 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tienes un deposito especial a\")\n\n        mstore(add(memPtr, 32), \"ctivo\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051(memPtr) {\n\n        mstore(add(memPtr, 0), \"El retiro especial solo esta dis\")\n\n        mstore(add(memPtr, 32), \"ponible despues de 10 minutos\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tienes un deposito activo\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAE6441A3 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xDCC52A48 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xDCC52A48 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xDFF05F82 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xEB0C4955 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xED2D7A97 EQ PUSH2 0x378 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0xAE6441A3 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xC8510E4E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x2CC JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x726FE82B GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x726FE82B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x73732024 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8CE5FCC9 EQ PUSH2 0x232 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x497DE4A EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x12FA90A1 EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x249EE9E1 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x186 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x170 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17D SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH2 0x41F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x265 SWAP2 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AC PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x10F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH2 0x7E5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH2 0x913 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0xA36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x338 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x359 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH2 0xA60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x1000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH2 0xA6F JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A6 SWAP1 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4EB SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4FE CALLER PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH7 0x1C6BF526340000 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x56A SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x62F SWAP3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x646 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x758 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x7BB CALLER PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x81E SWAP1 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST CALLVALUE PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x95C SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xA6A CALLER PUSH2 0xDDE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAF8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEF SWAP1 PUSH2 0x13DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x258 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xB43 SWAP2 SWAP1 PUSH2 0x1338 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB7C SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD CALLVALUE LT ISZERO PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC1 SWAP1 PUSH2 0x11F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xBD4 CALLER PUSH2 0xF2A JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x8 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCBD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDAE SWAP3 SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE68 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE5F SWAP1 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E33731 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x64 PUSH2 0xF04 SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0xF0E SWAP2 SWAP1 PUSH2 0x155D JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 DUP3 PUSH2 0xF1D SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xF75 SWAP2 SWAP1 PUSH2 0x1241 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E33731 PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xC8 PUSH2 0xFC7 SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0xFD1 SWAP2 SWAP1 PUSH2 0x155D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFA DUP2 PUSH2 0xFE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1013 PUSH0 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1046 DUP3 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1056 DUP2 PUSH2 0x103C JUMP JUMPDEST DUP2 EQ PUSH2 0x1060 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1071 DUP2 PUSH2 0x104D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x108C JUMPI PUSH2 0x108B PUSH2 0x1019 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1099 DUP5 DUP3 DUP6 ADD PUSH2 0x1063 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B6 DUP2 PUSH2 0x10A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10CF PUSH0 DUP4 ADD DUP5 PUSH2 0x10AD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10DF DUP3 PUSH2 0x101D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EF DUP2 PUSH2 0x10D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1108 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4572726F722C206E6F2070726576696F7573206465706F736974000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1152 PUSH1 0x1A DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x115D DUP3 PUSH2 0x111E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x117F DUP2 PUSH2 0x1146 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365206465626520656E7669617220616C206D656E6F7320302E303520424E42 PUSH0 DUP3 ADD MSTORE PUSH32 0x20636F6D6F20746173612064652072657469726F000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 PUSH1 0x34 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP3 PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x120D DUP2 PUSH2 0x11D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x124B DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1256 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x126E JUMPI PUSH2 0x126D PUSH2 0x1214 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x127D DUP2 PUSH2 0x103C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1296 PUSH0 DUP4 ADD DUP6 PUSH2 0x1274 JUMP JUMPDEST PUSH2 0x12A3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xFF1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x456C206D6F6E746F2064656C206465706F7369746F206465626520736572206D PUSH0 DUP3 ADD MSTORE PUSH32 0x61796F7220717565203000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1304 PUSH1 0x2A DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x130F DUP3 PUSH2 0x12AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1331 DUP2 PUSH2 0x12F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1342 DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x134D DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1365 JUMPI PUSH2 0x1364 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F207469656E657320756E206465706F7369746F20657370656369616C2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x637469766F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13C5 PUSH1 0x25 DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x13D0 DUP3 PUSH2 0x136B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13F2 DUP2 PUSH2 0x13B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x456C2072657469726F20657370656369616C20736F6C6F206573746120646973 PUSH0 DUP3 ADD MSTORE PUSH32 0x706F6E69626C652064657370756573206465203130206D696E75746F73000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1453 PUSH1 0x3D DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x145E DUP3 PUSH2 0x13F9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1480 DUP2 PUSH2 0x1447 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207469656E657320756E206465706F7369746F2061637469766F00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BB PUSH1 0x1C DUP4 PUSH2 0x110E JUMP JUMPDEST SWAP2 POP PUSH2 0x14C6 DUP3 PUSH2 0x1487 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14E8 DUP2 PUSH2 0x14AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14F9 DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1504 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1512 DUP2 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x1214 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1567 DUP3 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1572 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1582 JUMPI PUSH2 0x1581 PUSH2 0x1530 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0x1E 0x2E 0xB5 0xE0 0x2E 0xCD NOT 0x2D NOT SWAP12 0x2F LOG2 0xE6 0xF9 PUSH15 0xFF34CD16C6ACD04DB6E8F559F74432 MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "88:4353:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3208:113;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3447:127;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;204:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1578:830;;;:::i;:::-;;380:55;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;803:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:50;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3580:128;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;703:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1270:302;;;:::i;:::-;;1037:227;;;:::i;:::-;;260:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;325:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3327:114;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2413:729;;;:::i;:::-;;3208:113;3260:4;3284:17;:29;3302:10;3284:29;;;;;;;;;;;;;;;;3277:36;;3208:113;:::o;3447:127::-;3506:4;3530:24;:36;3555:10;3530:36;;;;;;;;;;;;;;;;3523:43;;3447:127;:::o;204:49::-;;;;;;;;;;;;;;;;;:::o;1578:830::-;1660:4;1633:31;;:11;:23;1645:10;1633:23;;;;;;;;;;;;;;;;;;;;;;;;;:31;;;1625:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1795:13;;1782:9;:26;;1774:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;1904:13;1920:30;1939:10;1920:18;:30::i;:::-;1904:46;;2017:10;2009:28;;:73;2069:11;2038:17;:29;2056:10;2038:29;;;;;;;;;;;;;;;;:42;;;;:::i;:::-;2009:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2125:1;2093:17;:29;2111:10;2093:29;;;;;;;;;;;;;;;:33;;;;2204:5;;;;;;;;;;:10;;;2215;2227:8;2204:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2309:1;2278:16;:28;2295:10;2278:28;;;;;;;;;;;;;;;:32;;;;2347:5;2321:11;:23;2333:10;2321:23;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2365:11;;;;;;;;;;;:20;;:35;2386:13;;2365:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1614:794;1578:830::o;380:55::-;;;;;;;;;;;;;;;;;:::o;444:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;803:38::-;;;;:::o;494:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;3580:128::-;3639:4;3663:37;3689:10;3663:25;:37::i;:::-;3656:44;;3580:128;:::o;703:88::-;;;;;;;;;;;;;:::o;1270:302::-;1342:1;1330:9;:13;1322:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1443:9;1403:24;:36;1428:10;1403:36;;;;;;;;;;;;;;;;:49;;;;;;;:::i;:::-;;;;;;;;1501:15;1463:23;:35;1487:10;1463:35;;;;;;;;;;;;;;;:53;;;;1560:4;1527:18;:30;1546:10;1527:30;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;1270:302::o;1037:227::-;1146:9;1114:17;:29;1132:10;1114:29;;;;;;;;;;;;;;;;:41;;;;:::i;:::-;1082:17;:29;1100:10;1082:29;;;;;;;;;;;;;;;:73;;;;1197:15;1166:16;:28;1183:10;1166:28;;;;;;;;;;;;;;;:46;;;;1249:4;1223:11;:23;1235:10;1223:23;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1037:227::o;260:56::-;;;;;;;;;;;;;;;;;:::o;325:48::-;;;;;;;;;;;;;;;;;:::o;3327:114::-;3379:4;3403:30;3422:10;3403:18;:30::i;:::-;3396:37;;3327:114;:::o;2413:729::-;2474:18;:30;2493:10;2474:30;;;;;;;;;;;;;;;;;;;;;;;;;2466:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;2622:10;2584:23;:35;2608:10;2584:35;;;;;;;;;;;;;;;;:48;;;;:::i;:::-;2565:15;:67;;2557:141;;;;;;;;;;;;:::i;:::-;;;;;;;;;2730:13;;2717:9;:26;;2709:91;;;;;;;;;;;;:::i;:::-;;;;;;;;;2813:13;2829:37;2855:10;2829:25;:37::i;:::-;2813:53;;2877:11;;;;;;;;;;;:20;;:35;2898:13;;2877:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2931:10;2923:28;;:66;2952:24;:36;2977:10;2952:36;;;;;;;;;;;;;;;;2923:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3041:1;3002:24;:36;3027:10;3002:36;;;;;;;;;;;;;;;:40;;;;3086:5;3053:18;:30;3072:10;3053:30;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;3102:5;;;;;;;;;;:10;;;3113;3125:8;3102:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2455:687;2413:729::o;3714:393::-;3778:4;3803:11;:17;3815:4;3803:17;;;;;;;;;;;;;;;;;;;;;;;;;3795:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3866:21;3908:16;:22;3925:4;3908:22;;;;;;;;;;;;;;;;3890:15;:40;;;;:::i;:::-;3866:64;;3941:22;4000:8;3973:17;:23;3991:4;3973:23;;;;;;;;;;;;;;;;3967:3;:29;;;;:::i;:::-;3966:42;;;;:::i;:::-;3941:67;;4019:13;4055:16;4035:17;:36;;;;:::i;:::-;4019:52;;4091:8;4084:15;;;;;3714:393;;;:::o;4113:325::-;4185:4;4202:21;4244:23;:29;4268:4;4244:29;;;;;;;;;;;;;;;;4226:15;:47;;;;:::i;:::-;4202:71;;4284:22;4350:8;4316:24;:30;4341:4;4316:30;;;;;;;;;;;;;;;;4310:3;:36;;;;:::i;:::-;4309:49;;;;:::i;:::-;4284:74;;4414:16;4394:17;:36;;;;:::i;:::-;4387:43;;;;4113:325;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:104::-;2083:7;2112:24;2130:5;2112:24;:::i;:::-;2101:35;;2038:104;;;:::o;2148:142::-;2251:32;2277:5;2251:32;:::i;:::-;2246:3;2239:45;2148:142;;:::o;2296:254::-;2405:4;2443:2;2432:9;2428:18;2420:26;;2456:87;2540:1;2529:9;2525:17;2516:6;2456:87;:::i;:::-;2296:254;;;;:::o;2556:169::-;2640:11;2674:6;2669:3;2662:19;2714:4;2709:3;2705:14;2690:29;;2556:169;;;;:::o;2731:176::-;2871:28;2867:1;2859:6;2855:14;2848:52;2731:176;:::o;2913:366::-;3055:3;3076:67;3140:2;3135:3;3076:67;:::i;:::-;3069:74;;3152:93;3241:3;3152:93;:::i;:::-;3270:2;3265:3;3261:12;3254:19;;2913:366;;;:::o;3285:419::-;3451:4;3489:2;3478:9;3474:18;3466:26;;3538:9;3532:4;3528:20;3524:1;3513:9;3509:17;3502:47;3566:131;3692:4;3566:131;:::i;:::-;3558:139;;3285:419;;;:::o;3710:239::-;3850:34;3846:1;3838:6;3834:14;3827:58;3919:22;3914:2;3906:6;3902:15;3895:47;3710:239;:::o;3955:366::-;4097:3;4118:67;4182:2;4177:3;4118:67;:::i;:::-;4111:74;;4194:93;4283:3;4194:93;:::i;:::-;4312:2;4307:3;4303:12;4296:19;;3955:366;;;:::o;4327:419::-;4493:4;4531:2;4520:9;4516:18;4508:26;;4580:9;4574:4;4570:20;4566:1;4555:9;4551:17;4544:47;4608:131;4734:4;4608:131;:::i;:::-;4600:139;;4327:419;;;:::o;4752:180::-;4800:77;4797:1;4790:88;4897:4;4894:1;4887:15;4921:4;4918:1;4911:15;4938:194;4978:4;4998:20;5016:1;4998:20;:::i;:::-;4993:25;;5032:20;5050:1;5032:20;:::i;:::-;5027:25;;5076:1;5073;5069:9;5061:17;;5100:1;5094:4;5091:11;5088:37;;;5105:18;;:::i;:::-;5088:37;4938:194;;;;:::o;5138:118::-;5225:24;5243:5;5225:24;:::i;:::-;5220:3;5213:37;5138:118;;:::o;5262:332::-;5383:4;5421:2;5410:9;5406:18;5398:26;;5434:71;5502:1;5491:9;5487:17;5478:6;5434:71;:::i;:::-;5515:72;5583:2;5572:9;5568:18;5559:6;5515:72;:::i;:::-;5262:332;;;;;:::o;5600:229::-;5740:34;5736:1;5728:6;5724:14;5717:58;5809:12;5804:2;5796:6;5792:15;5785:37;5600:229;:::o;5835:366::-;5977:3;5998:67;6062:2;6057:3;5998:67;:::i;:::-;5991:74;;6074:93;6163:3;6074:93;:::i;:::-;6192:2;6187:3;6183:12;6176:19;;5835:366;;;:::o;6207:419::-;6373:4;6411:2;6400:9;6396:18;6388:26;;6460:9;6454:4;6450:20;6446:1;6435:9;6431:17;6424:47;6488:131;6614:4;6488:131;:::i;:::-;6480:139;;6207:419;;;:::o;6632:191::-;6672:3;6691:20;6709:1;6691:20;:::i;:::-;6686:25;;6725:20;6743:1;6725:20;:::i;:::-;6720:25;;6768:1;6765;6761:9;6754:16;;6789:3;6786:1;6783:10;6780:36;;;6796:18;;:::i;:::-;6780:36;6632:191;;;;:::o;6829:224::-;6969:34;6965:1;6957:6;6953:14;6946:58;7038:7;7033:2;7025:6;7021:15;7014:32;6829:224;:::o;7059:366::-;7201:3;7222:67;7286:2;7281:3;7222:67;:::i;:::-;7215:74;;7298:93;7387:3;7298:93;:::i;:::-;7416:2;7411:3;7407:12;7400:19;;7059:366;;;:::o;7431:419::-;7597:4;7635:2;7624:9;7620:18;7612:26;;7684:9;7678:4;7674:20;7670:1;7659:9;7655:17;7648:47;7712:131;7838:4;7712:131;:::i;:::-;7704:139;;7431:419;;;:::o;7856:248::-;7996:34;7992:1;7984:6;7980:14;7973:58;8065:31;8060:2;8052:6;8048:15;8041:56;7856:248;:::o;8110:366::-;8252:3;8273:67;8337:2;8332:3;8273:67;:::i;:::-;8266:74;;8349:93;8438:3;8349:93;:::i;:::-;8467:2;8462:3;8458:12;8451:19;;8110:366;;;:::o;8482:419::-;8648:4;8686:2;8675:9;8671:18;8663:26;;8735:9;8729:4;8725:20;8721:1;8710:9;8706:17;8699:47;8763:131;8889:4;8763:131;:::i;:::-;8755:139;;8482:419;;;:::o;8907:178::-;9047:30;9043:1;9035:6;9031:14;9024:54;8907:178;:::o;9091:366::-;9233:3;9254:67;9318:2;9313:3;9254:67;:::i;:::-;9247:74;;9330:93;9419:3;9330:93;:::i;:::-;9448:2;9443:3;9439:12;9432:19;;9091:366;;;:::o;9463:419::-;9629:4;9667:2;9656:9;9652:18;9644:26;;9716:9;9710:4;9706:20;9702:1;9691:9;9687:17;9680:47;9744:131;9870:4;9744:131;:::i;:::-;9736:139;;9463:419;;;:::o;9888:410::-;9928:7;9951:20;9969:1;9951:20;:::i;:::-;9946:25;;9985:20;10003:1;9985:20;:::i;:::-;9980:25;;10040:1;10037;10033:9;10062:30;10080:11;10062:30;:::i;:::-;10051:41;;10241:1;10232:7;10228:15;10225:1;10222:22;10202:1;10195:9;10175:83;10152:139;;10271:18;;:::i;:::-;10152:139;9936:362;9888:410;;;;:::o;10304:180::-;10352:77;10349:1;10342:88;10449:4;10446:1;10439:15;10473:4;10470:1;10463:15;10490:185;10530:1;10547:20;10565:1;10547:20;:::i;:::-;10542:25;;10581:20;10599:1;10581:20;:::i;:::-;10576:25;;10620:1;10610:35;;10625:18;;:::i;:::-;10610:35;10667:1;10664;10660:9;10655:14;;10490:185;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1114200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateInterest()": "infinite",
								"calculateInterestSpecial()": "infinite",
								"clientsBalanceBNB(address)": "2870",
								"deposit()": "infinite",
								"depositTimeStamp(address)": "2846",
								"feeReceiver()": "2553",
								"getDepositBalance()": "2543",
								"getDepositBalanceSpecial()": "2565",
								"isDeposited(address)": "2878",
								"isSpecialDeposited(address)": "2922",
								"specialClientsBalanceBNB(address)": "2824",
								"specialDeposit()": "infinite",
								"specialDepositTimeStamp(address)": "2825",
								"specialWithdraw()": "infinite",
								"withdraw()": "infinite",
								"withdrawalFee()": "2492"
							},
							"internal": {
								"_calculateInterest(address)": "infinite",
								"_calculateSpecialInterest(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 748,
									"end": 790,
									"name": "PUSH",
									"source": 5,
									"value": "50D3B84A2B1787B7704DD50C67733B6B5B293629"
								},
								{
									"begin": 703,
									"end": 791,
									"name": "PUSH",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 703,
									"end": 791,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 791,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 703,
									"end": 791,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 703,
									"end": 791,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 703,
									"end": 791,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 703,
									"end": 791,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 831,
									"end": 841,
									"name": "PUSH",
									"source": 5,
									"value": "B1A2BC2EC50000"
								},
								{
									"begin": 803,
									"end": 841,
									"name": "PUSH",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 803,
									"end": 841,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 918,
									"end": 1031,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1017,
									"end": 1023,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1023,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 918,
									"end": 1031,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1101,
									"end": 1107,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1138,
									"end": 1147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1136,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1125,
									"end": 1148,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1121,
									"end": 1153,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1156,
									"end": 1235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 1156,
									"end": 1235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 1118,
									"end": 1237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1276,
									"end": 1277,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1368,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1360,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1369,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 1301,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 1301,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1379,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1247,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1017,
									"end": 1396,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 4441,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220da1e2eb5e02ecd192d199b2fa2e6f96eff34cd16c6acd04db6e8f559f744325e64736f6c634300081a0033",
									".code": [
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "AE6441A3"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "DCC52A48"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "DCC52A48"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "DFF05F82"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "EB0C4955"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "ED2D7A97"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "AE6441A3"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "B3F00674"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "C8510E4E"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "D0E30DB0"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "726FE82B"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "726FE82B"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "73732024"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "8BC7E8C4"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "8CE5FCC9"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "497DE4A"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "12FA90A1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "249EE9E1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "3CCFD60B"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 88,
											"end": 4441,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3208,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3208,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3447,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3447,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 204,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 204,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 204,
											"end": 253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1578,
											"end": 2408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 380,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 380,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 380,
											"end": 435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 444,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 444,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 444,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 803,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 803,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 494,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 494,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 494,
											"end": 544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3580,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3580,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 703,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 703,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1270,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1037,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 260,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 260,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 260,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 325,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 325,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 325,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3327,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3327,
											"end": 3441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2413,
											"end": 3142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3312,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3277,
											"end": 3313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3554,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3565,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3530,
											"end": 3566,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 1578,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1660,
											"end": 1664,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1633,
											"end": 1664,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1664,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1644,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1633,
											"end": 1656,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1664,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1664,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1633,
											"end": 1664,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1625,
											"end": 1695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1625,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1795,
											"end": 1808,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1791,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1774,
											"end": 1865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1774,
											"end": 1865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1939,
											"end": 1949,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 1920,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1920,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1904,
											"end": 1950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2027,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2009,
											"end": 2037,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2069,
											"end": 2080,
											"name": "PUSH",
											"source": 5,
											"value": "1C6BF526340000"
										},
										{
											"begin": 2038,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2066,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2038,
											"end": 2080,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2080,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2038,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2038,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2126,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2121,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2122,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2126,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 2215,
											"end": 2225,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2235,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2204,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2204,
											"end": 2236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2310,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2294,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2305,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2306,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2310,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2343,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2321,
											"end": 2352,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2376,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2385,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2365,
											"end": 2385,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2386,
											"end": 2399,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2386,
											"end": 2399,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2365,
											"end": 2400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 2408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1578,
											"end": 2408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 380,
											"end": 435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 444,
											"end": 487,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 803,
											"end": 841,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 803,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 494,
											"end": 544,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3689,
											"end": 3699,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3663,
											"end": 3700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 3700,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3663,
											"end": 3700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3656,
											"end": 3700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3580,
											"end": 3708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 703,
											"end": 791,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 703,
											"end": 791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1270,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1343,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 1339,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1343,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1322,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1322,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1439,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1403,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1516,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1486,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1497,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1498,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1516,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1516,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1564,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1527,
											"end": 1545,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1556,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1557,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1564,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1270,
											"end": 1572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1037,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1146,
											"end": 1155,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1131,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1142,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1114,
											"end": 1155,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1114,
											"end": 1155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1114,
											"end": 1155,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1114,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1099,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1110,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1155,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1155,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1155,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1082,
											"end": 1155,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1212,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1182,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1193,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1194,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1212,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1249,
											"end": 1253,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1245,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 260,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 325,
											"end": 373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3403,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3403,
											"end": 3433,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3403,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3433,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3396,
											"end": 3433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3327,
											"end": 3441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2413,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2492,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2503,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2474,
											"end": 2504,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2466,
											"end": 2546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2466,
											"end": 2546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2622,
											"end": 2632,
											"name": "PUSH",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 2584,
											"end": 2607,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2608,
											"end": 2618,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2619,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2584,
											"end": 2632,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2632,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2584,
											"end": 2632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2632,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2584,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2580,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2632,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2632,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2557,
											"end": 2698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2557,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2743,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2730,
											"end": 2743,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2709,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2709,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2855,
											"end": 2865,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2829,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2866,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2829,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2888,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2877,
											"end": 2897,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2898,
											"end": 2911,
											"name": "PUSH",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 2898,
											"end": 2911,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2877,
											"end": 2912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 2941,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2951,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2951,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2952,
											"end": 2976,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 2987,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2988,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2989,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3026,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3038,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3042,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3042,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3086,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3082,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3053,
											"end": 3091,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3112,
											"name": "PUSH",
											"source": 5,
											"value": "40C10F19"
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3133,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3102,
											"end": 3134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2455,
											"end": 3142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 3142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 4107,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3714,
											"end": 4107,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3778,
											"end": 3782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3814,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3815,
											"end": 3819,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 3795,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3795,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3887,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3924,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3925,
											"end": 3929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3905,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3890,
											"end": 3930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3890,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3930,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3890,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3866,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 3963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4000,
											"end": 4008,
											"name": "PUSH",
											"source": 5,
											"value": "1E33731"
										},
										{
											"begin": 3973,
											"end": 3990,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3995,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3996,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3970,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3967,
											"end": 3996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 3967,
											"end": 3996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3966,
											"end": 4008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 4008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3966,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3966,
											"end": 4008,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 3966,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3941,
											"end": 4008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4071,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4035,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4035,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4019,
											"end": 4071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4091,
											"end": 4099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 4107,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 4107,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 4107,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3714,
											"end": 4107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4438,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4113,
											"end": 4438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4185,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4223,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4267,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4268,
											"end": 4272,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4273,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4241,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4226,
											"end": 4273,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4226,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4273,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4226,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4202,
											"end": 4273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4202,
											"end": 4273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4306,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4350,
											"end": 4358,
											"name": "PUSH",
											"source": 5,
											"value": "1E33731"
										},
										{
											"begin": 4316,
											"end": 4340,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4341,
											"end": 4345,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4313,
											"name": "PUSH",
											"source": 5,
											"value": "C8"
										},
										{
											"begin": 4310,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4310,
											"end": 4346,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4346,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4310,
											"end": 4346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4346,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4310,
											"end": 4346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4309,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4309,
											"end": 4358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4309,
											"end": 4358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4309,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4309,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4309,
											"end": 4358,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4309,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4394,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4394,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4430,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4387,
											"end": 4430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4113,
											"end": 4438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1788,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1783,
											"end": 1786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1960,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2083,
											"end": 2090,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2130,
											"end": 2135,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2112,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2112,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2136,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2290,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2148,
											"end": 2290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2251,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2277,
											"end": 2282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2251,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 2251,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2251,
											"end": 2283,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2251,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2284,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2148,
											"end": 2290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2550,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2296,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2420,
											"end": 2446,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2540,
											"end": 2541,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2538,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2516,
											"end": 2522,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2456,
											"end": 2543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2543,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2456,
											"end": 2543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2725,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2556,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2640,
											"end": 2651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2669,
											"end": 2672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2662,
											"end": 2681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2714,
											"end": 2718,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2690,
											"end": 2719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2725,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2556,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2907,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2731,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2871,
											"end": 2899,
											"name": "PUSH",
											"source": 7,
											"value": "4572726F722C206E6F2070726576696F7573206465706F736974000000000000"
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2855,
											"end": 2869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2900,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2731,
											"end": 2907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3279,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2913,
											"end": 3279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3055,
											"end": 3058,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3140,
											"end": 3142,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 3135,
											"end": 3138,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 3076,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3143,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3076,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3143,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3069,
											"end": 3143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3241,
											"end": 3244,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 3152,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3152,
											"end": 3245,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 3152,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3265,
											"end": 3268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3279,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 3279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3704,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3285,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3478,
											"end": 3487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3547,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3532,
											"end": 3536,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3548,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3522,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3502,
											"end": 3549,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3692,
											"end": 3696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 3566,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3566,
											"end": 3697,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3566,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3704,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3949,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 3710,
											"end": 3949,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "PUSH",
											"source": 7,
											"value": "5365206465626520656E7669617220616C206D656E6F7320302E303520424E42"
										},
										{
											"begin": 3846,
											"end": 3847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3834,
											"end": 3848,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3941,
											"name": "PUSH",
											"source": 7,
											"value": "20636F6D6F20746173612064652072657469726F000000000000000000000000"
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3912,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3902,
											"end": 3917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3895,
											"end": 3942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4321,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 3955,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4097,
											"end": 4100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4182,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 4177,
											"end": 4180,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 4118,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4118,
											"end": 4185,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4118,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4283,
											"end": 4286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 4194,
											"end": 4287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4194,
											"end": 4287,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4194,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4307,
											"end": 4310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4315,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4321,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4746,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 4327,
											"end": 4746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4574,
											"end": 4578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 4590,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4567,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4544,
											"end": 4591,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4734,
											"end": 4738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 4608,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4608,
											"end": 4739,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4608,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4932,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4752,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4797,
											"end": 4798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4887,
											"end": 4902,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4926,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 5132,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4938,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4998,
											"end": 5018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 4998,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 5032,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5032,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5052,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5077,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5078,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5061,
											"end": 5078,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5061,
											"end": 5078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5102,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5125,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5088,
											"end": 5125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 5105,
											"end": 5123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5105,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5088,
											"end": 5125,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5088,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 5132,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 5132,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 5132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 5132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 5132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5256,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5138,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5243,
											"end": 5248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 5225,
											"end": 5249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5225,
											"end": 5249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5220,
											"end": 5223,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5213,
											"end": 5250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5256,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5421,
											"end": 5423,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5502,
											"end": 5503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5487,
											"end": 5504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5478,
											"end": 5484,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 5434,
											"end": 5505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5434,
											"end": 5505,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5434,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5583,
											"end": 5585,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5515,
											"end": 5587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5515,
											"end": 5587,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5515,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5829,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5600,
											"end": 5829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5774,
											"name": "PUSH",
											"source": 7,
											"value": "456C206D6F6E746F2064656C206465706F7369746F206465626520736572206D"
										},
										{
											"begin": 5736,
											"end": 5737,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5724,
											"end": 5738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5717,
											"end": 5775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5809,
											"end": 5821,
											"name": "PUSH",
											"source": 7,
											"value": "61796F7220717565203000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5804,
											"end": 5806,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5796,
											"end": 5802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5792,
											"end": 5807,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5785,
											"end": 5822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5600,
											"end": 5829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5977,
											"end": 5980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6062,
											"end": 6064,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 6057,
											"end": 6060,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 5998,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5998,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6163,
											"end": 6166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 6074,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6074,
											"end": 6167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6192,
											"end": 6194,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6187,
											"end": 6190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6183,
											"end": 6195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6176,
											"end": 6195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 6201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5835,
											"end": 6201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6413,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6388,
											"end": 6414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6460,
											"end": 6469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6470,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6446,
											"end": 6447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6435,
											"end": 6444,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6431,
											"end": 6448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6424,
											"end": 6471,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6614,
											"end": 6618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 6488,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6488,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6480,
											"end": 6619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6207,
											"end": 6626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6823,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 6632,
											"end": 6823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6672,
											"end": 6675,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6709,
											"end": 6710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6691,
											"end": 6711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6691,
											"end": 6711,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6691,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6743,
											"end": 6744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6725,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6745,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6720,
											"end": 6745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6769,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6766,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6754,
											"end": 6770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6783,
											"end": 6793,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6816,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6780,
											"end": 6816,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6796,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 6796,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6816,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6780,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6823,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7053,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 6829,
											"end": 7053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6969,
											"end": 7003,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207469656E657320756E206465706F7369746F20657370656369616C2061"
										},
										{
											"begin": 6965,
											"end": 6966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6946,
											"end": 7004,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7038,
											"end": 7045,
											"name": "PUSH",
											"source": 7,
											"value": "637469766F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7033,
											"end": 7035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7025,
											"end": 7031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7021,
											"end": 7036,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6829,
											"end": 7053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7425,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7059,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7201,
											"end": 7204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7281,
											"end": 7284,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7222,
											"end": 7289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7222,
											"end": 7289,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 7222,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7289,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7215,
											"end": 7289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7387,
											"end": 7390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7298,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7391,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 7298,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7411,
											"end": 7414,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7425,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7425,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7059,
											"end": 7425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7850,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 7431,
											"end": 7850,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7597,
											"end": 7601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7635,
											"end": 7637,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7624,
											"end": 7633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7620,
											"end": 7638,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 7638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 7638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7684,
											"end": 7693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7694,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7659,
											"end": 7668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 7672,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7648,
											"end": 7695,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7838,
											"end": 7842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7712,
											"end": 7843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7843,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 7712,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7843,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7704,
											"end": 7843,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7850,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7850,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7850,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7431,
											"end": 7850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 8104,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7856,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8030,
											"name": "PUSH",
											"source": 7,
											"value": "456C2072657469726F20657370656369616C20736F6C6F206573746120646973"
										},
										{
											"begin": 7992,
											"end": 7993,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 7990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7980,
											"end": 7994,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 8031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8065,
											"end": 8096,
											"name": "PUSH",
											"source": 7,
											"value": "706F6E69626C652064657370756573206465203130206D696E75746F73000000"
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8052,
											"end": 8058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8048,
											"end": 8063,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 8104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7856,
											"end": 8104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8476,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8110,
											"end": 8476,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8273,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8337,
											"end": 8339,
											"name": "PUSH",
											"source": 7,
											"value": "3D"
										},
										{
											"begin": 8332,
											"end": 8335,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8273,
											"end": 8340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 8273,
											"end": 8340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8273,
											"end": 8340,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 8273,
											"end": 8340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8266,
											"end": 8340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8266,
											"end": 8340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8438,
											"end": 8441,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8349,
											"end": 8442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8442,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 8349,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8467,
											"end": 8469,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8462,
											"end": 8465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8458,
											"end": 8470,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8451,
											"end": 8470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8476,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8476,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8476,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8648,
											"end": 8652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8688,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8689,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8729,
											"end": 8733,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8725,
											"end": 8745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8721,
											"end": 8722,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8710,
											"end": 8719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8723,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8889,
											"end": 8893,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8763,
											"end": 8894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 8763,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8894,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 8894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8482,
											"end": 8901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 9085,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8907,
											"end": 9085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9047,
											"end": 9077,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207469656E657320756E206465706F7369746F2061637469766F00000000"
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9045,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9024,
											"end": 9078,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 9085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8907,
											"end": 9085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9457,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 9091,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9236,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9254,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9318,
											"end": 9320,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9313,
											"end": 9316,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9321,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 9254,
											"end": 9321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9321,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9254,
											"end": 9321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9321,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9419,
											"end": 9422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 9330,
											"end": 9423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9330,
											"end": 9423,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9330,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9448,
											"end": 9450,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9443,
											"end": 9446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9439,
											"end": 9451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9451,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9451,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9457,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9091,
											"end": 9457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9882,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9463,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9629,
											"end": 9633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9669,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9652,
											"end": 9670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9670,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9670,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9725,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9706,
											"end": 9726,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9702,
											"end": 9703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9691,
											"end": 9700,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9687,
											"end": 9704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9680,
											"end": 9727,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9870,
											"end": 9874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 9875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 9744,
											"end": 9875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9744,
											"end": 9875,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9744,
											"end": 9875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9736,
											"end": 9875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9882,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 10298,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9888,
											"end": 10298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9928,
											"end": 9935,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9969,
											"end": 9970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9951,
											"end": 9971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9951,
											"end": 9971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9951,
											"end": 9971,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9951,
											"end": 9971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 9971,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 9971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9985,
											"end": 10005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9985,
											"end": 10005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9980,
											"end": 10005,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9980,
											"end": 10005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10080,
											"end": 10091,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 10062,
											"end": 10092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10092,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 10062,
											"end": 10092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10051,
											"end": 10092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10241,
											"end": 10242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10232,
											"end": 10239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10243,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10225,
											"end": 10226,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10222,
											"end": 10244,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10202,
											"end": 10203,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10195,
											"end": 10204,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10258,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10152,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10152,
											"end": 10291,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 10271,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10271,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10152,
											"end": 10291,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10152,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 10298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 10298,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 10298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 10298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 10298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9888,
											"end": 10298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10304,
											"end": 10484,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10304,
											"end": 10484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10352,
											"end": 10429,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10349,
											"end": 10350,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10342,
											"end": 10430,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10449,
											"end": 10453,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10446,
											"end": 10447,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10439,
											"end": 10454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10473,
											"end": 10477,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10470,
											"end": 10471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10478,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10675,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 10490,
											"end": 10675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10565,
											"end": 10566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 10547,
											"end": 10567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10542,
											"end": 10567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10542,
											"end": 10567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10581,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10599,
											"end": 10600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10581,
											"end": 10601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 10581,
											"end": 10601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10581,
											"end": 10601,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10581,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10620,
											"end": 10621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10610,
											"end": 10645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 10625,
											"end": 10643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10625,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10645,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10610,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10664,
											"end": 10665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10660,
											"end": 10669,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10675,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10675,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10490,
											"end": 10675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Bank.sol",
								"contracts/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"calculateInterest()": "eb0c4955",
							"calculateInterestSpecial()": "ae6441a3",
							"clientsBalanceBNB(address)": "249ee9e1",
							"deposit()": "d0e30db0",
							"depositTimeStamp(address)": "dff05f82",
							"feeReceiver()": "b3f00674",
							"getDepositBalance()": "0497de4a",
							"getDepositBalanceSpecial()": "12fa90a1",
							"isDeposited(address)": "73732024",
							"isSpecialDeposited(address)": "8ce5fcc9",
							"specialClientsBalanceBNB(address)": "dcc52a48",
							"specialDeposit()": "c8510e4e",
							"specialDepositTimeStamp(address)": "726fe82b",
							"specialWithdraw()": "ed2d7a97",
							"withdraw()": "3ccfd60b",
							"withdrawalFee()": "8bc7e8c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Token\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"calculateInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateInterestSpecial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"clientsBalanceBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositBalanceSpecial\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isDeposited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSpecialDeposited\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"specialClientsBalanceBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"specialDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"specialDepositTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"specialWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Bank.sol\":\"Bank\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Bank.sol\":{\"keccak256\":\"0x30b5060f25766108155467a50b13882a16bcd12bc09b06ebd22c489b1ff71751\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4e099d7c00222630f1b5587b605e104d50f28e1081c95a74c8f78f65ab0767c4\",\"dweb:/ipfs/QmNh6fZov2f9ei4a8oyo4CmWpz1Wmctsj9oZ6wvBwkPpGJ\"]},\"contracts/Token.sol\":{\"keccak256\":\"0xe2a2545df3f9587cda12a0a1fae959530d50f5b5c8f64707991c63b60068a311\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d98f423a0942cb3165ae75a88535b8be513d3b72de1d27610d52b43fb113f5b6\",\"dweb:/ipfs/QmSerK1QUfjV8xT3aQAutUqnrzA2YBWWc2KJ3Qzmvz3u4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "contracts/Bank.sol:Bank",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Token)1244"
							},
							{
								"astId": 795,
								"contract": "contracts/Bank.sol:Bank",
								"label": "clientsBalanceBNB",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 799,
								"contract": "contracts/Bank.sol:Bank",
								"label": "specialClientsBalanceBNB",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 803,
								"contract": "contracts/Bank.sol:Bank",
								"label": "depositTimeStamp",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 807,
								"contract": "contracts/Bank.sol:Bank",
								"label": "specialDepositTimeStamp",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 811,
								"contract": "contracts/Bank.sol:Bank",
								"label": "isDeposited",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 815,
								"contract": "contracts/Bank.sol:Bank",
								"label": "isSpecialDeposited",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 821,
								"contract": "contracts/Bank.sol:Bank",
								"label": "feeReceiver",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 824,
								"contract": "contracts/Bank.sol:Bank",
								"label": "withdrawalFee",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(Token)1244": {
								"encoding": "inplace",
								"label": "contract Token",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Token.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nuevoMinter",
									"type": "address"
								}
							],
							"name": "passMinterRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Token.sol\":124:847  contract Token is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x426d697700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x424d495700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Token.sol\":382:392  msg.sender */\n  caller\n    /* \"contracts/Token.sol\":373:379  minter */\n  0x05\n  0x00\n    /* \"contracts/Token.sol\":373:392  minter = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Token.sol\":124:847  contract Token is ERC20 {... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:106   */\ntag_9:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_10:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_11:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_12:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_34\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_34:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_36\n  tag_11\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":714:798   */\ntag_35:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_13:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_14:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_15:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_16:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_41\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_15\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1429:1468   */\n  tag_42\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_15\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_17:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_18:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_19:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_46\n    /* \"#utility.yul\":1818:1852   */\n  tag_47\n    /* \"#utility.yul\":1827:1851   */\n  tag_48\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_17\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1818:1852   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1800:1853   */\n  tag_17\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_20:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_21:\n    /* \"#utility.yul\":2056:2095   */\n  tag_51\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_19\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":2117:2208   */\n  tag_52\n    /* \"#utility.yul\":2166:2207   */\n  tag_53\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_20\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_16\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_22:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_23:\n    /* \"#utility.yul\":2377:2409   */\n  tag_56\n  tag_22\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2418:2483   */\n  tag_57\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_21\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_24:\n    /* \"#utility.yul\":2555:2675   */\ntag_59:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_62\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_23\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_59)\ntag_61:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_25:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_65\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_13\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2906:2935   */\n  tag_66\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_67:\n    /* \"#utility.yul\":3133:3213   */\n  tag_68\n    /* \"#utility.yul\":3189:3211   */\n  tag_69\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_24\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_64:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_26:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_27:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_72\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_26\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_28:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_74\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_27\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_5:\n    /* \"#utility.yul\":3950:3987   */\n  tag_76\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_9\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_78\n  tag_10\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":4038:4094   */\ntag_77:\n    /* \"#utility.yul\":4118:4156   */\n  tag_79\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4203:4270   */\n  tag_80\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_82\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_83:\n    /* \"#utility.yul\":5144:5211   */\n  tag_84\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_28\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_81)\n    /* \"#utility.yul\":4365:4983   */\ntag_82:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_85\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_13\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_86:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_86)\ntag_88:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_90\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_27\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_89:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_81:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Token.sol\":124:847  contract Token is ERC20 {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Token.sol\":124:847  contract Token is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd7fc5b15\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07546172\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token.sol\":243:264  address public minter */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token.sol\":407:581  function mint(address account, uint256 amount) public {... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Token.sol\":587:842  function passMinterRole(address nuevoMinter) public returns (bool){... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_68\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_69\n      jump\t// in\n    tag_70:\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_72\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_71)\n    tag_72:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_73:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_73\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token.sol\":243:264  address public minter */\n    tag_21:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_77\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_82\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Token.sol\":407:581  function mint(address account, uint256 amount) public {... */\n    tag_45:\n        /* \"contracts/Token.sol\":494:500  minter */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token.sol\":480:500  msg.sender == minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token.sol\":480:490  msg.sender */\n      caller\n        /* \"contracts/Token.sol\":480:500  msg.sender == minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Token.sol\":472:540  require(msg.sender == minter, 'Error, msg.sender is not the minter') */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/Token.sol\":551:573  _mint(account, amount) */\n      tag_91\n        /* \"contracts/Token.sol\":557:564  account */\n      dup3\n        /* \"contracts/Token.sol\":566:572  amount */\n      dup3\n        /* \"contracts/Token.sol\":551:556  _mint */\n      tag_92\n        /* \"contracts/Token.sol\":551:573  _mint(account, amount) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/Token.sol\":407:581  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_69\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_69\n      jump\t// in\n    tag_96:\n      dup1\n      iszero\n      tag_97\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_98\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_97)\n    tag_98:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_99:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_99\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Token.sol\":587:842  function passMinterRole(address nuevoMinter) public returns (bool){... */\n    tag_60:\n        /* \"contracts/Token.sol\":648:652  bool */\n      0x00\n        /* \"contracts/Token.sol\":735:741  minter */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token.sol\":721:741  msg.sender == minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Token.sol\":721:731  msg.sender */\n      caller\n        /* \"contracts/Token.sol\":721:741  msg.sender == minter */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Token.sol\":713:781  require(msg.sender == minter, 'Error, msg.sender is not the minter') */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_90\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/Token.sol\":801:812  nuevoMinter */\n      dup2\n        /* \"contracts/Token.sol\":792:798  minter */\n      0x05\n      0x00\n        /* \"contracts/Token.sol\":792:812  minter = nuevoMinter */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Token.sol\":830:834  true */\n      0x01\n        /* \"contracts/Token.sol\":823:834  return true */\n      swap1\n      pop\n        /* \"contracts/Token.sol\":587:842  function passMinterRole(address nuevoMinter) public returns (bool){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_113\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_119\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_121\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_122\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_130\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_134\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_140)\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_143\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_144)\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_146:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_147:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_148:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_149:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_150:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_177\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_146\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":711:782   */\n      tag_178\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_147\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_179\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_148\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":881:910   */\n      tag_180\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_149\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_19:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_182\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_150\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1368   */\n    tag_151:\n        /* \"#utility.yul\":1279:1286   */\n      0x00\n        /* \"#utility.yul\":1319:1361   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1312:1317   */\n      dup3\n        /* \"#utility.yul\":1308:1362   */\n      and\n        /* \"#utility.yul\":1297:1362   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1374:1470   */\n    tag_152:\n        /* \"#utility.yul\":1411:1418   */\n      0x00\n        /* \"#utility.yul\":1440:1464   */\n      tag_185\n        /* \"#utility.yul\":1458:1463   */\n      dup3\n        /* \"#utility.yul\":1440:1464   */\n      tag_151\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":1429:1464   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1470   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1476:1594   */\n    tag_153:\n        /* \"#utility.yul\":1563:1587   */\n      tag_187\n        /* \"#utility.yul\":1581:1586   */\n      dup2\n        /* \"#utility.yul\":1563:1587   */\n      tag_152\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1558:1561   */\n      dup3\n        /* \"#utility.yul\":1551:1588   */\n      mstore\n        /* \"#utility.yul\":1476:1594   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1600:1822   */\n    tag_23:\n        /* \"#utility.yul\":1693:1697   */\n      0x00\n        /* \"#utility.yul\":1731:1733   */\n      0x20\n        /* \"#utility.yul\":1720:1729   */\n      dup3\n        /* \"#utility.yul\":1716:1734   */\n      add\n        /* \"#utility.yul\":1708:1734   */\n      swap1\n      pop\n        /* \"#utility.yul\":1744:1815   */\n      tag_189\n        /* \"#utility.yul\":1812:1813   */\n      0x00\n        /* \"#utility.yul\":1801:1810   */\n      dup4\n        /* \"#utility.yul\":1797:1814   */\n      add\n        /* \"#utility.yul\":1788:1794   */\n      dup5\n        /* \"#utility.yul\":1744:1815   */\n      tag_153\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1600:1822   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2026   */\n    tag_155:\n        /* \"#utility.yul\":2018:2019   */\n      0x00\n        /* \"#utility.yul\":2015:2016   */\n      dup1\n        /* \"#utility.yul\":2008:2020   */\n      revert\n        /* \"#utility.yul\":2155:2277   */\n    tag_157:\n        /* \"#utility.yul\":2228:2252   */\n      tag_194\n        /* \"#utility.yul\":2246:2251   */\n      dup2\n        /* \"#utility.yul\":2228:2252   */\n      tag_152\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2221:2226   */\n      dup2\n        /* \"#utility.yul\":2218:2253   */\n      eq\n        /* \"#utility.yul\":2208:2271   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":2267:2268   */\n      0x00\n        /* \"#utility.yul\":2264:2265   */\n      dup1\n        /* \"#utility.yul\":2257:2269   */\n      revert\n        /* \"#utility.yul\":2208:2271   */\n    tag_195:\n        /* \"#utility.yul\":2155:2277   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2283:2422   */\n    tag_158:\n        /* \"#utility.yul\":2329:2334   */\n      0x00\n        /* \"#utility.yul\":2367:2373   */\n      dup2\n        /* \"#utility.yul\":2354:2374   */\n      calldataload\n        /* \"#utility.yul\":2345:2374   */\n      swap1\n      pop\n        /* \"#utility.yul\":2383:2416   */\n      tag_197\n        /* \"#utility.yul\":2410:2415   */\n      dup2\n        /* \"#utility.yul\":2383:2416   */\n      tag_157\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2283:2422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2428:2505   */\n    tag_159:\n        /* \"#utility.yul\":2465:2472   */\n      0x00\n        /* \"#utility.yul\":2494:2499   */\n      dup2\n        /* \"#utility.yul\":2483:2499   */\n      swap1\n      pop\n        /* \"#utility.yul\":2428:2505   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_160:\n        /* \"#utility.yul\":2584:2608   */\n      tag_200\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_159\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_201\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_201:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_161:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_203\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_160\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_26:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_206\n      tag_155\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":2877:2996   */\n    tag_205:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_207\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_158\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_208\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_161\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_162:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_163:\n        /* \"#utility.yul\":3441:3462   */\n      tag_211\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_162\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_29:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_213\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_163\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3809   */\n    tag_164:\n        /* \"#utility.yul\":3778:3802   */\n      tag_215\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3778:3802   */\n      tag_159\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":3773:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3803   */\n      mstore\n        /* \"#utility.yul\":3691:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4037   */\n    tag_33:\n        /* \"#utility.yul\":3908:3912   */\n      0x00\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3935:3944   */\n      dup3\n        /* \"#utility.yul\":3931:3949   */\n      add\n        /* \"#utility.yul\":3923:3949   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4030   */\n      tag_217\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3959:4030   */\n      tag_164\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":3815:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4662   */\n    tag_36:\n        /* \"#utility.yul\":4120:4126   */\n      0x00\n        /* \"#utility.yul\":4128:4134   */\n      dup1\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4185:4187   */\n      0x60\n        /* \"#utility.yul\":4173:4182   */\n      dup5\n        /* \"#utility.yul\":4164:4171   */\n      dup7\n        /* \"#utility.yul\":4160:4183   */\n      sub\n        /* \"#utility.yul\":4156:4188   */\n      slt\n        /* \"#utility.yul\":4153:4272   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":4191:4270   */\n      tag_220\n      tag_155\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4153:4272   */\n    tag_219:\n        /* \"#utility.yul\":4311:4312   */\n      0x00\n        /* \"#utility.yul\":4336:4389   */\n      tag_221\n        /* \"#utility.yul\":4381:4388   */\n      dup7\n        /* \"#utility.yul\":4372:4378   */\n      dup3\n        /* \"#utility.yul\":4361:4370   */\n      dup8\n        /* \"#utility.yul\":4357:4379   */\n      add\n        /* \"#utility.yul\":4336:4389   */\n      tag_158\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4326:4389   */\n      swap4\n      pop\n        /* \"#utility.yul\":4282:4399   */\n      pop\n        /* \"#utility.yul\":4438:4440   */\n      0x20\n        /* \"#utility.yul\":4464:4517   */\n      tag_222\n        /* \"#utility.yul\":4509:4516   */\n      dup7\n        /* \"#utility.yul\":4500:4506   */\n      dup3\n        /* \"#utility.yul\":4489:4498   */\n      dup8\n        /* \"#utility.yul\":4485:4507   */\n      add\n        /* \"#utility.yul\":4464:4517   */\n      tag_158\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4454:4517   */\n      swap3\n      pop\n        /* \"#utility.yul\":4409:4527   */\n      pop\n        /* \"#utility.yul\":4566:4568   */\n      0x40\n        /* \"#utility.yul\":4592:4645   */\n      tag_223\n        /* \"#utility.yul\":4637:4644   */\n      dup7\n        /* \"#utility.yul\":4628:4634   */\n      dup3\n        /* \"#utility.yul\":4617:4626   */\n      dup8\n        /* \"#utility.yul\":4613:4635   */\n      add\n        /* \"#utility.yul\":4592:4645   */\n      tag_161\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4582:4645   */\n      swap2\n      pop\n        /* \"#utility.yul\":4537:4655   */\n      pop\n        /* \"#utility.yul\":4043:4662   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4668:4754   */\n    tag_165:\n        /* \"#utility.yul\":4703:4710   */\n      0x00\n        /* \"#utility.yul\":4743:4747   */\n      0xff\n        /* \"#utility.yul\":4736:4741   */\n      dup3\n        /* \"#utility.yul\":4732:4748   */\n      and\n        /* \"#utility.yul\":4721:4748   */\n      swap1\n      pop\n        /* \"#utility.yul\":4668:4754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4760:4872   */\n    tag_166:\n        /* \"#utility.yul\":4843:4865   */\n      tag_226\n        /* \"#utility.yul\":4859:4864   */\n      dup2\n        /* \"#utility.yul\":4843:4865   */\n      tag_165\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":4838:4841   */\n      dup3\n        /* \"#utility.yul\":4831:4866   */\n      mstore\n        /* \"#utility.yul\":4760:4872   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4878:5092   */\n    tag_42:\n        /* \"#utility.yul\":4967:4971   */\n      0x00\n        /* \"#utility.yul\":5005:5007   */\n      0x20\n        /* \"#utility.yul\":4994:5003   */\n      dup3\n        /* \"#utility.yul\":4990:5008   */\n      add\n        /* \"#utility.yul\":4982:5008   */\n      swap1\n      pop\n        /* \"#utility.yul\":5018:5085   */\n      tag_228\n        /* \"#utility.yul\":5082:5083   */\n      0x00\n        /* \"#utility.yul\":5071:5080   */\n      dup4\n        /* \"#utility.yul\":5067:5084   */\n      add\n        /* \"#utility.yul\":5058:5064   */\n      dup5\n        /* \"#utility.yul\":5018:5085   */\n      tag_166\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":4878:5092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:5427   */\n    tag_48:\n        /* \"#utility.yul\":5157:5163   */\n      0x00\n        /* \"#utility.yul\":5206:5208   */\n      0x20\n        /* \"#utility.yul\":5194:5203   */\n      dup3\n        /* \"#utility.yul\":5185:5192   */\n      dup5\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_230\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_231\n      tag_155\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5174:5293   */\n    tag_230:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_232\n        /* \"#utility.yul\":5402:5409   */\n      dup5\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup6\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_158\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5347:5410   */\n      swap2\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5098:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_64:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      dup1\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_234\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_235\n      tag_155\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5526:5645   */\n    tag_234:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_236\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_158\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_237\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_158\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_167:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_69:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_240:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_242\n      tag_167\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6329:6413   */\n    tag_241:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6647   */\n    tag_168:\n        /* \"#utility.yul\":6565:6599   */\n      0x4572726f722c206d73672e73656e646572206973206e6f7420746865206d696e\n        /* \"#utility.yul\":6561:6562   */\n      0x00\n        /* \"#utility.yul\":6553:6559   */\n      dup3\n        /* \"#utility.yul\":6549:6563   */\n      add\n        /* \"#utility.yul\":6542:6600   */\n      mstore\n        /* \"#utility.yul\":6634:6639   */\n      0x7465720000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6629:6631   */\n      0x20\n        /* \"#utility.yul\":6621:6627   */\n      dup3\n        /* \"#utility.yul\":6617:6632   */\n      add\n        /* \"#utility.yul\":6610:6640   */\n      mstore\n        /* \"#utility.yul\":6425:6647   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6653:7019   */\n    tag_169:\n        /* \"#utility.yul\":6795:6798   */\n      0x00\n        /* \"#utility.yul\":6816:6883   */\n      tag_245\n        /* \"#utility.yul\":6880:6882   */\n      0x23\n        /* \"#utility.yul\":6875:6878   */\n      dup4\n        /* \"#utility.yul\":6816:6883   */\n      tag_147\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6809:6883   */\n      swap2\n      pop\n        /* \"#utility.yul\":6892:6985   */\n      tag_246\n        /* \"#utility.yul\":6981:6984   */\n      dup3\n        /* \"#utility.yul\":6892:6985   */\n      tag_168\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7010:7012   */\n      0x40\n        /* \"#utility.yul\":7005:7008   */\n      dup3\n        /* \"#utility.yul\":7001:7013   */\n      add\n        /* \"#utility.yul\":6994:7013   */\n      swap1\n      pop\n        /* \"#utility.yul\":6653:7019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7444   */\n    tag_90:\n        /* \"#utility.yul\":7191:7195   */\n      0x00\n        /* \"#utility.yul\":7229:7231   */\n      0x20\n        /* \"#utility.yul\":7218:7227   */\n      dup3\n        /* \"#utility.yul\":7214:7232   */\n      add\n        /* \"#utility.yul\":7206:7232   */\n      swap1\n      pop\n        /* \"#utility.yul\":7278:7287   */\n      dup2\n        /* \"#utility.yul\":7272:7276   */\n      dup2\n        /* \"#utility.yul\":7268:7288   */\n      sub\n        /* \"#utility.yul\":7264:7265   */\n      0x00\n        /* \"#utility.yul\":7253:7262   */\n      dup4\n        /* \"#utility.yul\":7249:7266   */\n      add\n        /* \"#utility.yul\":7242:7289   */\n      mstore\n        /* \"#utility.yul\":7306:7437   */\n      tag_248\n        /* \"#utility.yul\":7432:7436   */\n      dup2\n        /* \"#utility.yul\":7306:7437   */\n      tag_169\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7298:7437   */\n      swap1\n      pop\n        /* \"#utility.yul\":7025:7444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7450:7892   */\n    tag_116:\n        /* \"#utility.yul\":7599:7603   */\n      0x00\n        /* \"#utility.yul\":7637:7639   */\n      0x60\n        /* \"#utility.yul\":7626:7635   */\n      dup3\n        /* \"#utility.yul\":7622:7640   */\n      add\n        /* \"#utility.yul\":7614:7640   */\n      swap1\n      pop\n        /* \"#utility.yul\":7650:7721   */\n      tag_250\n        /* \"#utility.yul\":7718:7719   */\n      0x00\n        /* \"#utility.yul\":7707:7716   */\n      dup4\n        /* \"#utility.yul\":7703:7720   */\n      add\n        /* \"#utility.yul\":7694:7700   */\n      dup7\n        /* \"#utility.yul\":7650:7721   */\n      tag_153\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7731:7803   */\n      tag_251\n        /* \"#utility.yul\":7799:7801   */\n      0x20\n        /* \"#utility.yul\":7788:7797   */\n      dup4\n        /* \"#utility.yul\":7784:7802   */\n      add\n        /* \"#utility.yul\":7775:7781   */\n      dup6\n        /* \"#utility.yul\":7731:7803   */\n      tag_164\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7813:7885   */\n      tag_252\n        /* \"#utility.yul\":7881:7883   */\n      0x40\n        /* \"#utility.yul\":7870:7879   */\n      dup4\n        /* \"#utility.yul\":7866:7884   */\n      add\n        /* \"#utility.yul\":7857:7863   */\n      dup5\n        /* \"#utility.yul\":7813:7885   */\n      tag_164\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7450:7892   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7898:8078   */\n    tag_170:\n        /* \"#utility.yul\":7946:8023   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7943:7944   */\n      0x00\n        /* \"#utility.yul\":7936:8024   */\n      mstore\n        /* \"#utility.yul\":8043:8047   */\n      0x11\n        /* \"#utility.yul\":8040:8041   */\n      0x04\n        /* \"#utility.yul\":8033:8048   */\n      mstore\n        /* \"#utility.yul\":8067:8071   */\n      0x24\n        /* \"#utility.yul\":8064:8065   */\n      0x00\n        /* \"#utility.yul\":8057:8072   */\n      revert\n        /* \"#utility.yul\":8084:8275   */\n    tag_139:\n        /* \"#utility.yul\":8124:8127   */\n      0x00\n        /* \"#utility.yul\":8143:8163   */\n      tag_255\n        /* \"#utility.yul\":8161:8162   */\n      dup3\n        /* \"#utility.yul\":8143:8163   */\n      tag_159\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8138:8163   */\n      swap2\n      pop\n        /* \"#utility.yul\":8177:8197   */\n      tag_256\n        /* \"#utility.yul\":8195:8196   */\n      dup4\n        /* \"#utility.yul\":8177:8197   */\n      tag_159\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8172:8197   */\n      swap3\n      pop\n        /* \"#utility.yul\":8220:8221   */\n      dup3\n        /* \"#utility.yul\":8217:8218   */\n      dup3\n        /* \"#utility.yul\":8213:8222   */\n      add\n        /* \"#utility.yul\":8206:8222   */\n      swap1\n      pop\n        /* \"#utility.yul\":8241:8244   */\n      dup1\n        /* \"#utility.yul\":8238:8239   */\n      dup3\n        /* \"#utility.yul\":8235:8245   */\n      gt\n        /* \"#utility.yul\":8232:8268   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":8248:8266   */\n      tag_258\n      tag_170\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8232:8268   */\n    tag_257:\n        /* \"#utility.yul\":8084:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205b4b5d3f81501c2285b23663763d3599d4a232a210d527ec887d68f4bc8c663464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1200": {
									"entryPoint": null,
									"id": 1200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 648,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 225,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:7",
										"nodeType": "YulBlock",
										"src": "0:5231:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "140:152:7",
													"nodeType": "YulBlock",
													"src": "140:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:7",
																		"nodeType": "YulLiteral",
																		"src": "157:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:7",
																		"nodeType": "YulLiteral",
																		"src": "160:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:7"
																},
																"nativeSrc": "150:88:7",
																"nodeType": "YulFunctionCall",
																"src": "150:88:7"
															},
															"nativeSrc": "150:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:7",
																		"nodeType": "YulLiteral",
																		"src": "254:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:7",
																		"nodeType": "YulLiteral",
																		"src": "257:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:7"
																},
																"nativeSrc": "247:15:7",
																"nodeType": "YulFunctionCall",
																"src": "247:15:7"
															},
															"nativeSrc": "247:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:7",
																		"nodeType": "YulLiteral",
																		"src": "278:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:7",
																		"nodeType": "YulLiteral",
																		"src": "281:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:7"
																},
																"nativeSrc": "271:15:7",
																"nodeType": "YulFunctionCall",
																"src": "271:15:7"
															},
															"nativeSrc": "271:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:7"
											},
											{
												"body": {
													"nativeSrc": "326:152:7",
													"nodeType": "YulBlock",
													"src": "326:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:7",
																		"nodeType": "YulLiteral",
																		"src": "343:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:7",
																		"nodeType": "YulLiteral",
																		"src": "346:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:7"
																},
																"nativeSrc": "336:88:7",
																"nodeType": "YulFunctionCall",
																"src": "336:88:7"
															},
															"nativeSrc": "336:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:7",
																		"nodeType": "YulLiteral",
																		"src": "440:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:7",
																		"nodeType": "YulLiteral",
																		"src": "443:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:7"
																},
																"nativeSrc": "433:15:7",
																"nodeType": "YulFunctionCall",
																"src": "433:15:7"
															},
															"nativeSrc": "433:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:7",
																		"nodeType": "YulLiteral",
																		"src": "464:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:7",
																		"nodeType": "YulLiteral",
																		"src": "467:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:7"
																},
																"nativeSrc": "457:15:7",
																"nodeType": "YulFunctionCall",
																"src": "457:15:7"
															},
															"nativeSrc": "457:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:7"
											},
											{
												"body": {
													"nativeSrc": "535:269:7",
													"nodeType": "YulBlock",
													"src": "535:269:7",
													"statements": [
														{
															"nativeSrc": "545:22:7",
															"nodeType": "YulAssignment",
															"src": "545:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:7",
																		"nodeType": "YulLiteral",
																		"src": "565:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:7"
																},
																"nativeSrc": "555:12:7",
																"nodeType": "YulFunctionCall",
																"src": "555:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:7"
																}
															]
														},
														{
															"nativeSrc": "576:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "612:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:7"
																},
																"nativeSrc": "602:12:7",
																"nodeType": "YulFunctionCall",
																"src": "602:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:7",
																	"nodeType": "YulTypedName",
																	"src": "580:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:7",
																"nodeType": "YulBlock",
																"src": "653:51:7",
																"statements": [
																	{
																		"nativeSrc": "667:27:7",
																		"nodeType": "YulAssignment",
																		"src": "667:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:7",
																					"nodeType": "YulLiteral",
																					"src": "689:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:7"
																			},
																			"nativeSrc": "677:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:7"
																},
																"nativeSrc": "626:26:7",
																"nodeType": "YulFunctionCall",
																"src": "626:26:7"
															},
															"nativeSrc": "623:81:7",
															"nodeType": "YulIf",
															"src": "623:81:7"
														},
														{
															"body": {
																"nativeSrc": "756:42:7",
																"nodeType": "YulBlock",
																"src": "756:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:7"
																			},
																			"nativeSrc": "770:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:7"
																		},
																		"nativeSrc": "770:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:7",
																				"nodeType": "YulLiteral",
																				"src": "751:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:7"
																		},
																		"nativeSrc": "740:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:7"
																},
																"nativeSrc": "717:38:7",
																"nodeType": "YulFunctionCall",
																"src": "717:38:7"
															},
															"nativeSrc": "714:84:7",
															"nodeType": "YulIf",
															"src": "714:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:7",
														"nodeType": "YulTypedName",
														"src": "519:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:7",
														"nodeType": "YulTypedName",
														"src": "528:6:7",
														"type": ""
													}
												],
												"src": "484:320:7"
											},
											{
												"body": {
													"nativeSrc": "864:87:7",
													"nodeType": "YulBlock",
													"src": "864:87:7",
													"statements": [
														{
															"nativeSrc": "874:11:7",
															"nodeType": "YulAssignment",
															"src": "874:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:7",
																"nodeType": "YulIdentifier",
																"src": "882:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:7"
																},
																"nativeSrc": "895:14:7",
																"nodeType": "YulFunctionCall",
																"src": "895:14:7"
															},
															"nativeSrc": "895:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:7"
														},
														{
															"nativeSrc": "918:26:7",
															"nodeType": "YulAssignment",
															"src": "918:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:7",
																		"nodeType": "YulLiteral",
																		"src": "936:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:7",
																		"nodeType": "YulLiteral",
																		"src": "939:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:7"
																},
																"nativeSrc": "926:18:7",
																"nodeType": "YulFunctionCall",
																"src": "926:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:7",
														"nodeType": "YulTypedName",
														"src": "851:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:7",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "810:141:7"
											},
											{
												"body": {
													"nativeSrc": "1001:49:7",
													"nodeType": "YulBlock",
													"src": "1001:49:7",
													"statements": [
														{
															"nativeSrc": "1011:33:7",
															"nodeType": "YulAssignment",
															"src": "1011:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:7"
																		},
																		"nativeSrc": "1025:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:7"
																},
																"nativeSrc": "1021:23:7",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:7",
														"nodeType": "YulTypedName",
														"src": "984:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:7",
														"nodeType": "YulTypedName",
														"src": "994:6:7",
														"type": ""
													}
												],
												"src": "957:93:7"
											},
											{
												"body": {
													"nativeSrc": "1109:54:7",
													"nodeType": "YulBlock",
													"src": "1109:54:7",
													"statements": [
														{
															"nativeSrc": "1119:37:7",
															"nodeType": "YulAssignment",
															"src": "1119:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:7"
																},
																"nativeSrc": "1140:16:7",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:7",
														"nodeType": "YulTypedName",
														"src": "1084:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:7",
														"nodeType": "YulTypedName",
														"src": "1090:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:7",
														"nodeType": "YulTypedName",
														"src": "1100:8:7",
														"type": ""
													}
												],
												"src": "1056:107:7"
											},
											{
												"body": {
													"nativeSrc": "1245:317:7",
													"nodeType": "YulBlock",
													"src": "1245:317:7",
													"statements": [
														{
															"nativeSrc": "1255:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:7"
																},
																"nativeSrc": "1272:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:7",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:7"
																},
																"nativeSrc": "1311:97:7",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:7",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:7",
															"nodeType": "YulAssignment",
															"src": "1417:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:7"
																},
																"nativeSrc": "1429:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:7"
																}
															]
														},
														{
															"nativeSrc": "1477:30:7",
															"nodeType": "YulAssignment",
															"src": "1477:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:7"
																		},
																		"nativeSrc": "1497:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:7"
																},
																"nativeSrc": "1486:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:7"
																}
															]
														},
														{
															"nativeSrc": "1516:40:7",
															"nodeType": "YulAssignment",
															"src": "1516:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:7"
																		},
																		"nativeSrc": "1536:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nativeSrc": "1526:30:7",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:7",
														"nodeType": "YulTypedName",
														"src": "1206:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:7",
														"nodeType": "YulTypedName",
														"src": "1213:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:7",
														"nodeType": "YulTypedName",
														"src": "1225:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:7",
														"nodeType": "YulTypedName",
														"src": "1238:6:7",
														"type": ""
													}
												],
												"src": "1169:393:7"
											},
											{
												"body": {
													"nativeSrc": "1613:32:7",
													"nodeType": "YulBlock",
													"src": "1613:32:7",
													"statements": [
														{
															"nativeSrc": "1623:16:7",
															"nodeType": "YulAssignment",
															"src": "1623:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:7",
																"nodeType": "YulIdentifier",
																"src": "1634:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:7",
														"nodeType": "YulTypedName",
														"src": "1595:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:7",
														"nodeType": "YulTypedName",
														"src": "1605:7:7",
														"type": ""
													}
												],
												"src": "1568:77:7"
											},
											{
												"body": {
													"nativeSrc": "1683:28:7",
													"nodeType": "YulBlock",
													"src": "1683:28:7",
													"statements": [
														{
															"nativeSrc": "1693:12:7",
															"nodeType": "YulAssignment",
															"src": "1693:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:7",
																"nodeType": "YulIdentifier",
																"src": "1700:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:7",
														"nodeType": "YulTypedName",
														"src": "1669:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:7",
														"nodeType": "YulTypedName",
														"src": "1679:3:7",
														"type": ""
													}
												],
												"src": "1651:60:7"
											},
											{
												"body": {
													"nativeSrc": "1777:82:7",
													"nodeType": "YulBlock",
													"src": "1777:82:7",
													"statements": [
														{
															"nativeSrc": "1787:66:7",
															"nodeType": "YulAssignment",
															"src": "1787:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:7"
																				},
																				"nativeSrc": "1827:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:7"
																		},
																		"nativeSrc": "1818:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:7"
																},
																"nativeSrc": "1800:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:7",
														"nodeType": "YulTypedName",
														"src": "1757:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:7",
														"nodeType": "YulTypedName",
														"src": "1767:9:7",
														"type": ""
													}
												],
												"src": "1717:142:7"
											},
											{
												"body": {
													"nativeSrc": "1912:28:7",
													"nodeType": "YulBlock",
													"src": "1912:28:7",
													"statements": [
														{
															"nativeSrc": "1922:12:7",
															"nodeType": "YulAssignment",
															"src": "1922:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:7",
																"nodeType": "YulIdentifier",
																"src": "1929:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:7",
														"nodeType": "YulTypedName",
														"src": "1898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:7",
														"nodeType": "YulTypedName",
														"src": "1908:3:7",
														"type": ""
													}
												],
												"src": "1865:75:7"
											},
											{
												"body": {
													"nativeSrc": "2022:193:7",
													"nodeType": "YulBlock",
													"src": "2022:193:7",
													"statements": [
														{
															"nativeSrc": "2032:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:7"
																},
																"nativeSrc": "2056:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:7",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:7"
																				},
																				"nativeSrc": "2145:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:7"
																				},
																				"nativeSrc": "2166:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:7"
																		},
																		"nativeSrc": "2117:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:7"
																},
																"nativeSrc": "2104:105:7",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:7"
															},
															"nativeSrc": "2104:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:7",
														"nodeType": "YulTypedName",
														"src": "1999:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:7",
														"nodeType": "YulTypedName",
														"src": "2005:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:7",
														"nodeType": "YulTypedName",
														"src": "2013:7:7",
														"type": ""
													}
												],
												"src": "1946:269:7"
											},
											{
												"body": {
													"nativeSrc": "2270:24:7",
													"nodeType": "YulBlock",
													"src": "2270:24:7",
													"statements": [
														{
															"nativeSrc": "2280:8:7",
															"nodeType": "YulAssignment",
															"src": "2280:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:7",
																"nodeType": "YulLiteral",
																"src": "2287:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:7",
														"nodeType": "YulTypedName",
														"src": "2266:3:7",
														"type": ""
													}
												],
												"src": "2221:73:7"
											},
											{
												"body": {
													"nativeSrc": "2353:136:7",
													"nodeType": "YulBlock",
													"src": "2353:136:7",
													"statements": [
														{
															"nativeSrc": "2363:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:7"
																},
																"nativeSrc": "2377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:7"
															},
															"nativeSrc": "2418:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:7",
														"nodeType": "YulTypedName",
														"src": "2339:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:7",
														"nodeType": "YulTypedName",
														"src": "2345:6:7",
														"type": ""
													}
												],
												"src": "2300:189:7"
											},
											{
												"body": {
													"nativeSrc": "2545:136:7",
													"nodeType": "YulBlock",
													"src": "2545:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:7",
																"nodeType": "YulBlock",
																"src": "2612:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:7"
																			},
																			"nativeSrc": "2626:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:7"
																		},
																		"nativeSrc": "2626:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:7"
																},
																"nativeSrc": "2562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:7"
															},
															"nativeSrc": "2555:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:7",
																"nodeType": "YulBlock",
																"src": "2577:26:7",
																"statements": [
																	{
																		"nativeSrc": "2579:22:7",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:7"
																			},
																			"nativeSrc": "2588:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:7",
																"nodeType": "YulBlock",
																"src": "2559:2:7",
																"statements": []
															},
															"src": "2555:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:7",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:7",
														"nodeType": "YulTypedName",
														"src": "2540:3:7",
														"type": ""
													}
												],
												"src": "2495:186:7"
											},
											{
												"body": {
													"nativeSrc": "2766:464:7",
													"nodeType": "YulBlock",
													"src": "2766:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:7",
																"nodeType": "YulBlock",
																"src": "2792:431:7",
																"statements": [
																	{
																		"nativeSrc": "2806:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:7"
																			},
																			"nativeSrc": "2822:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:7",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:7"
																					},
																					"nativeSrc": "2906:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:7"
																			},
																			"nativeSrc": "2892:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:7",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:7",
																			"nodeType": "YulBlock",
																			"src": "3093:27:7",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:7",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:7",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:7"
																			},
																			"nativeSrc": "3074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:7"
																		},
																		"nativeSrc": "3071:49:7",
																		"nodeType": "YulIf",
																		"src": "3071:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:7"
																							},
																							"nativeSrc": "3189:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:7"
																					},
																					"nativeSrc": "3175:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:7"
																			},
																			"nativeSrc": "3133:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:7"
																		},
																		"nativeSrc": "3133:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:7"
																},
																"nativeSrc": "2780:11:7",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:7"
															},
															"nativeSrc": "2777:446:7",
															"nodeType": "YulIf",
															"src": "2777:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:7",
														"nodeType": "YulTypedName",
														"src": "2742:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:7",
														"nodeType": "YulTypedName",
														"src": "2749:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:7",
														"nodeType": "YulTypedName",
														"src": "2754:10:7",
														"type": ""
													}
												],
												"src": "2687:543:7"
											},
											{
												"body": {
													"nativeSrc": "3299:54:7",
													"nodeType": "YulBlock",
													"src": "3299:54:7",
													"statements": [
														{
															"nativeSrc": "3309:37:7",
															"nodeType": "YulAssignment",
															"src": "3309:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:7"
																},
																"nativeSrc": "3330:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:7",
														"nodeType": "YulTypedName",
														"src": "3274:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:7",
														"nodeType": "YulTypedName",
														"src": "3280:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:7",
														"nodeType": "YulTypedName",
														"src": "3290:8:7",
														"type": ""
													}
												],
												"src": "3236:117:7"
											},
											{
												"body": {
													"nativeSrc": "3410:118:7",
													"nodeType": "YulBlock",
													"src": "3410:118:7",
													"statements": [
														{
															"nativeSrc": "3420:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:7"
																				},
																				"nativeSrc": "3465:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:7"
																				},
																				"nativeSrc": "3480:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:7"
																		},
																		"nativeSrc": "3436:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:7"
																},
																"nativeSrc": "3432:56:7",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:7",
															"nodeType": "YulAssignment",
															"src": "3497:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:7"
																},
																"nativeSrc": "3507:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:7",
														"nodeType": "YulTypedName",
														"src": "3387:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:7",
														"nodeType": "YulTypedName",
														"src": "3393:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:7",
														"nodeType": "YulTypedName",
														"src": "3403:6:7",
														"type": ""
													}
												],
												"src": "3359:169:7"
											},
											{
												"body": {
													"nativeSrc": "3614:214:7",
													"nodeType": "YulBlock",
													"src": "3614:214:7",
													"statements": [
														{
															"nativeSrc": "3747:37:7",
															"nodeType": "YulAssignment",
															"src": "3747:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:7"
																},
																"nativeSrc": "3755:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:7"
																}
															]
														},
														{
															"nativeSrc": "3793:29:7",
															"nodeType": "YulAssignment",
															"src": "3793:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:7"
																		},
																		"nativeSrc": "3810:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:7"
																},
																"nativeSrc": "3801:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:7",
														"nodeType": "YulTypedName",
														"src": "3595:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:7",
														"nodeType": "YulTypedName",
														"src": "3601:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:7",
														"nodeType": "YulTypedName",
														"src": "3609:4:7",
														"type": ""
													}
												],
												"src": "3533:295:7"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:7",
													"nodeType": "YulBlock",
													"src": "3925:1303:7",
													"statements": [
														{
															"nativeSrc": "3936:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:7"
																},
																"nativeSrc": "3950:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:7",
																"nodeType": "YulBlock",
																"src": "4072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:7"
																			},
																			"nativeSrc": "4074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:7"
																		},
																		"nativeSrc": "4074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:7",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:7"
																},
																"nativeSrc": "4041:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:7"
															},
															"nativeSrc": "4038:56:7",
															"nodeType": "YulIf",
															"src": "4038:56:7"
														},
														{
															"nativeSrc": "4104:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:7"
																		},
																		"nativeSrc": "4144:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:7"
																},
																"nativeSrc": "4118:38:7",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:7"
																},
																"nativeSrc": "4203:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:7"
															},
															"nativeSrc": "4203:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:7"
														},
														{
															"nativeSrc": "4280:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:7",
																"nodeType": "YulLiteral",
																"src": "4297:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:7",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:7",
															"nodeType": "YulAssignment",
															"src": "4308:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:7",
																"nodeType": "YulLiteral",
																"src": "4321:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:7",
																		"nodeType": "YulBlock",
																		"src": "4372:611:7",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:7",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:7"
																							},
																							"nativeSrc": "4413:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:7"
																					},
																					"nativeSrc": "4401:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:7",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:7"
																					},
																					"nativeSrc": "4451:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:7",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:7",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:7",
																					"nodeType": "YulBlock",
																					"src": "4569:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:7"
																												},
																												"nativeSrc": "4608:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:7"
																										},
																										"nativeSrc": "4602:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:7"
																								},
																								"nativeSrc": "4587:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:7"
																							},
																							"nativeSrc": "4587:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:7"
																						},
																						{
																							"nativeSrc": "4646:24:7",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:7",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:7"
																								},
																								"nativeSrc": "4656:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:7",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:7",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:7"
																								},
																								"nativeSrc": "4700:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:7"
																					},
																					"nativeSrc": "4532:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:7"
																				},
																				"nativeSrc": "4524:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:7",
																					"nodeType": "YulBlock",
																					"src": "4547:21:7",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:7",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:7",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:7"
																								},
																								"nativeSrc": "4554:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:7",
																					"nodeType": "YulBlock",
																					"src": "4528:3:7",
																					"statements": []
																				},
																				"src": "4524:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:7",
																					"nodeType": "YulBlock",
																					"src": "4768:156:7",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:7"
																										},
																										"nativeSrc": "4809:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:7"
																								},
																								"nativeSrc": "4803:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:7",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:7",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:7"
																												},
																												"nativeSrc": "4891:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:7"
																										},
																										"nativeSrc": "4861:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:7"
																								},
																								"nativeSrc": "4846:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:7"
																							},
																							"nativeSrc": "4846:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:7"
																					},
																					"nativeSrc": "4748:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:7"
																				},
																				"nativeSrc": "4745:179:7",
																				"nodeType": "YulIf",
																				"src": "4745:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:7",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:7"
																									},
																									"nativeSrc": "4954:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:7",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:7"
																							},
																							"nativeSrc": "4950:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:7"
																					},
																					"nativeSrc": "4937:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:7"
																				},
																				"nativeSrc": "4937:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:7"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:7",
																	"nodeType": "YulCase",
																	"src": "4365:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:7",
																		"nodeType": "YulBlock",
																		"src": "5000:222:7",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:7",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:7",
																					"nodeType": "YulBlock",
																					"src": "5051:67:7",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:7",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:7"
																										},
																										"nativeSrc": "5084:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:7"
																								},
																								"nativeSrc": "5078:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:7"
																				},
																				"nativeSrc": "5041:77:7",
																				"nodeType": "YulIf",
																				"src": "5041:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:7"
																							},
																							"nativeSrc": "5144:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:7"
																					},
																					"nativeSrc": "5131:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:7"
																				},
																				"nativeSrc": "5131:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:7"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:7",
																	"nodeType": "YulCase",
																	"src": "4992:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:7"
																},
																"nativeSrc": "4342:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:7"
															},
															"nativeSrc": "4335:887:7",
															"nodeType": "YulSwitch",
															"src": "4335:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:7",
														"nodeType": "YulTypedName",
														"src": "3914:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:7",
														"nodeType": "YulTypedName",
														"src": "3920:3:7",
														"type": ""
													}
												],
												"src": "3833:1395:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040518060400160405280600481526020017f426d6977000000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f424d495700000000000000000000000000000000000000000000000000000000815250816003908161007f9190610311565b50806004908161008f9190610311565b5050503360055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e0565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061015257607f821691505b6020821081036101655761016461010e565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101c77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261018c565b6101d1868361018c565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61021561021061020b846101e9565b6101f2565b6101e9565b9050919050565b5f819050919050565b61022e836101fb565b61024261023a8261021c565b848454610198565b825550505050565b5f90565b61025661024a565b610261818484610225565b505050565b5b81811015610284576102795f8261024e565b600181019050610267565b5050565b601f8211156102c95761029a8161016b565b6102a38461017d565b810160208510156102b2578190505b6102c66102be8561017d565b830182610266565b50505b505050565b5f82821c905092915050565b5f6102e95f19846008026102ce565b1980831691505092915050565b5f61030183836102da565b9150826002028217905092915050565b61031a826100d7565b67ffffffffffffffff811115610333576103326100e1565b5b61033d825461013b565b610348828285610288565b5f60209050601f831160018114610379575f8415610367578287015190505b61037185826102f6565b8655506103d8565b601f1984166103878661016b565b5f5b828110156103ae57848901518255600182019150602085019450602081019050610389565b868310156103cb57848901516103c7601f8916826102da565b8355505b6001600288020188555050505b505050505050565b611114806103ed5f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c806340c10f191161006f57806340c10f191461018e57806370a08231146101aa57806395d89b41146101da578063a9059cbb146101f8578063d7fc5b1514610228578063dd62ed3e14610258576100b2565b806306fdde03146100b657806307546172146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce56714610170575b5f80fd5b6100be610288565b6040516100cb9190610cff565b60405180910390f35b6100dc610318565b6040516100e99190610d5e565b60405180910390f35b61010c60048036038101906101079190610dd8565b61033d565b6040516101199190610e30565b60405180910390f35b61012a61035f565b6040516101379190610e58565b60405180910390f35b61015a60048036038101906101559190610e71565b610368565b6040516101679190610e30565b60405180910390f35b610178610396565b6040516101859190610edc565b60405180910390f35b6101a860048036038101906101a39190610dd8565b61039e565b005b6101c460048036038101906101bf9190610ef5565b61043b565b6040516101d19190610e58565b60405180910390f35b6101e2610480565b6040516101ef9190610cff565b60405180910390f35b610212600480360381019061020d9190610dd8565b610510565b60405161021f9190610e30565b60405180910390f35b610242600480360381019061023d9190610ef5565b610532565b60405161024f9190610e30565b60405180910390f35b610272600480360381019061026d9190610f20565b61060b565b60405161027f9190610e58565b60405180910390f35b60606003805461029790610f8b565b80601f01602080910402602001604051908101604052809291908181526020018280546102c390610f8b565b801561030e5780601f106102e55761010080835404028352916020019161030e565b820191905f5260205f20905b8154815290600101906020018083116102f157829003601f168201915b5050505050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8061034761068d565b9050610354818585610694565b600191505092915050565b5f600254905090565b5f8061037261068d565b905061037f8582856106a6565b61038a858585610738565b60019150509392505050565b5f6012905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104249061102b565b60405180910390fd5b6104378282610828565b5050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606004805461048f90610f8b565b80601f01602080910402602001604051908101604052809291908181526020018280546104bb90610f8b565b80156105065780601f106104dd57610100808354040283529160200191610506565b820191905f5260205f20905b8154815290600101906020018083116104e957829003601f168201915b5050505050905090565b5f8061051a61068d565b9050610527818585610738565b600191505092915050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b99061102b565b60405180910390fd5b8160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6106a183838360016108a7565b505050565b5f6106b1848461060b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107325781811015610723578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161071a93929190611049565b60405180910390fd5b61073184848484035f6108a7565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107a8575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161079f9190610d5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610818575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161080f9190610d5e565b60405180910390fd5b610823838383610a76565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610898575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161088f9190610d5e565b60405180910390fd5b6108a35f8383610a76565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610917575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161090e9190610d5e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610987575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161097e9190610d5e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610a70578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a679190610e58565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ac6578060025f828254610aba91906110ab565b92505081905550610b94565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610b4f578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610b4693929190611049565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bdb578060025f8282540392505081905550610c25565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c829190610e58565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610cd182610c8f565b610cdb8185610c99565b9350610ceb818560208601610ca9565b610cf481610cb7565b840191505092915050565b5f6020820190508181035f830152610d178184610cc7565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d4882610d1f565b9050919050565b610d5881610d3e565b82525050565b5f602082019050610d715f830184610d4f565b92915050565b5f80fd5b610d8481610d3e565b8114610d8e575f80fd5b50565b5f81359050610d9f81610d7b565b92915050565b5f819050919050565b610db781610da5565b8114610dc1575f80fd5b50565b5f81359050610dd281610dae565b92915050565b5f8060408385031215610dee57610ded610d77565b5b5f610dfb85828601610d91565b9250506020610e0c85828601610dc4565b9150509250929050565b5f8115159050919050565b610e2a81610e16565b82525050565b5f602082019050610e435f830184610e21565b92915050565b610e5281610da5565b82525050565b5f602082019050610e6b5f830184610e49565b92915050565b5f805f60608486031215610e8857610e87610d77565b5b5f610e9586828701610d91565b9350506020610ea686828701610d91565b9250506040610eb786828701610dc4565b9150509250925092565b5f60ff82169050919050565b610ed681610ec1565b82525050565b5f602082019050610eef5f830184610ecd565b92915050565b5f60208284031215610f0a57610f09610d77565b5b5f610f1784828501610d91565b91505092915050565b5f8060408385031215610f3657610f35610d77565b5b5f610f4385828601610d91565b9250506020610f5485828601610d91565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610fa257607f821691505b602082108103610fb557610fb4610f5e565b5b50919050565b7f4572726f722c206d73672e73656e646572206973206e6f7420746865206d696e5f8201527f7465720000000000000000000000000000000000000000000000000000000000602082015250565b5f611015602383610c99565b915061102082610fbb565b604082019050919050565b5f6020820190508181035f83015261104281611009565b9050919050565b5f60608201905061105c5f830186610d4f565b6110696020830185610e49565b6110766040830184610e49565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110b582610da5565b91506110c083610da5565b92508282019050808211156110d8576110d761107e565b5b9291505056fea26469706673582212205b4b5d3f81501c2285b23663763d3599d4a232a210d527ec887d68f4bc8c663464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x426D697700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x424D495700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7F SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x311 JUMP JUMPDEST POP POP POP CALLER PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x3E0 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x152 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x165 JUMPI PUSH2 0x164 PUSH2 0x10E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1C7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x18C JUMP JUMPDEST PUSH2 0x1D1 DUP7 DUP4 PUSH2 0x18C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x215 PUSH2 0x210 PUSH2 0x20B DUP5 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x1F2 JUMP JUMPDEST PUSH2 0x1E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22E DUP4 PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23A DUP3 PUSH2 0x21C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x198 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x256 PUSH2 0x24A JUMP JUMPDEST PUSH2 0x261 DUP2 DUP5 DUP5 PUSH2 0x225 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x284 JUMPI PUSH2 0x279 PUSH0 DUP3 PUSH2 0x24E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x267 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2C9 JUMPI PUSH2 0x29A DUP2 PUSH2 0x16B JUMP JUMPDEST PUSH2 0x2A3 DUP5 PUSH2 0x17D JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2B2 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2C6 PUSH2 0x2BE DUP6 PUSH2 0x17D JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x266 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2E9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2CE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x301 DUP4 DUP4 PUSH2 0x2DA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x31A DUP3 PUSH2 0xD7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x333 JUMPI PUSH2 0x332 PUSH2 0xE1 JUMP JUMPDEST JUMPDEST PUSH2 0x33D DUP3 SLOAD PUSH2 0x13B JUMP JUMPDEST PUSH2 0x348 DUP3 DUP3 DUP6 PUSH2 0x288 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x379 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x367 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x371 DUP6 DUP3 PUSH2 0x2F6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x387 DUP7 PUSH2 0x16B JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3AE JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x389 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3CB JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3C7 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2DA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1114 DUP1 PUSH2 0x3ED PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xD7FC5B15 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x258 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x39E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x297 SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C3 SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x347 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH2 0x354 DUP2 DUP6 DUP6 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x372 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH2 0x37F DUP6 DUP3 DUP6 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x38A DUP6 DUP6 DUP6 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x437 DUP3 DUP3 PUSH2 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x48F SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BB SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x506 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x506 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51A PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH2 0x527 DUP2 DUP6 DUP6 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B1 DUP5 DUP5 PUSH2 0x60B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x732 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x723 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x731 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x818 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x823 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x898 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A3 PUSH0 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x917 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x987 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97E SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA70 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x10AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB94 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC25 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD1 DUP3 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xCDB DUP2 DUP6 PUSH2 0xC99 JUMP JUMPDEST SWAP4 POP PUSH2 0xCEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0xCB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD17 DUP2 DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD48 DUP3 PUSH2 0xD1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD58 DUP2 PUSH2 0xD3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD71 PUSH0 DUP4 ADD DUP5 PUSH2 0xD4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xD3E JUMP JUMPDEST DUP2 EQ PUSH2 0xD8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9F DUP2 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD2 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEE JUMPI PUSH2 0xDED PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFB DUP6 DUP3 DUP7 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE0C DUP6 DUP3 DUP7 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2A DUP2 PUSH2 0xE16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE43 PUSH0 DUP4 ADD DUP5 PUSH2 0xE21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE52 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH0 DUP4 ADD DUP5 PUSH2 0xE49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xE87 PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE95 DUP7 DUP3 DUP8 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEA6 DUP7 DUP3 DUP8 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEB7 DUP7 DUP3 DUP8 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED6 DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEEF PUSH0 DUP4 ADD DUP5 PUSH2 0xECD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF17 DUP5 DUP3 DUP6 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF43 DUP6 DUP3 DUP7 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF54 DUP6 DUP3 DUP7 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722C206D73672E73656E646572206973206E6F7420746865206D696E PUSH0 DUP3 ADD MSTORE PUSH32 0x7465720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1015 PUSH1 0x23 DUP4 PUSH2 0xC99 JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 DUP3 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1042 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x105C PUSH0 DUP4 ADD DUP7 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x1069 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x1076 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE49 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10B5 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C0 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x107E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0x4B TSTORE EXTCODEHASH DUP2 POP SHR 0x22 DUP6 0xB2 CALLDATASIZE PUSH4 0x763D3599 0xD4 LOG2 ORIGIN LOG2 LT 0xD5 0x27 0xEC DUP9 PUSH30 0x68F4BC8C663464736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "124:723:6:-:0;;;1601:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;382:10:6::1;373:6;;:19;;;;;;;;;;;;;;;;;;124:723:::0;;7:99:7;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;124:723:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 1684,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 2215,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 2088,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": 1677,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 1702,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 1848,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 2678,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": 1547,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 829,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": 1083,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": 918,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1221": {
									"entryPoint": 926,
									"id": 1221,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@minter_1187": {
									"entryPoint": 792,
									"id": 1187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_197": {
									"entryPoint": 648,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@passMinterRole_1243": {
									"entryPoint": 1330,
									"id": 1243,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 1152,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": 863,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 872,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 1296,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4169,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 3979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4222,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3447,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8278:7",
										"nodeType": "YulBlock",
										"src": "0:8278:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1287:81:7",
													"nodeType": "YulBlock",
													"src": "1287:81:7",
													"statements": [
														{
															"nativeSrc": "1297:65:7",
															"nodeType": "YulAssignment",
															"src": "1297:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1312:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1312:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1319:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1319:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:7"
																},
																"nativeSrc": "1308:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1297:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1297:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1242:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1269:5:7",
														"nodeType": "YulTypedName",
														"src": "1269:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1279:7:7",
														"nodeType": "YulTypedName",
														"src": "1279:7:7",
														"type": ""
													}
												],
												"src": "1242:126:7"
											},
											{
												"body": {
													"nativeSrc": "1419:51:7",
													"nodeType": "YulBlock",
													"src": "1419:51:7",
													"statements": [
														{
															"nativeSrc": "1429:35:7",
															"nodeType": "YulAssignment",
															"src": "1429:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1458:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1458:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1440:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:17:7"
																},
																"nativeSrc": "1440:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1429:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1429:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1374:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1401:5:7",
														"nodeType": "YulTypedName",
														"src": "1401:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1411:7:7",
														"nodeType": "YulTypedName",
														"src": "1411:7:7",
														"type": ""
													}
												],
												"src": "1374:96:7"
											},
											{
												"body": {
													"nativeSrc": "1541:53:7",
													"nodeType": "YulBlock",
													"src": "1541:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1558:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1558:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1581:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1581:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1563:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1563:17:7"
																		},
																		"nativeSrc": "1563:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1563:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1551:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1551:6:7"
																},
																"nativeSrc": "1551:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1551:37:7"
															},
															"nativeSrc": "1551:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1551:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1476:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1529:5:7",
														"nodeType": "YulTypedName",
														"src": "1529:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1536:3:7",
														"nodeType": "YulTypedName",
														"src": "1536:3:7",
														"type": ""
													}
												],
												"src": "1476:118:7"
											},
											{
												"body": {
													"nativeSrc": "1698:124:7",
													"nodeType": "YulBlock",
													"src": "1698:124:7",
													"statements": [
														{
															"nativeSrc": "1708:26:7",
															"nodeType": "YulAssignment",
															"src": "1708:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1720:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1720:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1731:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1731:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1716:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1716:3:7"
																},
																"nativeSrc": "1716:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1716:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1708:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1788:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1788:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1801:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1801:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1812:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1812:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1797:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1797:3:7"
																		},
																		"nativeSrc": "1797:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1797:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1744:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1744:43:7"
																},
																"nativeSrc": "1744:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1744:71:7"
															},
															"nativeSrc": "1744:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1744:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1600:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1670:9:7",
														"nodeType": "YulTypedName",
														"src": "1670:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1682:6:7",
														"nodeType": "YulTypedName",
														"src": "1682:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1693:4:7",
														"nodeType": "YulTypedName",
														"src": "1693:4:7",
														"type": ""
													}
												],
												"src": "1600:222:7"
											},
											{
												"body": {
													"nativeSrc": "1868:35:7",
													"nodeType": "YulBlock",
													"src": "1868:35:7",
													"statements": [
														{
															"nativeSrc": "1878:19:7",
															"nodeType": "YulAssignment",
															"src": "1878:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1894:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1888:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:7"
																},
																"nativeSrc": "1888:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1888:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1828:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1861:6:7",
														"nodeType": "YulTypedName",
														"src": "1861:6:7",
														"type": ""
													}
												],
												"src": "1828:75:7"
											},
											{
												"body": {
													"nativeSrc": "1998:28:7",
													"nodeType": "YulBlock",
													"src": "1998:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2015:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2015:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2018:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2008:6:7"
																},
																"nativeSrc": "2008:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2008:12:7"
															},
															"nativeSrc": "2008:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2008:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1909:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1909:117:7"
											},
											{
												"body": {
													"nativeSrc": "2121:28:7",
													"nodeType": "YulBlock",
													"src": "2121:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2141:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2131:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:7"
																},
																"nativeSrc": "2131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2131:12:7"
															},
															"nativeSrc": "2131:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "2131:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2032:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2032:117:7"
											},
											{
												"body": {
													"nativeSrc": "2198:79:7",
													"nodeType": "YulBlock",
													"src": "2198:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2255:16:7",
																"nodeType": "YulBlock",
																"src": "2255:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2264:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2264:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2267:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2257:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:7"
																			},
																			"nativeSrc": "2257:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2257:12:7"
																		},
																		"nativeSrc": "2257:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2257:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2221:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2221:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2246:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2246:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2228:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2228:17:7"
																				},
																				"nativeSrc": "2228:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2228:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2218:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2218:2:7"
																		},
																		"nativeSrc": "2218:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:7"
																},
																"nativeSrc": "2211:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2211:43:7"
															},
															"nativeSrc": "2208:63:7",
															"nodeType": "YulIf",
															"src": "2208:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2155:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2191:5:7",
														"nodeType": "YulTypedName",
														"src": "2191:5:7",
														"type": ""
													}
												],
												"src": "2155:122:7"
											},
											{
												"body": {
													"nativeSrc": "2335:87:7",
													"nodeType": "YulBlock",
													"src": "2335:87:7",
													"statements": [
														{
															"nativeSrc": "2345:29:7",
															"nodeType": "YulAssignment",
															"src": "2345:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2367:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2367:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:7"
																},
																"nativeSrc": "2354:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2354:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2410:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2410:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2383:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2383:26:7"
																},
																"nativeSrc": "2383:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2383:33:7"
															},
															"nativeSrc": "2383:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2383:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2283:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2313:6:7",
														"nodeType": "YulTypedName",
														"src": "2313:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2321:3:7",
														"nodeType": "YulTypedName",
														"src": "2321:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2329:5:7",
														"nodeType": "YulTypedName",
														"src": "2329:5:7",
														"type": ""
													}
												],
												"src": "2283:139:7"
											},
											{
												"body": {
													"nativeSrc": "2473:32:7",
													"nodeType": "YulBlock",
													"src": "2473:32:7",
													"statements": [
														{
															"nativeSrc": "2483:16:7",
															"nodeType": "YulAssignment",
															"src": "2483:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2494:5:7",
																"nodeType": "YulIdentifier",
																"src": "2494:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2483:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2483:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2428:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2455:5:7",
														"nodeType": "YulTypedName",
														"src": "2455:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2465:7:7",
														"nodeType": "YulTypedName",
														"src": "2465:7:7",
														"type": ""
													}
												],
												"src": "2428:77:7"
											},
											{
												"body": {
													"nativeSrc": "2554:79:7",
													"nodeType": "YulBlock",
													"src": "2554:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:7",
																"nodeType": "YulBlock",
																"src": "2611:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:7"
																			},
																			"nativeSrc": "2613:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:7"
																		},
																		"nativeSrc": "2613:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:7"
																				},
																				"nativeSrc": "2584:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:7"
																		},
																		"nativeSrc": "2574:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:7"
															},
															"nativeSrc": "2564:63:7",
															"nodeType": "YulIf",
															"src": "2564:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:7",
														"nodeType": "YulTypedName",
														"src": "2547:5:7",
														"type": ""
													}
												],
												"src": "2511:122:7"
											},
											{
												"body": {
													"nativeSrc": "2691:87:7",
													"nodeType": "YulBlock",
													"src": "2691:87:7",
													"statements": [
														{
															"nativeSrc": "2701:29:7",
															"nodeType": "YulAssignment",
															"src": "2701:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:7"
																},
																"nativeSrc": "2739:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:7"
															},
															"nativeSrc": "2739:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:7",
														"nodeType": "YulTypedName",
														"src": "2669:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:7",
														"nodeType": "YulTypedName",
														"src": "2677:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2639:139:7"
											},
											{
												"body": {
													"nativeSrc": "2867:391:7",
													"nodeType": "YulBlock",
													"src": "2867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:7",
																"nodeType": "YulBlock",
																"src": "2913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:7"
																			},
																			"nativeSrc": "2915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:7"
																		},
																		"nativeSrc": "2915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:119:7",
															"nodeType": "YulIf",
															"src": "2877:119:7"
														},
														{
															"nativeSrc": "3006:117:7",
															"nodeType": "YulBlock",
															"src": "3006:117:7",
															"statements": [
																{
																	"nativeSrc": "3021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:7"
																				},
																				"nativeSrc": "3081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:7"
																		},
																		"nativeSrc": "3060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:7",
															"nodeType": "YulBlock",
															"src": "3133:118:7",
															"statements": [
																{
																	"nativeSrc": "3148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:7"
																				},
																				"nativeSrc": "3209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:7"
																		},
																		"nativeSrc": "3188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:7",
														"nodeType": "YulTypedName",
														"src": "2829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:7",
														"nodeType": "YulTypedName",
														"src": "2840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2784:474:7"
											},
											{
												"body": {
													"nativeSrc": "3306:48:7",
													"nodeType": "YulBlock",
													"src": "3306:48:7",
													"statements": [
														{
															"nativeSrc": "3316:32:7",
															"nodeType": "YulAssignment",
															"src": "3316:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		},
																		"nativeSrc": "3334:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:7",
														"nodeType": "YulTypedName",
														"src": "3288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:7",
														"nodeType": "YulTypedName",
														"src": "3298:7:7",
														"type": ""
													}
												],
												"src": "3264:90:7"
											},
											{
												"body": {
													"nativeSrc": "3419:50:7",
													"nodeType": "YulBlock",
													"src": "3419:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:7"
																		},
																		"nativeSrc": "3441:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:7"
															},
															"nativeSrc": "3429:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:7",
														"nodeType": "YulTypedName",
														"src": "3407:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:7",
														"nodeType": "YulTypedName",
														"src": "3414:3:7",
														"type": ""
													}
												],
												"src": "3360:109:7"
											},
											{
												"body": {
													"nativeSrc": "3567:118:7",
													"nodeType": "YulBlock",
													"src": "3567:118:7",
													"statements": [
														{
															"nativeSrc": "3577:26:7",
															"nodeType": "YulAssignment",
															"src": "3577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:7"
																},
																"nativeSrc": "3585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:7",
														"nodeType": "YulTypedName",
														"src": "3562:4:7",
														"type": ""
													}
												],
												"src": "3475:210:7"
											},
											{
												"body": {
													"nativeSrc": "3756:53:7",
													"nodeType": "YulBlock",
													"src": "3756:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3773:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3778:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3778:17:7"
																		},
																		"nativeSrc": "3778:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:7"
																},
																"nativeSrc": "3766:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3766:37:7"
															},
															"nativeSrc": "3766:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3766:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3691:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:7",
														"nodeType": "YulTypedName",
														"src": "3744:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3751:3:7",
														"nodeType": "YulTypedName",
														"src": "3751:3:7",
														"type": ""
													}
												],
												"src": "3691:118:7"
											},
											{
												"body": {
													"nativeSrc": "3913:124:7",
													"nodeType": "YulBlock",
													"src": "3913:124:7",
													"statements": [
														{
															"nativeSrc": "3923:26:7",
															"nodeType": "YulAssignment",
															"src": "3923:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3935:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3935:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:7"
																},
																"nativeSrc": "3931:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3931:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3923:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3923:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:7"
																		},
																		"nativeSrc": "4012:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3959:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3959:43:7"
																},
																"nativeSrc": "3959:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3959:71:7"
															},
															"nativeSrc": "3959:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3959:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3815:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:7",
														"nodeType": "YulTypedName",
														"src": "3885:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3897:6:7",
														"nodeType": "YulTypedName",
														"src": "3897:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3908:4:7",
														"nodeType": "YulTypedName",
														"src": "3908:4:7",
														"type": ""
													}
												],
												"src": "3815:222:7"
											},
											{
												"body": {
													"nativeSrc": "4143:519:7",
													"nodeType": "YulBlock",
													"src": "4143:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4189:83:7",
																"nodeType": "YulBlock",
																"src": "4189:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4191:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4191:77:7"
																			},
																			"nativeSrc": "4191:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4191:79:7"
																		},
																		"nativeSrc": "4191:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4164:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4164:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4160:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4160:3:7"
																		},
																		"nativeSrc": "4160:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4185:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4156:3:7"
																},
																"nativeSrc": "4156:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4156:32:7"
															},
															"nativeSrc": "4153:119:7",
															"nodeType": "YulIf",
															"src": "4153:119:7"
														},
														{
															"nativeSrc": "4282:117:7",
															"nodeType": "YulBlock",
															"src": "4282:117:7",
															"statements": [
																{
																	"nativeSrc": "4297:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4297:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4311:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4311:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4301:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4301:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4326:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4326:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4361:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4361:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4372:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4372:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4357:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4357:3:7"
																				},
																				"nativeSrc": "4357:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4357:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4381:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4381:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4336:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4336:20:7"
																		},
																		"nativeSrc": "4336:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4326:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4326:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4409:118:7",
															"nodeType": "YulBlock",
															"src": "4409:118:7",
															"statements": [
																{
																	"nativeSrc": "4424:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4424:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4438:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4438:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4428:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4428:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4454:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4454:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4489:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4489:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4500:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4500:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4485:3:7"
																				},
																				"nativeSrc": "4485:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4485:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4509:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4509:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4464:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4464:20:7"
																		},
																		"nativeSrc": "4464:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4454:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4454:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4537:118:7",
															"nodeType": "YulBlock",
															"src": "4537:118:7",
															"statements": [
																{
																	"nativeSrc": "4552:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4552:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4566:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4556:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4556:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4582:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4582:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4617:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4617:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4628:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4628:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4613:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4613:3:7"
																				},
																				"nativeSrc": "4613:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4613:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4637:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4637:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4592:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4592:20:7"
																		},
																		"nativeSrc": "4592:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4592:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4582:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4582:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4043:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:7",
														"nodeType": "YulTypedName",
														"src": "4097:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4108:7:7",
														"nodeType": "YulTypedName",
														"src": "4108:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4120:6:7",
														"nodeType": "YulTypedName",
														"src": "4120:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4128:6:7",
														"nodeType": "YulTypedName",
														"src": "4128:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4136:6:7",
														"nodeType": "YulTypedName",
														"src": "4136:6:7",
														"type": ""
													}
												],
												"src": "4043:619:7"
											},
											{
												"body": {
													"nativeSrc": "4711:43:7",
													"nodeType": "YulBlock",
													"src": "4711:43:7",
													"statements": [
														{
															"nativeSrc": "4721:27:7",
															"nodeType": "YulAssignment",
															"src": "4721:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4736:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4736:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4743:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4732:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4732:3:7"
																},
																"nativeSrc": "4732:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4732:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4721:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4721:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4668:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4693:5:7",
														"nodeType": "YulTypedName",
														"src": "4693:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4703:7:7",
														"nodeType": "YulTypedName",
														"src": "4703:7:7",
														"type": ""
													}
												],
												"src": "4668:86:7"
											},
											{
												"body": {
													"nativeSrc": "4821:51:7",
													"nodeType": "YulBlock",
													"src": "4821:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4838:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4838:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4859:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4859:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4843:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4843:15:7"
																		},
																		"nativeSrc": "4843:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4843:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4831:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:7"
																},
																"nativeSrc": "4831:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4831:35:7"
															},
															"nativeSrc": "4831:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4831:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4760:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4809:5:7",
														"nodeType": "YulTypedName",
														"src": "4809:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4816:3:7",
														"nodeType": "YulTypedName",
														"src": "4816:3:7",
														"type": ""
													}
												],
												"src": "4760:112:7"
											},
											{
												"body": {
													"nativeSrc": "4972:120:7",
													"nodeType": "YulBlock",
													"src": "4972:120:7",
													"statements": [
														{
															"nativeSrc": "4982:26:7",
															"nodeType": "YulAssignment",
															"src": "4982:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4994:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4994:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5005:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5005:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4990:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4990:3:7"
																},
																"nativeSrc": "4990:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4990:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4982:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4982:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5058:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5058:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5071:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5071:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5082:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5082:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5067:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5067:3:7"
																		},
																		"nativeSrc": "5067:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5067:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5018:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5018:39:7"
																},
																"nativeSrc": "5018:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5018:67:7"
															},
															"nativeSrc": "5018:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5018:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4878:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:7",
														"nodeType": "YulTypedName",
														"src": "4944:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4956:6:7",
														"nodeType": "YulTypedName",
														"src": "4956:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4967:4:7",
														"nodeType": "YulTypedName",
														"src": "4967:4:7",
														"type": ""
													}
												],
												"src": "4878:214:7"
											},
											{
												"body": {
													"nativeSrc": "5164:263:7",
													"nodeType": "YulBlock",
													"src": "5164:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:7",
																"nodeType": "YulBlock",
																"src": "5210:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:7"
																			},
																			"nativeSrc": "5212:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:7"
																		},
																		"nativeSrc": "5212:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:7"
																		},
																		"nativeSrc": "5181:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:7"
																},
																"nativeSrc": "5177:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:7"
															},
															"nativeSrc": "5174:119:7",
															"nodeType": "YulIf",
															"src": "5174:119:7"
														},
														{
															"nativeSrc": "5303:117:7",
															"nodeType": "YulBlock",
															"src": "5303:117:7",
															"statements": [
																{
																	"nativeSrc": "5318:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:7"
																				},
																				"nativeSrc": "5378:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:7"
																		},
																		"nativeSrc": "5357:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5098:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5134:9:7",
														"nodeType": "YulTypedName",
														"src": "5134:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5145:7:7",
														"nodeType": "YulTypedName",
														"src": "5145:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5157:6:7",
														"nodeType": "YulTypedName",
														"src": "5157:6:7",
														"type": ""
													}
												],
												"src": "5098:329:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6531:116:7",
													"nodeType": "YulBlock",
													"src": "6531:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6553:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6553:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6561:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6561:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6549:3:7"
																		},
																		"nativeSrc": "6549:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6549:14:7"
																	},
																	{
																		"hexValue": "4572726f722c206d73672e73656e646572206973206e6f7420746865206d696e",
																		"kind": "string",
																		"nativeSrc": "6565:34:7",
																		"nodeType": "YulLiteral",
																		"src": "6565:34:7",
																		"type": "",
																		"value": "Error, msg.sender is not the min"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6542:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6542:6:7"
																},
																"nativeSrc": "6542:58:7",
																"nodeType": "YulFunctionCall",
																"src": "6542:58:7"
															},
															"nativeSrc": "6542:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "6542:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6621:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6621:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6629:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6629:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6617:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6617:3:7"
																		},
																		"nativeSrc": "6617:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6617:15:7"
																	},
																	{
																		"hexValue": "746572",
																		"kind": "string",
																		"nativeSrc": "6634:5:7",
																		"nodeType": "YulLiteral",
																		"src": "6634:5:7",
																		"type": "",
																		"value": "ter"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6610:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:7"
																},
																"nativeSrc": "6610:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6610:30:7"
															},
															"nativeSrc": "6610:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6610:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f",
												"nativeSrc": "6425:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6523:6:7",
														"nodeType": "YulTypedName",
														"src": "6523:6:7",
														"type": ""
													}
												],
												"src": "6425:222:7"
											},
											{
												"body": {
													"nativeSrc": "6799:220:7",
													"nodeType": "YulBlock",
													"src": "6799:220:7",
													"statements": [
														{
															"nativeSrc": "6809:74:7",
															"nodeType": "YulAssignment",
															"src": "6809:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6875:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6875:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6880:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6816:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6816:58:7"
																},
																"nativeSrc": "6816:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6816:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6809:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6809:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6981:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6981:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f",
																	"nativeSrc": "6892:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6892:88:7"
																},
																"nativeSrc": "6892:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6892:93:7"
															},
															"nativeSrc": "6892:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6892:93:7"
														},
														{
															"nativeSrc": "6994:19:7",
															"nodeType": "YulAssignment",
															"src": "6994:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7005:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7005:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7010:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7010:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7001:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7001:3:7"
																},
																"nativeSrc": "7001:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7001:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6994:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6994:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6653:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6787:3:7",
														"nodeType": "YulTypedName",
														"src": "6787:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6795:3:7",
														"nodeType": "YulTypedName",
														"src": "6795:3:7",
														"type": ""
													}
												],
												"src": "6653:366:7"
											},
											{
												"body": {
													"nativeSrc": "7196:248:7",
													"nodeType": "YulBlock",
													"src": "7196:248:7",
													"statements": [
														{
															"nativeSrc": "7206:26:7",
															"nodeType": "YulAssignment",
															"src": "7206:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7218:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7218:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7229:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7229:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7214:3:7"
																},
																"nativeSrc": "7214:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7214:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7206:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7253:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7264:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7264:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7249:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:7"
																		},
																		"nativeSrc": "7249:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7272:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7272:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7278:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7278:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7268:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7268:3:7"
																		},
																		"nativeSrc": "7268:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7268:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7242:6:7"
																},
																"nativeSrc": "7242:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7242:47:7"
															},
															"nativeSrc": "7242:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7242:47:7"
														},
														{
															"nativeSrc": "7298:139:7",
															"nodeType": "YulAssignment",
															"src": "7298:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7432:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7432:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7306:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7306:124:7"
																},
																"nativeSrc": "7306:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7306:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7298:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7298:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7025:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7176:9:7",
														"nodeType": "YulTypedName",
														"src": "7176:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7191:4:7",
														"nodeType": "YulTypedName",
														"src": "7191:4:7",
														"type": ""
													}
												],
												"src": "7025:419:7"
											},
											{
												"body": {
													"nativeSrc": "7604:288:7",
													"nodeType": "YulBlock",
													"src": "7604:288:7",
													"statements": [
														{
															"nativeSrc": "7614:26:7",
															"nodeType": "YulAssignment",
															"src": "7614:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7626:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7626:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7637:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7637:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7622:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7622:3:7"
																},
																"nativeSrc": "7622:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7622:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7614:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7614:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7694:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7694:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7707:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7718:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7718:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7703:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:7"
																		},
																		"nativeSrc": "7703:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7703:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7650:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7650:43:7"
																},
																"nativeSrc": "7650:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7650:71:7"
															},
															"nativeSrc": "7650:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7650:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7775:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7788:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7788:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7799:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7799:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7784:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7784:3:7"
																		},
																		"nativeSrc": "7784:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7784:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7731:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7731:43:7"
																},
																"nativeSrc": "7731:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7731:72:7"
															},
															"nativeSrc": "7731:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7731:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7857:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7857:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7870:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7870:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7881:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7881:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7866:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7866:3:7"
																		},
																		"nativeSrc": "7866:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7866:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7813:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7813:43:7"
																},
																"nativeSrc": "7813:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7813:72:7"
															},
															"nativeSrc": "7813:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7813:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7450:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7560:9:7",
														"nodeType": "YulTypedName",
														"src": "7560:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7572:6:7",
														"nodeType": "YulTypedName",
														"src": "7572:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7580:6:7",
														"nodeType": "YulTypedName",
														"src": "7580:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7588:6:7",
														"nodeType": "YulTypedName",
														"src": "7588:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7599:4:7",
														"nodeType": "YulTypedName",
														"src": "7599:4:7",
														"type": ""
													}
												],
												"src": "7450:442:7"
											},
											{
												"body": {
													"nativeSrc": "7926:152:7",
													"nodeType": "YulBlock",
													"src": "7926:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7943:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7943:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7946:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7946:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7936:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7936:6:7"
																},
																"nativeSrc": "7936:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7936:88:7"
															},
															"nativeSrc": "7936:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7936:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8040:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8040:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8043:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8043:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8033:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8033:6:7"
																},
																"nativeSrc": "8033:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8033:15:7"
															},
															"nativeSrc": "8033:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8033:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8064:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8064:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8067:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8067:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8057:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8057:6:7"
																},
																"nativeSrc": "8057:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8057:15:7"
															},
															"nativeSrc": "8057:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8057:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7898:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7898:180:7"
											},
											{
												"body": {
													"nativeSrc": "8128:147:7",
													"nodeType": "YulBlock",
													"src": "8128:147:7",
													"statements": [
														{
															"nativeSrc": "8138:25:7",
															"nodeType": "YulAssignment",
															"src": "8138:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8161:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8161:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8143:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8143:17:7"
																},
																"nativeSrc": "8143:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8143:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8138:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8138:1:7"
																}
															]
														},
														{
															"nativeSrc": "8172:25:7",
															"nodeType": "YulAssignment",
															"src": "8172:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8195:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8195:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8177:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8177:17:7"
																},
																"nativeSrc": "8177:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8177:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8172:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8172:1:7"
																}
															]
														},
														{
															"nativeSrc": "8206:16:7",
															"nodeType": "YulAssignment",
															"src": "8206:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8217:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8217:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8220:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8220:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8213:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8213:3:7"
																},
																"nativeSrc": "8213:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8213:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8206:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8246:22:7",
																"nodeType": "YulBlock",
																"src": "8246:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8248:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8248:16:7"
																			},
																			"nativeSrc": "8248:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8248:18:7"
																		},
																		"nativeSrc": "8248:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8248:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8238:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8238:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8241:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8241:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8235:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8235:2:7"
																},
																"nativeSrc": "8235:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8235:10:7"
															},
															"nativeSrc": "8232:36:7",
															"nodeType": "YulIf",
															"src": "8232:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8084:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8115:1:7",
														"nodeType": "YulTypedName",
														"src": "8115:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8118:1:7",
														"nodeType": "YulTypedName",
														"src": "8118:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8124:3:7",
														"nodeType": "YulTypedName",
														"src": "8124:3:7",
														"type": ""
													}
												],
												"src": "8084:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error, msg.sender is not the min\")\n\n        mstore(add(memPtr, 32), \"ter\")\n\n    }\n\n    function abi_encode_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DA JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xD7FC5B15 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x258 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x7546172 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x170 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x288 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x33D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x155 SWAP2 SWAP1 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x178 PUSH2 0x396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x39E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x43B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D1 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EF SWAP2 SWAP1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x510 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xEF5 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF20 JUMP JUMPDEST PUSH2 0x60B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x297 SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2C3 SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x30E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2E5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x30E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2F1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x347 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH2 0x354 DUP2 DUP6 DUP6 PUSH2 0x694 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x372 PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH2 0x37F DUP6 DUP3 DUP6 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x38A DUP6 DUP6 DUP6 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x437 DUP3 DUP3 PUSH2 0x828 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x48F SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4BB SWAP1 PUSH2 0xF8B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x506 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x506 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4E9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51A PUSH2 0x68D JUMP JUMPDEST SWAP1 POP PUSH2 0x527 DUP2 DUP6 DUP6 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B9 SWAP1 PUSH2 0x102B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8A7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6B1 DUP5 DUP5 PUSH2 0x60B JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x732 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x723 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x731 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x8A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7A8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79F SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x818 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80F SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x823 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x898 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A3 PUSH0 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x917 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x987 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x97E SWAP2 SWAP1 PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xA70 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA67 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x10AB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB94 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xB4F JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB46 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1049 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDB JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC25 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xC82 SWAP2 SWAP1 PUSH2 0xE58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCD1 DUP3 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0xCDB DUP2 DUP6 PUSH2 0xC99 JUMP JUMPDEST SWAP4 POP PUSH2 0xCEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCA9 JUMP JUMPDEST PUSH2 0xCF4 DUP2 PUSH2 0xCB7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD17 DUP2 DUP5 PUSH2 0xCC7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD48 DUP3 PUSH2 0xD1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD58 DUP2 PUSH2 0xD3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD71 PUSH0 DUP4 ADD DUP5 PUSH2 0xD4F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD84 DUP2 PUSH2 0xD3E JUMP JUMPDEST DUP2 EQ PUSH2 0xD8E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9F DUP2 PUSH2 0xD7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDB7 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP2 EQ PUSH2 0xDC1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDD2 DUP2 PUSH2 0xDAE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDEE JUMPI PUSH2 0xDED PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDFB DUP6 DUP3 DUP7 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE0C DUP6 DUP3 DUP7 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2A DUP2 PUSH2 0xE16 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE43 PUSH0 DUP4 ADD DUP5 PUSH2 0xE21 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE52 DUP2 PUSH2 0xDA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE6B PUSH0 DUP4 ADD DUP5 PUSH2 0xE49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE88 JUMPI PUSH2 0xE87 PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE95 DUP7 DUP3 DUP8 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xEA6 DUP7 DUP3 DUP8 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xEB7 DUP7 DUP3 DUP8 ADD PUSH2 0xDC4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED6 DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEEF PUSH0 DUP4 ADD DUP5 PUSH2 0xECD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF0A JUMPI PUSH2 0xF09 PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF17 DUP5 DUP3 DUP6 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF35 PUSH2 0xD77 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF43 DUP6 DUP3 DUP7 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xF54 DUP6 DUP3 DUP7 ADD PUSH2 0xD91 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xFA2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFB5 JUMPI PUSH2 0xFB4 PUSH2 0xF5E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722C206D73672E73656E646572206973206E6F7420746865206D696E PUSH0 DUP3 ADD MSTORE PUSH32 0x7465720000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1015 PUSH1 0x23 DUP4 PUSH2 0xC99 JUMP JUMPDEST SWAP2 POP PUSH2 0x1020 DUP3 PUSH2 0xFBB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1042 DUP2 PUSH2 0x1009 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x105C PUSH0 DUP4 ADD DUP7 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x1069 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xE49 JUMP JUMPDEST PUSH2 0x1076 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xE49 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10B5 DUP3 PUSH2 0xDA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C0 DUP4 PUSH2 0xDA5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x107E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0x4B TSTORE EXTCODEHASH DUP2 POP SHR 0x22 DUP6 0xB2 CALLDATASIZE PUSH4 0x763D3599 0xD4 LOG2 ORIGIN LOG2 LT 0xD5 0x27 0xEC DUP9 PUSH30 0x68F4BC8C663464736F6C634300081A003300000000000000000000000000 ",
							"sourceMap": "124:723:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;243:21:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;407:174:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:255:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;243:21:6:-;;;;;;;;;;;;;:::o;3998:186:1:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;407:174:6:-;494:6;;;;;;;;;;;480:20;;:10;:20;;;472:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;551:22;557:7;566:6;551:5;:22::i;:::-;407:174;;:::o;3004:116:1:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;1981:93::-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3315:178::-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;587:255:6:-;648:4;735:6;;;;;;;;;;;721:20;;:10;:20;;;713:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;801:11;792:6;;:20;;;;;;;;;;;;;;;;;;830:4;823:11;;587:255;;;:::o;3551:140:1:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;656:96:4:-;709:7;735:10;728:17;;656:96;:::o;8726:128:1:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:477::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:126::-;1279:7;1319:42;1312:5;1308:54;1297:65;;1242:126;;;:::o;1374:96::-;1411:7;1440:24;1458:5;1440:24;:::i;:::-;1429:35;;1374:96;;;:::o;1476:118::-;1563:24;1581:5;1563:24;:::i;:::-;1558:3;1551:37;1476:118;;:::o;1600:222::-;1693:4;1731:2;1720:9;1716:18;1708:26;;1744:71;1812:1;1801:9;1797:17;1788:6;1744:71;:::i;:::-;1600:222;;;;:::o;1909:117::-;2018:1;2015;2008:12;2155:122;2228:24;2246:5;2228:24;:::i;:::-;2221:5;2218:35;2208:63;;2267:1;2264;2257:12;2208:63;2155:122;:::o;2283:139::-;2329:5;2367:6;2354:20;2345:29;;2383:33;2410:5;2383:33;:::i;:::-;2283:139;;;;:::o;2428:77::-;2465:7;2494:5;2483:16;;2428:77;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:118::-;3778:24;3796:5;3778:24;:::i;:::-;3773:3;3766:37;3691:118;;:::o;3815:222::-;3908:4;3946:2;3935:9;3931:18;3923:26;;3959:71;4027:1;4016:9;4012:17;4003:6;3959:71;:::i;:::-;3815:222;;;;:::o;4043:619::-;4120:6;4128;4136;4185:2;4173:9;4164:7;4160:23;4156:32;4153:119;;;4191:79;;:::i;:::-;4153:119;4311:1;4336:53;4381:7;4372:6;4361:9;4357:22;4336:53;:::i;:::-;4326:63;;4282:117;4438:2;4464:53;4509:7;4500:6;4489:9;4485:22;4464:53;:::i;:::-;4454:63;;4409:118;4566:2;4592:53;4637:7;4628:6;4617:9;4613:22;4592:53;:::i;:::-;4582:63;;4537:118;4043:619;;;;;:::o;4668:86::-;4703:7;4743:4;4736:5;4732:16;4721:27;;4668:86;;;:::o;4760:112::-;4843:22;4859:5;4843:22;:::i;:::-;4838:3;4831:35;4760:112;;:::o;4878:214::-;4967:4;5005:2;4994:9;4990:18;4982:26;;5018:67;5082:1;5071:9;5067:17;5058:6;5018:67;:::i;:::-;4878:214;;;;:::o;5098:329::-;5157:6;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5098:329;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:222::-;6565:34;6561:1;6553:6;6549:14;6542:58;6634:5;6629:2;6621:6;6617:15;6610:30;6425:222;:::o;6653:366::-;6795:3;6816:67;6880:2;6875:3;6816:67;:::i;:::-;6809:74;;6892:93;6981:3;6892:93;:::i;:::-;7010:2;7005:3;7001:12;6994:19;;6653:366;;;:::o;7025:419::-;7191:4;7229:2;7218:9;7214:18;7206:26;;7278:9;7272:4;7268:20;7264:1;7253:9;7249:17;7242:47;7306:131;7432:4;7306:131;:::i;:::-;7298:139;;7025:419;;;:::o;7450:442::-;7599:4;7637:2;7626:9;7622:18;7614:26;;7650:71;7718:1;7707:9;7703:17;7694:6;7650:71;:::i;:::-;7731:72;7799:2;7788:9;7784:18;7775:6;7731:72;:::i;:::-;7813;7881:2;7870:9;7866:18;7857:6;7813:72;:::i;:::-;7450:442;;;;;;:::o;7898:180::-;7946:77;7943:1;7936:88;8043:4;8040:1;8033:15;8067:4;8064:1;8057:15;8084:191;8124:3;8143:20;8161:1;8143:20;:::i;:::-;8138:25;;8177:20;8195:1;8177:20;:::i;:::-;8172:25;;8220:1;8217;8213:9;8206:16;;8241:3;8238:1;8235:10;8232:36;;;8248:18;;:::i;:::-;8232:36;8084:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "874400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2851",
								"decimals()": "449",
								"mint(address,uint256)": "infinite",
								"minter()": "2531",
								"name()": "infinite",
								"passMinterRole(address)": "27170",
								"symbol()": "infinite",
								"totalSupply()": "2499",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "426D697700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "424D495700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 382,
									"end": 392,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 373,
									"end": 379,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 373,
									"end": 379,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 373,
									"end": 392,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "85"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "27"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 124,
									"end": 847,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 124,
									"end": 847,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 847,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b4b5d3f81501c2285b23663763d3599d4a232a210d527ec887d68f4bc8c663464736f6c634300081a0033",
									".code": [
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "D7FC5B15"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "7546172"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 847,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 124,
											"end": 847,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 243,
											"end": 264,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 407,
											"end": 581,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 407,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 407,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 587,
											"end": 842,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 587,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 587,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 587,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 243,
											"end": 264,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 243,
											"end": 264,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 243,
											"end": 264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 407,
											"end": 581,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 407,
											"end": 581,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 480,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 480,
											"end": 490,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 480,
											"end": 500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 480,
											"end": 500,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 472,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 472,
											"end": 540,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 472,
											"end": 540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 551,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 557,
											"end": 564,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 551,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 551,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 551,
											"end": 573,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 551,
											"end": 573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 587,
											"end": 842,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 587,
											"end": 842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 648,
											"end": 652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 735,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 735,
											"end": 741,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 721,
											"end": 731,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 721,
											"end": 741,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 721,
											"end": 741,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 721,
											"end": 741,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 713,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 781,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 713,
											"end": 781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 801,
											"end": 812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 792,
											"end": 798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 792,
											"end": 812,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 792,
											"end": 812,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 812,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 792,
											"end": 812,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 792,
											"end": 812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 830,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 823,
											"end": 834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 823,
											"end": 834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 587,
											"end": 842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1361,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1308,
											"end": 1362,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1297,
											"end": 1362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1440,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1440,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1464,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1581,
											"end": 1586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 1563,
											"end": 1587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1563,
											"end": 1587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1561,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1733,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1720,
											"end": 1729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1794,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 1744,
											"end": 1815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 1744,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1909,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2020,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2246,
											"end": 2251,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 2228,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 2228,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2221,
											"end": 2226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2253,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2267,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2264,
											"end": 2265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 2208,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2354,
											"end": 2374,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2410,
											"end": 2415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 2383,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 2383,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2483,
											"end": 2499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3778,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3766,
											"end": 3803,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 3959,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4134,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4187,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4183,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4188,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4191,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 4153,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4311,
											"end": 4312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4381,
											"end": 4388,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4372,
											"end": 4378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4370,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4357,
											"end": 4379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4336,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4336,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4326,
											"end": 4389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4438,
											"end": 4440,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4509,
											"end": 4516,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4500,
											"end": 4506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4498,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4485,
											"end": 4507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4464,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4464,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4409,
											"end": 4527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4637,
											"end": 4644,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4617,
											"end": 4626,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4613,
											"end": 4635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 4592,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4592,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4537,
											"end": 4655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4703,
											"end": 4710,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4747,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4736,
											"end": 4741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4732,
											"end": 4748,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4721,
											"end": 4748,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4859,
											"end": 4864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 4843,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4843,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4841,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 4971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5007,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5084,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5064,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5018,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5018,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4878,
											"end": 5092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5098,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6647,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6425,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6599,
											"name": "PUSH",
											"source": 7,
											"value": "4572726F722C206D73672E73656E646572206973206E6F7420746865206D696E"
										},
										{
											"begin": 6561,
											"end": 6562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6553,
											"end": 6559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6563,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6542,
											"end": 6600,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6634,
											"end": 6639,
											"name": "PUSH",
											"source": 7,
											"value": "7465720000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6629,
											"end": 6631,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6621,
											"end": 6627,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6632,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 7019,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6653,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6880,
											"end": 6882,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 6816,
											"end": 6883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6816,
											"end": 6883,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6816,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6981,
											"end": 6984,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6892,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6892,
											"end": 6985,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6892,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7012,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7005,
											"end": 7008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 7019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 7019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 7019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7444,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 7025,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7231,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7218,
											"end": 7227,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7214,
											"end": 7232,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7287,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7272,
											"end": 7276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7288,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7264,
											"end": 7265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7242,
											"end": 7289,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 7432,
											"end": 7436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7306,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7437,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 7306,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7437,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7298,
											"end": 7437,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7444,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7444,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7444,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7599,
											"end": 7603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7639,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7614,
											"end": 7640,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7650,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7718,
											"end": 7719,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7716,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7720,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7694,
											"end": 7700,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7650,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 7650,
											"end": 7721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7650,
											"end": 7721,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7650,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7799,
											"end": 7801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7784,
											"end": 7802,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7731,
											"end": 7803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7731,
											"end": 7803,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 7731,
											"end": 7803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7881,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7879,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7866,
											"end": 7884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7857,
											"end": 7863,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7813,
											"end": 7885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 7813,
											"end": 7885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7450,
											"end": 7892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 8078,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7898,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7946,
											"end": 8023,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7943,
											"end": 7944,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7936,
											"end": 8024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8043,
											"end": 8047,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8040,
											"end": 8041,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8033,
											"end": 8048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8064,
											"end": 8065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8072,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8275,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8084,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8127,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8161,
											"end": 8162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8143,
											"end": 8163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8143,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8138,
											"end": 8163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8195,
											"end": 8196,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 8177,
											"end": 8197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8177,
											"end": 8197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8172,
											"end": 8197,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8172,
											"end": 8197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8221,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8217,
											"end": 8218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8222,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8206,
											"end": 8222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8241,
											"end": 8244,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8238,
											"end": 8239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8235,
											"end": 8245,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8268,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8232,
											"end": 8268,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 8248,
											"end": 8266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8268,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 8232,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8275,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8275,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8084,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Bank.sol",
								"contracts/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"minter()": "07546172",
							"name()": "06fdde03",
							"passMinterRole(address)": "d7fc5b15",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nuevoMinter\",\"type\":\"address\"}],\"name\":\"passMinterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Token.sol\":\"Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Token.sol\":{\"keccak256\":\"0xe2a2545df3f9587cda12a0a1fae959530d50f5b5c8f64707991c63b60068a311\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d98f423a0942cb3165ae75a88535b8be513d3b72de1d27610d52b43fb113f5b6\",\"dweb:/ipfs/QmSerK1QUfjV8xT3aQAutUqnrzA2YBWWc2KJ3Qzmvz3u4H\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/Token.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/Token.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/Token.sol:Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/Token.sol:Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/Token.sol:Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1187,
								"contract": "contracts/Token.sol:Token",
								"label": "minter",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10619:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10637:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10656:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10633:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10663:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10715:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10724:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10688:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10813:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10820:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10829:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10848:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10804:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9788:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10790:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/Bank.sol": {
				"ast": {
					"absolutePath": "contracts/Bank.sol",
					"exportedSymbols": {
						"Bank": [
							1180
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Token": [
							1244
						]
					},
					"id": 1181,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "37:24:5"
						},
						{
							"absolutePath": "contracts/Token.sol",
							"file": "./Token.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1181,
							"sourceUnit": 1245,
							"src": "63:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Bank",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1180,
							"linearizedBaseContracts": [
								1180
							],
							"name": "Bank",
							"nameLocation": "97:4:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 791,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "164:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "150:19:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Token_$1244",
										"typeString": "contract Token"
									},
									"typeName": {
										"id": 790,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 789,
											"name": "Token",
											"nameLocations": [
												"150:5:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1244,
											"src": "150:5:5"
										},
										"referencedDeclaration": 1244,
										"src": "150:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Token_$1244",
											"typeString": "contract Token"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "249ee9e1",
									"id": 795,
									"mutability": "mutable",
									"name": "clientsBalanceBNB",
									"nameLocation": "236:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "204:49:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 794,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "204:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 793,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "223:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dcc52a48",
									"id": 799,
									"mutability": "mutable",
									"name": "specialClientsBalanceBNB",
									"nameLocation": "292:24:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "260:56:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 798,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 796,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "268:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "260:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 797,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "279:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dff05f82",
									"id": 803,
									"mutability": "mutable",
									"name": "depositTimeStamp",
									"nameLocation": "357:16:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "325:48:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 802,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 800,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 801,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "726fe82b",
									"id": 807,
									"mutability": "mutable",
									"name": "specialDepositTimeStamp",
									"nameLocation": "412:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "380:55:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 806,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 804,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "388:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "380:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 805,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "399:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73732024",
									"id": 811,
									"mutability": "mutable",
									"name": "isDeposited",
									"nameLocation": "476:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "444:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 810,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 808,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "452:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "444:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 809,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "463:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8ce5fcc9",
									"id": 815,
									"mutability": "mutable",
									"name": "isSpecialDeposited",
									"nameLocation": "526:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "494:50:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 814,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 812,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "502:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "494:24:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 813,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "513:4:5",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3f00674",
									"id": 821,
									"mutability": "mutable",
									"name": "feeReceiver",
									"nameLocation": "726:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "703:88:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 816,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:15:5",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307835306433623834613262313738376237373034444435306336373733336236623542323933363239",
												"id": 819,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "748:42:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x50d3b84a2b1787b7704DD50c67733b6b5B293629"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 818,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "740:8:5",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 817,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "740:8:5",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 820,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "740:51:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8bc7e8c4",
									"id": 824,
									"mutability": "mutable",
									"name": "withdrawalFee",
									"nameLocation": "815:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "803:38:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 822,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "803:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3035",
										"id": 823,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "831:10:5",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000_by_1",
											"typeString": "int_const 50000000000000000"
										},
										"value": "0.05"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "944:87:5",
										"statements": [
											{
												"expression": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 830,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "1009:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$1244",
															"typeString": "contract Token"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 831,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "1017:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Token_$1244",
															"typeString": "contract Token"
														}
													},
													"src": "1009:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$1244",
														"typeString": "contract Token"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "1009:14:5"
											}
										]
									},
									"id": 835,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "936:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "930:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Token_$1244",
													"typeString": "contract Token"
												},
												"typeName": {
													"id": 826,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 825,
														"name": "Token",
														"nameLocations": [
															"930:5:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1244,
														"src": "930:5:5"
													},
													"referencedDeclaration": 1244,
													"src": "930:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Token_$1244",
														"typeString": "contract Token"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:14:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "944:0:5"
									},
									"scope": 1180,
									"src": "918:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "1071:193:5",
										"statements": [
											{
												"expression": {
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 838,
															"name": "clientsBalanceBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "1082:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 841,
														"indexExpression": {
															"expression": {
																"id": 839,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1100:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1104:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1100:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1082:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 842,
																"name": "clientsBalanceBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "1114:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 845,
															"indexExpression": {
																"expression": {
																	"id": 843,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1132:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1136:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1132:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1114:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1146:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1150:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1146:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1114:41:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1082:73:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "1082:73:5"
											},
											{
												"expression": {
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 851,
															"name": "depositTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "1166:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 854,
														"indexExpression": {
															"expression": {
																"id": 852,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1183:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1187:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1183:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1166:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 855,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1197:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1203:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1197:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1166:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "1166:46:5"
											},
											{
												"expression": {
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 859,
															"name": "isDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "1223:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 862,
														"indexExpression": {
															"expression": {
																"id": 860,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1235:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1239:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1235:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1223:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1249:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1223:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "1223:30:5"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1046:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:2:5"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1071:0:5"
									},
									"scope": 1180,
									"src": "1037:227:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "1311:261:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 871,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1330:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1334:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1330:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1342:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1330:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c206d6f6e746f2064656c206465706f7369746f206465626520736572206d61796f72207175652030",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1345:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464",
																"typeString": "literal_string \"El monto del deposito debe ser mayor que 0\""
															},
															"value": "El monto del deposito debe ser mayor que 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_442bba52fe266f3d72470400d50e206ae5e9f6ab26f960317bb2b20483cef464",
																"typeString": "literal_string \"El monto del deposito debe ser mayor que 0\""
															}
														],
														"id": 870,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1322:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1322:68:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "1322:68:5"
											},
											{
												"expression": {
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 878,
															"name": "specialClientsBalanceBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "1403:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 881,
														"indexExpression": {
															"expression": {
																"id": 879,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1428:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1432:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1428:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1403:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 882,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1443:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1447:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1443:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1403:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "1403:49:5"
											},
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 886,
															"name": "specialDepositTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1463:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 889,
														"indexExpression": {
															"expression": {
																"id": 887,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1487:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1491:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1487:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1463:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 890,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1501:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1507:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1501:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1463:53:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "1463:53:5"
											},
											{
												"expression": {
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 894,
															"name": "isSpecialDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "1527:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 897,
														"indexExpression": {
															"expression": {
																"id": 895,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1546:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1550:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1546:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1527:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1560:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1527:37:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "ExpressionStatement",
												"src": "1527:37:5"
											}
										]
									},
									"functionSelector": "c8510e4e",
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "specialDeposit",
									"nameLocation": "1279:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:5"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:0:5"
									},
									"scope": 1180,
									"src": "1270:302:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "1614:794:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 906,
																	"name": "isDeposited",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "1633:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 909,
																"indexExpression": {
																	"expression": {
																		"id": 907,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1645:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1649:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1645:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1633:23:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1660:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1633:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722c206e6f2070726576696f7573206465706f736974",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1666:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889",
																"typeString": "literal_string \"Error, no previous deposit\""
															},
															"value": "Error, no previous deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2cbcb5dcd66611812d803fbee7cce48d0931fc2882b4bcb61383f6330d5d3889",
																"typeString": "literal_string \"Error, no previous deposit\""
															}
														],
														"id": 905,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1625:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:70:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "1625:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 916,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1782:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1786:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1782:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 918,
																"name": "withdrawalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "1795:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1782:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5365206465626520656e7669617220616c206d656e6f7320302e303520424e4220636f6d6f20746173612064652072657469726f",
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1810:54:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661",
																"typeString": "literal_string \"Se debe enviar al menos 0.05 BNB como tasa de retiro\""
															},
															"value": "Se debe enviar al menos 0.05 BNB como tasa de retiro"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661",
																"typeString": "literal_string \"Se debe enviar al menos 0.05 BNB como tasa de retiro\""
															}
														],
														"id": 915,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1774:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1774:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "1774:91:5"
											},
											{
												"assignments": [
													924
												],
												"declarations": [
													{
														"constant": false,
														"id": 924,
														"mutability": "mutable",
														"name": "interest",
														"nameLocation": "1909:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "1904:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 923,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1904:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 929,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 926,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1939:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1943:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1939:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 925,
														"name": "_calculateInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "1920:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1904:46:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 936,
																	"name": "clientsBalanceBNB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 795,
																	"src": "2038:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"expression": {
																		"id": 937,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2056:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2060:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2056:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2038:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "302e303038",
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2069:11:5",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_8000000000000000_by_1",
																	"typeString": "int_const 8000000000000000"
																},
																"value": "0.008"
															},
															"src": "2038:42:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 932,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2017:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2021:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2017:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2009:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 930,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2009:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2009:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2029:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2009:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "2009:73:5"
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 944,
															"name": "clientsBalanceBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "2093:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 947,
														"indexExpression": {
															"expression": {
																"id": 945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2111:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2115:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2111:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2093:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2125:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2093:33:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "2093:33:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 954,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2215:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2219:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2215:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "2227:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 951,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "2204:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$1244",
																"typeString": "contract Token"
															}
														},
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2210:4:5",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "2204:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2204:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "2204:32:5"
											},
											{
												"expression": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 959,
															"name": "depositTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "2278:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 962,
														"indexExpression": {
															"expression": {
																"id": 960,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2295:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2299:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2295:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2278:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2309:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2278:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "2278:32:5"
											},
											{
												"expression": {
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 966,
															"name": "isDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "2321:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 969,
														"indexExpression": {
															"expression": {
																"id": 967,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2333:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2337:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2333:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2321:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 970,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2347:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2321:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "2321:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 976,
															"name": "withdrawalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "2386:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 973,
															"name": "feeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2365:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2377:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2365:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "2365:35:5"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1587:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1595:2:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1614:0:5"
									},
									"scope": 1180,
									"src": "1578:830:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "2455:687:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 984,
																"name": "isSpecialDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "2474:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 987,
															"indexExpression": {
																"expression": {
																	"id": 985,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2493:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2497:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2493:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2474:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207469656e657320756e206465706f7369746f20657370656369616c2061637469766f",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2506:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d",
																"typeString": "literal_string \"No tienes un deposito especial activo\""
															},
															"value": "No tienes un deposito especial activo"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c9254368d9f9c6c8d370d15d693dc3ee2ff03ea2aa9356390eef058f408939d",
																"typeString": "literal_string \"No tienes un deposito especial activo\""
															}
														],
														"id": 983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2466:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:80:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "2466:80:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 992,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2565:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2571:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2565:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 994,
																		"name": "specialDepositTimeStamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "2584:23:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 997,
																	"indexExpression": {
																		"expression": {
																			"id": 995,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2608:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2612:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2608:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2584:35:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3130",
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2622:10:5",
																	"subdenomination": "minutes",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_600_by_1",
																		"typeString": "int_const 600"
																	},
																	"value": "10"
																},
																"src": "2584:48:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2565:67:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c2072657469726f20657370656369616c20736f6c6f206573746120646973706f6e69626c652064657370756573206465203130206d696e75746f73",
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2634:63:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051",
																"typeString": "literal_string \"El retiro especial solo esta disponible despues de 10 minutos\""
															},
															"value": "El retiro especial solo esta disponible despues de 10 minutos"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ae05b85fb2d02aae5b2acbfc2910073babdc88171890b79a6a9fc2d88665051",
																"typeString": "literal_string \"El retiro especial solo esta disponible despues de 10 minutos\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2557:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2557:141:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "2557:141:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1005,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2717:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2721:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2717:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1007,
																"name": "withdrawalFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2730:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2717:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5365206465626520656e7669617220616c206d656e6f7320302e303520424e4220636f6d6f20746173612064652072657469726f",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2745:54:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661",
																"typeString": "literal_string \"Se debe enviar al menos 0.05 BNB como tasa de retiro\""
															},
															"value": "Se debe enviar al menos 0.05 BNB como tasa de retiro"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae27006a0e2dd682655597c985c8b24d655a7f7426d9acfe4589b864a4775661",
																"typeString": "literal_string \"Se debe enviar al menos 0.05 BNB como tasa de retiro\""
															}
														],
														"id": 1004,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2709:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2709:91:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2709:91:5"
											},
											{
												"assignments": [
													1013
												],
												"declarations": [
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "interest",
														"nameLocation": "2818:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1059,
														"src": "2813:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1012,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2855:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2859:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2855:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1014,
														"name": "_calculateSpecialInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "2829:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2829:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2813:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1022,
															"name": "withdrawalFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "2898:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1019,
															"name": "feeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "2877:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2889:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2877:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2877:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "2877:35:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1031,
																"name": "specialClientsBalanceBNB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 799,
																"src": "2952:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1034,
															"indexExpression": {
																"expression": {
																	"id": 1032,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2977:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2981:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2977:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2952:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1027,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2931:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2935:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2931:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2923:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1025,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2923:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2923:19:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2923:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2923:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2923:66:5"
											},
											{
												"expression": {
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1037,
															"name": "specialClientsBalanceBNB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "3002:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1040,
														"indexExpression": {
															"expression": {
																"id": 1038,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3027:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3031:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3027:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3002:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3041:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3002:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "3002:40:5"
											},
											{
												"expression": {
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1044,
															"name": "isSpecialDeposited",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3053:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1047,
														"indexExpression": {
															"expression": {
																"id": 1045,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3072:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3076:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3072:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3053:30:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3086:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3053:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "3053:38:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1054,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3113:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3117:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3113:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "interest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "3125:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1051,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Token_$1244",
																"typeString": "contract Token"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3108:4:5",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1221,
														"src": "3102:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3102:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "3102:32:5"
											}
										]
									},
									"functionSelector": "ed2d7a97",
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "specialWithdraw",
									"nameLocation": "2422:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2437:2:5"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:0:5"
									},
									"scope": 1180,
									"src": "2413:729:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "3266:55:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1065,
														"name": "clientsBalanceBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "3284:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1068,
													"indexExpression": {
														"expression": {
															"id": 1066,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3302:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3306:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3302:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3284:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1069,
												"nodeType": "Return",
												"src": "3277:36:5"
											}
										]
									},
									"functionSelector": "0497de4a",
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositBalance",
									"nameLocation": "3217:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3234:2:5"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "3260:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3260:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3259:6:5"
									},
									"scope": 1180,
									"src": "3208:113:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "3385:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1077,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3422:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3426:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3422:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1076,
														"name": "_calculateInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "3403:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3403:30:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1080,
												"nodeType": "Return",
												"src": "3396:37:5"
											}
										]
									},
									"functionSelector": "eb0c4955",
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateInterest",
									"nameLocation": "3336:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3353:2:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "3379:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1073,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3379:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3378:6:5"
									},
									"scope": 1180,
									"src": "3327:114:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "3512:62:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1087,
														"name": "specialClientsBalanceBNB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "3530:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1090,
													"indexExpression": {
														"expression": {
															"id": 1088,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3555:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3559:6:5",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3555:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3530:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1086,
												"id": 1091,
												"nodeType": "Return",
												"src": "3523:43:5"
											}
										]
									},
									"functionSelector": "12fa90a1",
									"id": 1093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositBalanceSpecial",
									"nameLocation": "3456:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3480:2:5"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "3506:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3506:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:6:5"
									},
									"scope": 1180,
									"src": "3447:127:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3645:63:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1099,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3689:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3693:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3689:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1098,
														"name": "_calculateSpecialInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "3663:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3663:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1097,
												"id": 1102,
												"nodeType": "Return",
												"src": "3656:44:5"
											}
										]
									},
									"functionSelector": "ae6441a3",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateInterestSpecial",
									"nameLocation": "3589:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3613:2:5"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3639:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3639:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3638:6:5"
									},
									"scope": 1180,
									"src": "3580:128:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "3784:323:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1112,
																"name": "isDeposited",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "3803:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1114,
															"indexExpression": {
																"id": 1113,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "3815:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3803:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207469656e657320756e206465706f7369746f2061637469766f",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3822:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63",
																"typeString": "literal_string \"No tienes un deposito activo\""
															},
															"value": "No tienes un deposito activo"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6d7f513bd491db6df6b696e74fc6ace8e624b547930f3f2b6a55471812a1c63",
																"typeString": "literal_string \"No tienes un deposito activo\""
															}
														],
														"id": 1111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3795:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3795:58:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "3795:58:5"
											},
											{
												"assignments": [
													1119
												],
												"declarations": [
													{
														"constant": false,
														"id": 1119,
														"mutability": "mutable",
														"name": "depositTotalTime",
														"nameLocation": "3871:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "3866:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1118,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3866:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1126,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1120,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3890:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3896:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3890:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1122,
															"name": "depositTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3908:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1124,
														"indexExpression": {
															"id": 1123,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "3925:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3908:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3890:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3866:64:5"
											},
											{
												"assignments": [
													1128
												],
												"declarations": [
													{
														"constant": false,
														"id": 1128,
														"mutability": "mutable",
														"name": "interestPerSecond",
														"nameLocation": "3946:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "3941:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1127,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3941:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1137,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "313030",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3967:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1130,
																		"name": "clientsBalanceBNB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 795,
																		"src": "3973:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1132,
																	"indexExpression": {
																		"id": 1131,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "3991:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3973:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3967:29:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1134,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3966:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3331363638303137",
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4000:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31668017_by_1",
															"typeString": "int_const 31668017"
														},
														"value": "31668017"
													},
													"src": "3966:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3941:67:5"
											},
											{
												"assignments": [
													1139
												],
												"declarations": [
													{
														"constant": false,
														"id": 1139,
														"mutability": "mutable",
														"name": "interest",
														"nameLocation": "4024:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 1146,
														"src": "4019:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1138,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4019:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "interestPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "4035:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1141,
														"name": "depositTotalTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "4055:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4035:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4019:52:5"
											},
											{
												"expression": {
													"id": 1144,
													"name": "interest",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "4091:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1110,
												"id": 1145,
												"nodeType": "Return",
												"src": "4084:15:5"
											}
										]
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateInterest",
									"nameLocation": "3723:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3750:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3742:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3741:14:5"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3778:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3778:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:6:5"
									},
									"scope": 1180,
									"src": "3714:393:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "4191:247:5",
										"statements": [
											{
												"assignments": [
													1155
												],
												"declarations": [
													{
														"constant": false,
														"id": 1155,
														"mutability": "mutable",
														"name": "depositTotalTime",
														"nameLocation": "4207:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "4202:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1154,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4202:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1156,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4226:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4232:9:5",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4226:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1158,
															"name": "specialDepositTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4244:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1160,
														"indexExpression": {
															"id": 1159,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "4268:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4244:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4226:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4202:71:5"
											},
											{
												"assignments": [
													1164
												],
												"declarations": [
													{
														"constant": false,
														"id": 1164,
														"mutability": "mutable",
														"name": "interestPerSecond",
														"nameLocation": "4289:17:5",
														"nodeType": "VariableDeclaration",
														"scope": 1178,
														"src": "4284:22:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1163,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4284:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1173,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "323030",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4310:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_200_by_1",
																		"typeString": "int_const 200"
																	},
																	"value": "200"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1166,
																		"name": "specialClientsBalanceBNB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "4316:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1168,
																	"indexExpression": {
																		"id": 1167,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "4341:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4316:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4310:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1170,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4309:38:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3331363638303137",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4350:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31668017_by_1",
															"typeString": "int_const 31668017"
														},
														"value": "31668017"
													},
													"src": "4309:49:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4284:74:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1174,
														"name": "interestPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "4394:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1175,
														"name": "depositTotalTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "4414:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4394:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1177,
												"nodeType": "Return",
												"src": "4387:43:5"
											}
										]
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateSpecialInterest",
									"nameLocation": "4122:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4156:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4148:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4148:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4147:14:5"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "4185:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4185:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4184:6:5"
									},
									"scope": 1180,
									"src": "4113:325:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1181,
							"src": "88:4353:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "37:4406:5"
				},
				"id": 5
			},
			"contracts/Token.sol": {
				"ast": {
					"absolutePath": "contracts/Token.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"Token": [
							1244
						]
					},
					"id": 1245,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1182,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1245,
							"sourceUnit": 652,
							"src": "65:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1184,
										"name": "ERC20",
										"nameLocations": [
											"142:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "142:5:6"
									},
									"id": 1185,
									"nodeType": "InheritanceSpecifier",
									"src": "142:5:6"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1244,
							"linearizedBaseContracts": [
								1244,
								651,
								41,
								755,
								729,
								785
							],
							"name": "Token",
							"nameLocation": "133:5:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "07546172",
									"id": 1187,
									"mutability": "mutable",
									"name": "minter",
									"nameLocation": "258:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 1244,
									"src": "243:21:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1186,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "243:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1199,
										"nodeType": "Block",
										"src": "319:81:6",
										"statements": [
											{
												"expression": {
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "373:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1195,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "382:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "386:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "382:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "373:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "373:19:6"
											}
										]
									},
									"id": 1200,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "426d6977",
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "303:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_ab9b01565cb256d19274f1e4935686beeed2e0233fc6bf3f8351771c17c125a6",
														"typeString": "literal_string \"Bmiw\""
													},
													"value": "Bmiw"
												},
												{
													"hexValue": "424d4957",
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "311:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c87b06f02dc37c563906f2ab0093cd015a0a21b7f9533dbbdbf5a6ac5aac6f1d",
														"typeString": "literal_string \"BMIW\""
													},
													"value": "BMIW"
												}
											],
											"id": 1192,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1189,
												"name": "ERC20",
												"nameLocations": [
													"297:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "297:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "297:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "319:0:6"
									},
									"scope": 1244,
									"src": "275:125:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "461:120:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1208,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "480:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "484:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "480:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1210,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "494:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "480:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722c206d73672e73656e646572206973206e6f7420746865206d696e746572",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "502:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f",
																"typeString": "literal_string \"Error, msg.sender is not the minter\""
															},
															"value": "Error, msg.sender is not the minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f",
																"typeString": "literal_string \"Error, msg.sender is not the minter\""
															}
														],
														"id": 1207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "472:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "472:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "472:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "566:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "551:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "551:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "551:22:6"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "416:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "429:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "421:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "446:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "438:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:33:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "461:0:6"
									},
									"scope": 1244,
									"src": "407:174:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "653:189:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1229,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "721:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "725:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "721:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1231,
																"name": "minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "735:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "721:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4572726f722c206d73672e73656e646572206973206e6f7420746865206d696e746572",
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "743:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f",
																"typeString": "literal_string \"Error, msg.sender is not the minter\""
															},
															"value": "Error, msg.sender is not the minter"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57249529dbbf200001f3cc0d3786cc8abc9f3e432a3845caddb564c7f76c685f",
																"typeString": "literal_string \"Error, msg.sender is not the minter\""
															}
														],
														"id": 1228,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "713:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "713:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1235,
												"nodeType": "ExpressionStatement",
												"src": "713:68:6"
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1236,
														"name": "minter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "792:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "nuevoMinter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "801:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "792:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "792:20:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "830:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1227,
												"id": 1241,
												"nodeType": "Return",
												"src": "823:11:6"
											}
										]
									},
									"functionSelector": "d7fc5b15",
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "passMinterRole",
									"nameLocation": "596:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "nuevoMinter",
												"nameLocation": "619:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "611:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "610:21:6"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "648:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "648:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "647:6:6"
									},
									"scope": 1244,
									"src": "587:255:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1245,
							"src": "124:723:6",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "39:810:6"
				},
				"id": 6
			}
		}
	}
}